{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to THG_LIB introduction to thg_lib introduction Basic IO Receiving data Sending data Manipulating integers Processes and Basic Features Interactive Sessions Networking Secure Shell Serial Ports Project layout THG # Arquivos de configuracao, voltado para importacao da biblioteca. THG_lib #todos os modulos da bibliotecas estao nessa pasta e podem ser acessados atraves do from THG import $nome_modulo index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Introduction"},{"location":"#welcome-to-thg_lib","text":"","title":"Welcome to THG_LIB"},{"location":"#introduction-to-thg_lib","text":"introduction Basic IO Receiving data Sending data Manipulating integers Processes and Basic Features Interactive Sessions Networking Secure Shell Serial Ports","title":"introduction to thg_lib"},{"location":"#project-layout","text":"THG # Arquivos de configuracao, voltado para importacao da biblioteca. THG_lib #todos os modulos da bibliotecas estao nessa pasta e podem ser acessados atraves do from THG import $nome_modulo index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"LICENSE/","text":"MIT License Copyright (c) 2018 darkcode357 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"community/","text":"","title":"Community"},{"location":"conceptual/","text":"","title":"Conceptual"},{"location":"deployment/","text":"","title":"Deployment"},{"location":"capturetheflag/basic/identify/basic/","text":"1-IDENTIFY (SCOPE)","title":"basic"},{"location":"capturetheflag/basic/identify/basic/#1-identify-scope","text":"","title":"1-IDENTIFY (SCOPE)"},{"location":"capturetheflag/basic/identify/linux/","text":"linux NETWORK DISCOVERY Net view scan: smbtree -b smbtree -D smbtree -5 View open 5MB shares: smbclient -L <HOST NAME> smbstatus Basic ping scan: for ip in $(seq 1 254); do ping -c 1 192.168.1.$ip>/dev/null; [ $? -eq 0 ] && echo \"192.168.1. $ip UP\" 11 : ; done DHCP View DHCP lease logs: Red Hat 3: cat /var/lib/dhcpd/dhcpd. leases Ubuntu: grep -Ei 'dhcp' /var/log/syslog.1 Ubuntu DHCP logs: tail -f dhcpd. log DNS Start DNS logging: rndc querylog View DNS logs: tail -f /var/log/messages I grep named HASHING Hash all executable files in these specified locations: find /<PATHNAME TO ENUMERATE> -type f -exec mdSsum {} >> mdSsums.txt \\; mdSdeep -rs /> mdSsums.txt NETBIOS Basic nbtstat scan: nbtscan <IP ADDRESS OR RANGE> PASSWORDS Password and username guessing or checks: while read line; do username=$line; while readline; do smbclient -L <TARGET IP ADDRESS> -U $username%$line -g -d 0; echo $username:$line;done<<PASSWORDS>.txt; done<<USER NAMES>,txt","title":"linux"},{"location":"capturetheflag/basic/identify/linux/#linux","text":"","title":"linux"},{"location":"capturetheflag/basic/identify/linux/#network-discovery","text":"","title":"NETWORK DISCOVERY"},{"location":"capturetheflag/basic/identify/linux/#net-view-scan","text":"smbtree -b smbtree -D smbtree -5","title":"Net view scan:"},{"location":"capturetheflag/basic/identify/linux/#view-open-5mb-shares","text":"smbclient -L <HOST NAME> smbstatus","title":"View open 5MB shares:"},{"location":"capturetheflag/basic/identify/linux/#basic-ping-scan","text":"for ip in $(seq 1 254); do ping -c 1 192.168.1.$ip>/dev/null; [ $? -eq 0 ] && echo \"192.168.1. $ip UP\" 11 : ; done","title":"Basic ping scan:"},{"location":"capturetheflag/basic/identify/linux/#dhcp","text":"","title":"DHCP"},{"location":"capturetheflag/basic/identify/linux/#view-dhcp-lease-logs","text":"Red Hat 3: cat /var/lib/dhcpd/dhcpd. leases Ubuntu: grep -Ei 'dhcp' /var/log/syslog.1","title":"View DHCP lease logs:"},{"location":"capturetheflag/basic/identify/linux/#ubuntu-dhcp-logs","text":"tail -f dhcpd. log","title":"Ubuntu DHCP logs:"},{"location":"capturetheflag/basic/identify/linux/#dns","text":"","title":"DNS"},{"location":"capturetheflag/basic/identify/linux/#start-dns-logging","text":"rndc querylog","title":"Start DNS logging:"},{"location":"capturetheflag/basic/identify/linux/#view-dns-logs","text":"tail -f /var/log/messages I grep named","title":"View DNS logs:"},{"location":"capturetheflag/basic/identify/linux/#hashing","text":"","title":"HASHING"},{"location":"capturetheflag/basic/identify/linux/#hash-all-executable-files-in-these-specified-locations","text":"find /<PATHNAME TO ENUMERATE> -type f -exec mdSsum {} >> mdSsums.txt \\; mdSdeep -rs /> mdSsums.txt","title":"Hash all executable files in these specified locations:"},{"location":"capturetheflag/basic/identify/linux/#netbios","text":"","title":"NETBIOS"},{"location":"capturetheflag/basic/identify/linux/#basic-nbtstat-scan","text":"nbtscan <IP ADDRESS OR RANGE>","title":"Basic nbtstat scan:"},{"location":"capturetheflag/basic/identify/linux/#passwords","text":"","title":"PASSWORDS"},{"location":"capturetheflag/basic/identify/linux/#password-and-username-guessing-or-checks","text":"while read line; do username=$line; while readline; do smbclient -L <TARGET IP ADDRESS> -U $username%$line -g -d 0; echo $username:$line;done<<PASSWORDS>.txt; done<<USER NAMES>,txt","title":"Password and username guessing or checks:"},{"location":"capturetheflag/basic/identify/nessus/","text":"NESSUS Basic Nessus scan: nessus -q -x -T html <NESSUS SERVER IP ADDRESS> <NESSUS SERVER PORT 1241> <ADMIN ACCOUNT> <ADMIN>PASSWORD> <FILE WITH TARGETS>,txt <RESULTS FILENAME>.html nessus [-vnh] [-c .refile] [-VJ [-T <format>] Batch-mode scan nessus -q [-pPS] <HOST> <PORT> <USER NAME><PASSWORD> <targets-file> <result-file> Report conversion: # nessus -i in. [nsrlnbe] -oout. [xmllnsrlnbelhtmlltxt]","title":"nessus"},{"location":"capturetheflag/basic/identify/nessus/#nessus","text":"","title":"NESSUS"},{"location":"capturetheflag/basic/identify/nessus/#basic-nessus-scan","text":"nessus -q -x -T html <NESSUS SERVER IP ADDRESS> <NESSUS SERVER PORT 1241> <ADMIN ACCOUNT> <ADMIN>PASSWORD> <FILE WITH TARGETS>,txt <RESULTS FILENAME>.html nessus [-vnh] [-c .refile] [-VJ [-T <format>]","title":"Basic Nessus scan:"},{"location":"capturetheflag/basic/identify/nessus/#batch-mode-scan","text":"nessus -q [-pPS] <HOST> <PORT> <USER NAME><PASSWORD> <targets-file> <result-file>","title":"Batch-mode scan"},{"location":"capturetheflag/basic/identify/nessus/#report-conversion","text":"# nessus -i in. [nsrlnbe] -oout. [xmllnsrlnbelhtmlltxt]","title":"Report conversion:"},{"location":"capturetheflag/basic/identify/nmap/","text":"NMAP Ping sweep for network: nmap -sn -PE <IP ADDRESS OR RANGE> Scan and show open ports: nmap --open <IP ADDRESS OR RANGE> Determine open services: nmap -sV <IP ADDRESS> Scan two common TCP ports, HTTP and HTTPS: nmap -p 80,443 <IP ADDRESS OR RANGE> Scan common UDP port, DNS: nmap -sU -p 53 <IP ADDRESS OR RANGE> Scan UDP and TCP together, be verbose on a single host and include optional skip ping: nmap -v -Pn -SU -ST -p U:53,111,137,T:21-25,80,139,8080 <IP ADDRESS>","title":"nmap"},{"location":"capturetheflag/basic/identify/nmap/#nmap","text":"","title":"NMAP"},{"location":"capturetheflag/basic/identify/nmap/#ping-sweep-for-network","text":"nmap -sn -PE <IP ADDRESS OR RANGE>","title":"Ping sweep for network:"},{"location":"capturetheflag/basic/identify/nmap/#scan-and-show-open-ports","text":"nmap --open <IP ADDRESS OR RANGE>","title":"Scan and show open ports:"},{"location":"capturetheflag/basic/identify/nmap/#determine-open-services","text":"nmap -sV <IP ADDRESS>","title":"Determine open services:"},{"location":"capturetheflag/basic/identify/nmap/#scan-two-common-tcp-ports-http-and-https","text":"nmap -p 80,443 <IP ADDRESS OR RANGE>","title":"Scan two common TCP ports, HTTP and HTTPS:"},{"location":"capturetheflag/basic/identify/nmap/#scan-common-udp-port-dns","text":"nmap -sU -p 53 <IP ADDRESS OR RANGE>","title":"Scan common UDP port, DNS:"},{"location":"capturetheflag/basic/identify/nmap/#scan-udp-and-tcp-together-be-verbose-on-a-single-host-and-include-optional-skip-ping","text":"nmap -v -Pn -SU -ST -p U:53,111,137,T:21-25,80,139,8080 <IP ADDRESS>","title":"Scan UDP and TCP together, be verbose on a single host and include optional skip ping:"},{"location":"capturetheflag/basic/identify/openvas/","text":"OPENVAS Step 1: Install the server, client and plugin packages: # apt-get install openvas-server openvas-client openvas-plugins-base openvas-plugins-dfsg Step 2: Update the vulnerability database # openvas-nvt-sync Step 3: Add a user to run the client: # openvas-adduser Step 4: Login: sysadm Step 5: Authentication (pass/cert) [pass]: [HITENTER] Step 6: Login password: <PASSWORD> You will then be asked to add \"User rules\". Step 7: Allow this user to scan authorized network by typing: accept <YOUR IP ADDRESS OR RANGE> default deny Step 8: type ctrl-D to exit, and then accept. Step 9: Start the server: # service openvas-server start Step 10: Set targets to scan: Create a text file with a list of hosts/networks to scan. # vi scanme.txt Step 11: Add one host, network per line: <IP ADDRESS OR RANGE> Step 12: Run scan: # openvas-client -q 127.0.0.1 9390 sysadm nsrc+ws scanme.txt openvas-output-.html -T txt -V -x Step 13: (Optional)run scan with HTML format: # openvas-client -q 127.0.0.1 9390 sysadm nsrc+ws scanme.txt openvas-output.txt -T html -V -x","title":"openvas"},{"location":"capturetheflag/basic/identify/openvas/#openvas","text":"Step 1: Install the server, client and plugin packages: # apt-get install openvas-server openvas-client openvas-plugins-base openvas-plugins-dfsg Step 2: Update the vulnerability database # openvas-nvt-sync Step 3: Add a user to run the client: # openvas-adduser Step 4: Login: sysadm Step 5: Authentication (pass/cert) [pass]: [HITENTER] Step 6: Login password: <PASSWORD> You will then be asked to add \"User rules\". Step 7: Allow this user to scan authorized network by typing: accept <YOUR IP ADDRESS OR RANGE> default deny Step 8: type ctrl-D to exit, and then accept. Step 9: Start the server: # service openvas-server start Step 10: Set targets to scan: Create a text file with a list of hosts/networks to scan. # vi scanme.txt Step 11: Add one host, network per line: <IP ADDRESS OR RANGE> Step 12: Run scan: # openvas-client -q 127.0.0.1 9390 sysadm nsrc+ws scanme.txt openvas-output-.html -T txt -V -x Step 13: (Optional)run scan with HTML format: # openvas-client -q 127.0.0.1 9390 sysadm nsrc+ws scanme.txt openvas-output.txt -T html -V -x","title":"OPENVAS"},{"location":"capturetheflag/basic/identify/windows/","text":"NETWORK DISCOVERY Basic network discovery: C:\\> net view /all C:\\> net view \\\\<HOST NAME> Basic ping scan and write output to file: C:\\> for /L %I in (1,1,254) do ping -w 30 -n 1 192.168. l.%I I find \"Reply\" >> <OUTPUT FILENAME>.txt DHCP Enable DHCP server logging: C:\\> reg add HKLM\\System\\CurrentControlSet\\Services\\DhcpServer\\Parameters /v ActivityLogFlag /t REG_DWORD /d 1 Default Location Windows 2003/2008/2012: C:\\> %windir%\\System32\\Dhcp DNS Default location Windows 2003: C:\\> %SystemRoot%\\System32\\Dns Default location Windows 2008: C:\\> %SystemRoot%\\System32\\Winevt\\Logs\\DNSServer. evtx Default location of enhanced DNS Windows 2012 R2: C:\\> %SystemRoot%\\System32\\Winevt\\Logs\\MicrosoftWindows-DNSServer%4Analytical.etl Enable DNS Logging: C:\\> DNSCmd <DNS SERVER NAME> /config /logLevel0x8100F331 Set log location: C:\\> DNSCmd <DNS SERVER NAME> /config /LogFilePath<PATH TO LOG FILE> Set size of log file: C:\\> DNSCmd <DNS SERVER NAME> /config/logfilemaxsize 0xffffffff HASHING File Checksum Integrity Verifier (FCIV): Hash a file: C:\\> fciv.exe <FILE TO HASH> Hash all files on C:\\ into a database file: C:\\> fciv.exe c:\\ -r -mdS -xml <FILE NAME>.xml List all hashed files: C:\\> fciv.exe -list -shal -xml <FILE NAME>.xml Verify previous hashes in db with file system: C:\\> fciv.exe -v -shal -xml <FILE NAME>.xml Note: May be possible to create a master db and compare to all systems from a cmd line. Fast baseline and difference. PS C:\\> Get-FileHash <FILE TO HASH> I Format-List PS C:\\> Get-FileHash -algorithm md5 <FILE TO HASH> C:\\> certutil -hashfile <FILE TO HASH> SHAl C:\\> certutil -hashfile <FILE TO HASH> MD5 NETBIOS Basic nbtstat scan: C:\\> nbtstat -A <IP ADDRESS> Cached NetBIOS info on localhost: C:\\> nbtstat -c Script loop scan: C:\\> for /L %I in (1,1,254) do nbstat -An 192.168.l.%I USER ACTIVITY Get users logged on: C:\\> psloggedon \\\\computername Script loop scan: C:\\> for /L %i in (1,1,254) do psloggedon\\\\192.168.l.%i >> C:\\users_output.txt PASSWORDS Password guessing or checks: # for /f %i in (<PASSWORD FILE NAME>.txt) do @echo %i & net use \\\\<TARGET IP ADDRESS> %i /u:<USERNAME> 2>nul && pause # for /f %i in (<USER NAME FILE>.txt) do @(for /f %j in (<PASSWORD FILE NAME>.txt) do @echo %i:%j & @net use \\\\<TARGET IP ADDRESS> %j /u:%i 2>nul && echo %i:%j >> success.txt && net use \\\\<IP ADDRESS>/del) MICROSOFT BASELINE SECURITY ANALYZER (MBSA) Basic scan of a target IP address: C:\\> mbsacli.exe /target <TARGET IP ADDRESS> /n os+iis+sql+password Basic scan of a target IP range: C:\\> mbsacli.exe /r <IP ADDRESS RANGE> /n os+iis+sql+password Basic scan of a target domain: C:\\> mbsacli.exe /d <TARGET DOMAIN> /n os+iis+sql+password Basic scan of a target computer names in text file: C:\\> mbsacli.exe /listfile <LISTNAME OF COMPUTERNAMES>.txt /n os+iis+sql+password ACTIVE DIRECTORY INVENTORY List all OUs: C:\\> dsquery ou DC=<DOMAIN>,DC=<DOMAIN EXTENSION> List of workstations in the domain: C:\\> netdom query WORKSTATION List of servers in the domain: C:\\> netdom query SERVER List of domain controllers: C:\\> netdom query DC List of organizational units under which the specified user can create a machine object: C:\\> netdom query OU List of primary domain controller: C:\\> netdom query PDC List the domain trusts: C:\\> netdom query TRUST Query the domain for the current list of FSMO owners C:\\> netdom query FSMO List all computers from Active Directory: C:\\> dsquery COMPUTER \"OU=servers,DC=<DOMAINNAME>,DC=<DOMAIN EXTENSION>\" -o rdn -limit 0 > C:\\machines.txt List user accounts inactive longer than 3 weeks: C:\\> dsquery user domainroot -inactive 3 Find anything (or user) created on date in UTC using timestamp format YYYYMMDDHHMMSS.sZ: C:\\> dsquery * -filter\"(whenCreated>=20101022083730,0Z)\" C:\\> dsquery * -filter\"((whenCreated>=20101022083730.0Z)&(objectClass=user))II Alt option: C:\\> ldifde -d ou=<OU NAME>,dC=<DOMAINNAME>,dc=<DOMAIN EXTENSION> -l whencreated,whenchanged -p onelevel -r \"(ObjectCategory=user)\" -f <OUTPUT FILENAME> The last logon timestamp format in UTC:YYYYMMDDHHMMSS Alt option: C:\\> dsquery * dc=<DOMAIN NAME>,dc=<DOMAINEXTENSION> -filter \"(&(objectCategory=Person)(objectClass=User)(whenCreated>=20151001000000.0Z))\" Alt option: C:\\> adfind -csv -b dc=<DOMAIN NAME>,dc=<DOMAINEXTENSION> -f \"(&(objectCategory=Person)(objectClass=User)(whenCreated>=20151001000000.0Z))\" Using PowerShell, dump new Active Directory accounts in last 90 Days: PS C:\\> import-module activedirectory PS C:\\> Get-QADUser -CreatedAfter (GetDate).AddDays(-90) PS C:\\> Get-ADUser -Filter * -Properties whenCreatedI Where-Object {$_.whenCreated -ge ((GetDate).AddDays(-90)).Date}","title":"windows"},{"location":"capturetheflag/basic/identify/windows/#network-discovery","text":"","title":"NETWORK DISCOVERY"},{"location":"capturetheflag/basic/identify/windows/#basic-network-discovery","text":"C:\\> net view /all C:\\> net view \\\\<HOST NAME>","title":"Basic network discovery:"},{"location":"capturetheflag/basic/identify/windows/#basic-ping-scan-and-write-output-to-file","text":"C:\\> for /L %I in (1,1,254) do ping -w 30 -n 1 192.168. l.%I I find \"Reply\" >> <OUTPUT FILENAME>.txt","title":"Basic ping scan and write output to file:"},{"location":"capturetheflag/basic/identify/windows/#dhcp","text":"","title":"DHCP"},{"location":"capturetheflag/basic/identify/windows/#enable-dhcp-server-logging","text":"C:\\> reg add HKLM\\System\\CurrentControlSet\\Services\\DhcpServer\\Parameters /v ActivityLogFlag /t REG_DWORD /d 1","title":"Enable DHCP server logging:"},{"location":"capturetheflag/basic/identify/windows/#default-location-windows-200320082012","text":"C:\\> %windir%\\System32\\Dhcp","title":"Default Location Windows 2003/2008/2012:"},{"location":"capturetheflag/basic/identify/windows/#dns","text":"","title":"DNS"},{"location":"capturetheflag/basic/identify/windows/#default-location-windows-2003","text":"C:\\> %SystemRoot%\\System32\\Dns","title":"Default location Windows 2003:"},{"location":"capturetheflag/basic/identify/windows/#default-location-windows-2008","text":"C:\\> %SystemRoot%\\System32\\Winevt\\Logs\\DNSServer. evtx","title":"Default location Windows 2008:"},{"location":"capturetheflag/basic/identify/windows/#default-location-of-enhanced-dns-windows-2012-r2","text":"C:\\> %SystemRoot%\\System32\\Winevt\\Logs\\MicrosoftWindows-DNSServer%4Analytical.etl","title":"Default location of enhanced DNS Windows 2012 R2:"},{"location":"capturetheflag/basic/identify/windows/#enable-dns-logging","text":"C:\\> DNSCmd <DNS SERVER NAME> /config /logLevel0x8100F331","title":"Enable DNS Logging:"},{"location":"capturetheflag/basic/identify/windows/#set-log-location","text":"C:\\> DNSCmd <DNS SERVER NAME> /config /LogFilePath<PATH TO LOG FILE>","title":"Set log location:"},{"location":"capturetheflag/basic/identify/windows/#set-size-of-log-file","text":"C:\\> DNSCmd <DNS SERVER NAME> /config/logfilemaxsize 0xffffffff","title":"Set size of log file:"},{"location":"capturetheflag/basic/identify/windows/#hashing","text":"","title":"HASHING"},{"location":"capturetheflag/basic/identify/windows/#file-checksum-integrity-verifier-fciv","text":"","title":"File Checksum Integrity Verifier (FCIV):"},{"location":"capturetheflag/basic/identify/windows/#hash-a-file","text":"C:\\> fciv.exe <FILE TO HASH>","title":"Hash a file:"},{"location":"capturetheflag/basic/identify/windows/#hash-all-files-on-c-into-a-database-file","text":"C:\\> fciv.exe c:\\ -r -mdS -xml <FILE NAME>.xml","title":"Hash all files on C:\\ into a database file:"},{"location":"capturetheflag/basic/identify/windows/#list-all-hashed-files","text":"C:\\> fciv.exe -list -shal -xml <FILE NAME>.xml","title":"List all hashed files:"},{"location":"capturetheflag/basic/identify/windows/#verify-previous-hashes-in-db-with-file-system","text":"C:\\> fciv.exe -v -shal -xml <FILE NAME>.xml Note: May be possible to create a master db and compare to all systems from a cmd line. Fast baseline and difference. PS C:\\> Get-FileHash <FILE TO HASH> I Format-List PS C:\\> Get-FileHash -algorithm md5 <FILE TO HASH> C:\\> certutil -hashfile <FILE TO HASH> SHAl C:\\> certutil -hashfile <FILE TO HASH> MD5","title":"Verify previous hashes in db with file system:"},{"location":"capturetheflag/basic/identify/windows/#netbios","text":"","title":"NETBIOS"},{"location":"capturetheflag/basic/identify/windows/#basic-nbtstat-scan","text":"C:\\> nbtstat -A <IP ADDRESS>","title":"Basic nbtstat scan:"},{"location":"capturetheflag/basic/identify/windows/#cached-netbios-info-on-localhost","text":"C:\\> nbtstat -c","title":"Cached NetBIOS info on localhost:"},{"location":"capturetheflag/basic/identify/windows/#script-loop-scan","text":"C:\\> for /L %I in (1,1,254) do nbstat -An 192.168.l.%I","title":"Script loop scan:"},{"location":"capturetheflag/basic/identify/windows/#user-activity","text":"","title":"USER ACTIVITY"},{"location":"capturetheflag/basic/identify/windows/#get-users-logged-on","text":"C:\\> psloggedon \\\\computername","title":"Get users logged on:"},{"location":"capturetheflag/basic/identify/windows/#script-loop-scan_1","text":"C:\\> for /L %i in (1,1,254) do psloggedon\\\\192.168.l.%i >> C:\\users_output.txt","title":"Script loop scan:"},{"location":"capturetheflag/basic/identify/windows/#passwords","text":"","title":"PASSWORDS"},{"location":"capturetheflag/basic/identify/windows/#password-guessing-or-checks","text":"# for /f %i in (<PASSWORD FILE NAME>.txt) do @echo %i & net use \\\\<TARGET IP ADDRESS> %i /u:<USERNAME> 2>nul && pause # for /f %i in (<USER NAME FILE>.txt) do @(for /f %j in (<PASSWORD FILE NAME>.txt) do @echo %i:%j & @net use \\\\<TARGET IP ADDRESS> %j /u:%i 2>nul && echo %i:%j >> success.txt && net use \\\\<IP ADDRESS>/del) MICROSOFT BASELINE SECURITY ANALYZER (MBSA)","title":"Password guessing or checks:"},{"location":"capturetheflag/basic/identify/windows/#basic-scan-of-a-target-ip-address","text":"C:\\> mbsacli.exe /target <TARGET IP ADDRESS> /n os+iis+sql+password","title":"Basic scan of a target IP address:"},{"location":"capturetheflag/basic/identify/windows/#basic-scan-of-a-target-ip-range","text":"C:\\> mbsacli.exe /r <IP ADDRESS RANGE> /n os+iis+sql+password","title":"Basic scan of a target IP range:"},{"location":"capturetheflag/basic/identify/windows/#basic-scan-of-a-target-domain","text":"C:\\> mbsacli.exe /d <TARGET DOMAIN> /n os+iis+sql+password","title":"Basic scan of a target domain:"},{"location":"capturetheflag/basic/identify/windows/#basic-scan-of-a-target-computer-names-in-text-file","text":"C:\\> mbsacli.exe /listfile <LISTNAME OF COMPUTERNAMES>.txt /n os+iis+sql+password","title":"Basic scan of a target computer names in text file:"},{"location":"capturetheflag/basic/identify/windows/#active-directory-inventory-list-all-ous","text":"C:\\> dsquery ou DC=<DOMAIN>,DC=<DOMAIN EXTENSION>","title":"ACTIVE DIRECTORY INVENTORY List all OUs:"},{"location":"capturetheflag/basic/identify/windows/#list-of-workstations-in-the-domain","text":"C:\\> netdom query WORKSTATION","title":"List of workstations in the domain:"},{"location":"capturetheflag/basic/identify/windows/#list-of-servers-in-the-domain","text":"C:\\> netdom query SERVER","title":"List of servers in the domain:"},{"location":"capturetheflag/basic/identify/windows/#list-of-domain-controllers","text":"C:\\> netdom query DC","title":"List of domain controllers:"},{"location":"capturetheflag/basic/identify/windows/#list-of-organizational-units-under-which-the-specified-user-can-create-a-machine-object","text":"C:\\> netdom query OU","title":"List of organizational units under which the specified user can create a machine object:"},{"location":"capturetheflag/basic/identify/windows/#list-of-primary-domain-controller","text":"C:\\> netdom query PDC","title":"List of primary domain controller:"},{"location":"capturetheflag/basic/identify/windows/#list-the-domain-trusts","text":"C:\\> netdom query TRUST","title":"List the domain trusts:"},{"location":"capturetheflag/basic/identify/windows/#query-the-domain-for-the-current-list-of-fsmo-owners","text":"C:\\> netdom query FSMO","title":"Query the domain for the current list of FSMO owners"},{"location":"capturetheflag/basic/identify/windows/#list-all-computers-from-active-directory","text":"C:\\> dsquery COMPUTER \"OU=servers,DC=<DOMAINNAME>,DC=<DOMAIN EXTENSION>\" -o rdn -limit 0 > C:\\machines.txt","title":"List all computers from Active Directory:"},{"location":"capturetheflag/basic/identify/windows/#list-user-accounts-inactive-longer-than-3-weeks","text":"C:\\> dsquery user domainroot -inactive 3","title":"List user accounts inactive longer than 3 weeks:"},{"location":"capturetheflag/basic/identify/windows/#find-anything-or-user-created-on-date-in-utc-using-timestamp-format-yyyymmddhhmmsssz","text":"C:\\> dsquery * -filter\"(whenCreated>=20101022083730,0Z)\" C:\\> dsquery * -filter\"((whenCreated>=20101022083730.0Z)&(objectClass=user))II","title":"Find anything (or user) created on date in UTC using timestamp format YYYYMMDDHHMMSS.sZ:"},{"location":"capturetheflag/basic/identify/windows/#alt-option","text":"C:\\> ldifde -d ou=<OU NAME>,dC=<DOMAINNAME>,dc=<DOMAIN EXTENSION> -l whencreated,whenchanged -p onelevel -r \"(ObjectCategory=user)\" -f <OUTPUT FILENAME>","title":"Alt option:"},{"location":"capturetheflag/basic/identify/windows/#the-last-logon-timestamp-format-in-utcyyyymmddhhmmss-alt-option","text":"C:\\> dsquery * dc=<DOMAIN NAME>,dc=<DOMAINEXTENSION> -filter \"(&(objectCategory=Person)(objectClass=User)(whenCreated>=20151001000000.0Z))\"","title":"The last logon timestamp format in UTC:YYYYMMDDHHMMSS Alt option:"},{"location":"capturetheflag/basic/identify/windows/#alt-option_1","text":"C:\\> adfind -csv -b dc=<DOMAIN NAME>,dc=<DOMAINEXTENSION> -f \"(&(objectCategory=Person)(objectClass=User)(whenCreated>=20151001000000.0Z))\"","title":"Alt option:"},{"location":"capturetheflag/basic/identify/windows/#using-powershell-dump-new-active-directory-accounts-in-last-90-days","text":"PS C:\\> import-module activedirectory PS C:\\> Get-QADUser -CreatedAfter (GetDate).AddDays(-90) PS C:\\> Get-ADUser -Filter * -Properties whenCreatedI Where-Object {$_.whenCreated -ge ((GetDate).AddDays(-90)).Date}","title":"Using PowerShell, dump new Active Directory accounts in last 90 Days:"},{"location":"capturetheflag/basic/prootect_defend/windows/","text":"DISABLE/STOP SERVICES Get a list of services and disable or stop: C:\\> sc query C:\\> sc config \"<SERVICE NAME>\" start= disabled C:\\> sc stop \"<SERVICE NAME>\" C:\\> wmic service where name='<SERVICE NAME>' callChangeStartmode Disabled HOST SYSTEM FIREWALLS Show all rules: C:\\> netsh advfirewall firewall show rule name=all Set firewall on/off: C:\\> netsh advfirewall set currentprofile state on C:\\> netsh advfirewall set currentprofilefirewallpolicy blockinboundalways,allowoutbound C:\\> netsh advfirewall set publicprofile state on C:\\> netsh advfirewall set privateprofile state on C:\\> netsh advfirewall set domainprofile state on C:\\> netsh advfirewall set allprofile state on C:\\> netsh advfirewall set allprof ile state offSet firewall rules examples: C:\\> netsh advfirewall firewall add rule name=\"OpenPort 80\" dir=in action=allow protocol=TCPlocalport=80 C:\\> netsh advfirewall firewall add rule name=\"MyApplication\" dir=in action=al lowprogram=\"C:\\MyApp\\MyApp.exe\" enable=yes C:\\> netsh advfirewall firewall add rule name=\"MyApplication\" dir=in action=al lowprogram=\"C:\\MyApp\\MyApp.exe\" enable=yesremoteip=157.60.0.1,172.16.0.0/16,Local5ubnetprof i le=domain C:\\> netsh advfirewall firewall add rule name=\"MyApplication\" dir=in action=allowprogram=\"C:\\MyApp\\MyApp.exe\" enable=yesremoteip=157.60.0.1,172.16.0.0/16,LocalSubnetprofile=domain C:\\> netsh advfirewall firewall add rule name=\"MyApplication\" dir=in action=al lowprogram=\"C:\\MyApp\\MyApp.exe\" enable=yesremoteip=157.60.0.1,172.16.0.0/16,Local5ubnetprofile=private C:\\> netsh advfirewall firewall delete rulename=rule name program=\"C:\\MyApp\\MyApp.exe\" C:\\> netsh advfirewall firewall delete rulename=rule name protocol=udp localport=500 C:\\> netsh advfirewall firewall set rulegroup=\" remote desktop\" new enable=Yes prof ile=domain C:\\> netsh advfirewall firewall set rulegroup=\"remote desktop\" new enable=No profile=publicSetup togging location: C:\\> netsh advfirewall set currentprofile logging C:\\<LOCATION>\\<FILE NAME>Windows firewall tog location and settings: C:\\> more %systemroot%\\system32\\LogFiles\\Firewall\\pfirewall.log C:\\> netsh advfirewall set allprofile loggingmaxfilesize 4096 C:\\> netsh advfirewall set allprofile loggingdroppedconnections enable C:\\> netsh advfirewall set allprofile loggingallowedconnections enable Display firewall logs: PS C:\\> Get-Content$env:systemroot\\system32\\LogFiles\\Firewall\\pfirewall. log PASSWORDS Change password: C:\\> net user <USER NAME> * /domain C:\\> net user <USER NAME> <NEW PASSWORD> Change password remotely: C:\\> pspasswd.exe \\\\<IP ADDRESS or NAME OF REMOTECOMPUTER> -u <REMOTE USER NAME> -p <NEW PASSWORD> Change password remotely: PS C:\\> pspasswd.exe \\\\<IP ADDRESS or NAME OF REMOTECOMPUTER>HOST FILE Flush DNS of malicious domain/IP: C:\\> ipconfig /flushdns Flush NetBios cache of host/IP: C:\\> nbtstat -R Add new malicious domain to hosts file, and route tolocalhost: C:\\> echo 127.0.0.1 <MALICIOUS DOMAIN> >> C:\\Windows\\System32\\drivers\\etc\\hosts Check if hosts file is working, by sending ping to 127.0.0.1: C:\\> ping <MALICIOUS DOMAIN> -n 1 WHITELIST Use a Proxy Auto Config(PAC) file to create Bad URL or IP List (IE, Firefox, Chrome): function FindProxyForURL(url, host) { // II Send bad DNS name to the proxy if (dnsDomainis(host, \".badsite.com\")) return \"PROXY http:11127.0.0.1:8080\"; // II Send bad IPs to the proxy if (isinNet(myipAddress(), \"222.222.222.222\",\"255.255.255.0\")) return \"PROXY http:11127.0.0.1:8080\"; //II All other traffic bypass proxy return \"DIRECT\"; } APPLICATION RESTRICTIONS Applocker - Server 2008 R2 or Windows 7 or higher: Using GUI Wizard configure: Executable Rules (. exe, . com) DLL Rules ( .dll, .ocx) Script Rules (.psl, .bat, .cmd, .vbs, .js) Windows Install Rules ( .msi, .msp, .mst) Steps to employ Applocker (GUI is needed for digitalsigned app restrictions): Step 1: Create a new GPO. Step 2: Right-click on it to edit, and then navigate through Computer Configuration, Policies, Windows Settings, Security Settings, Application Control Policies and Applocker. Click Configure Rule Enforcement. Step 3: Under Executable Rules, check the Configured box and then make sure Enforce Rules is selected from the drop-down box. Click OK. Step 4: In the left pane, click Executable Rules. Step 5: Right-click in the right pane and select Create New Rule. Step 6: On the Before You Begin screen, click Next. Step 7: On the Permissions screen, click Next. Step 8: On the Conditions screen, select the Publisher condition and click Next. Step 9: Click the Browse button and browse to any executable file on your system. It doesn't matter which. Step 10: Drag the slider up to Any Publisher and then click Next. Step 11: Click Next on the Exceptions screen. Step 12: Name policy, Example uonly run executables that are signed\" and click Create. Step 13: If this is your first time creating an Applocker policy, Windows will prompt you to create default rule, click Yes. Step 14: Ensure Application Identity Service isRunning. C:\\> net start AppIDSvc C:\\> REG add\"HKLM\\SYSTEM\\CurrentControlSet\\services\\AppIDSvc\" /v Start /t REG_DWORD /d 2 /f Step 15: Changes require reboot. C:\\ shutdown.exe /r C:\\ shutdown.exe /r /m \\\\<IP ADDRESS OR COMPUTERNAME> /f Add the Applocker cmdlets into PowerShell: PS C:\\> import-module Applocker Gets the file information for all of the executable files and scripts in the directory C:\\Windows\\System32: PS C:\\> Get-ApplockerFileinformation -Directory C:\\Windows\\System32\\ -Recurse -FileType Exe, Script Create a Applocker Policy that allow rules for all of the executable files in C:\\Windows\\System32: PS C:\\> Get-Childitem C:\\Windows\\System32\\*,exe IGet-ApplockerFileinformation I New-ApplockerPolicy -RuleType Publisher, Hash -User Everyone -RuleNamePrefix System32 Sets the local Applocker policy to the policy specified in C:\\Policy.xml: PS C:\\> Set-AppLockerPolicy -XMLPolicy C:\\Policy.xml Uses the Applocker policy in C:\\Policy.xml to test whether calc.exe and notepad.exe are allowed to run for users who are members of the Everyone group. If you do not specify a group, the Everyone group is used by default: PS C:\\> Test-AppLockerPolicy -XMLPolicy C:\\Policy.xml -Path C:\\Windows\\System32\\calc.exe, C:\\Windows\\System32\\notepad.exe -User Everyone Review how many times a file would have been blocked from running if rules were enforced: PS C:\\> Get-ApplockerFileinformation -Eventlog -Logname \"Microsoft-Windows-Applocker\\EXE and DLL\" -EventType Audited -Statistics Creates a new Applocker policy from the auditedevents in the local Microsoft-Windows-Applocker/EXE and DLL event log, applied to and current Applocker policy will be overwritten: PS C:\\> Get-ApplockerFileinformation -Eventlog -LogPath \"Microsoft-Windows-AppLocker/EXE and DLL\" -EventType Audited I New-ApplockerPolicy -RuleType Publisher,Hash -User domain\\<GROUP> -IgnoreMissingFileinformation I Set-ApplockerPolicy -LDAP \"LDAP://<DC>,<DOMAIN>.com/CN={31B2F340-016D11D2-945F00C04FB984F9},CN=Policies,CN=System,DC=<DOMAIN>,DC=com\" Export the local Applocker policy, comparing User'sexplicitly denied access to run, and output textfile: PS C:\\> Get-AppLockerPolicy -Local I TestAppLockerPolicy -Path C:\\Windows\\System32\\*,exe -User domain\\<USER NAME> -Filter Denied I Format-List -Property Path > C:\\DeniedFiles.txt Export the results of the test to a file foranalysis: PS C:\\> Get-Childitem <DirectoryPathtoReview> -Filter <FileExtensionFilter> -Recurse I Convert-Path I Test-ApplockerPolicy -XMLPolicy <PathToExportedPolicyFile> -User <domain\\username> -Filter <TypeofRuletoFilterFor> I Export-CSV <PathToExportResultsTo.CSV> GridView list of any local rules applicable: PS C:\\> Get-AppLockerPolicy -Local -Xml I OutGridView IPSEC Create a IPSEC Local Security Policy, applied to any connection, any protocol, and using a preshared key: C:\\> netsh ipsec static add filter filterlist=MyIPsecFilter srcaddr=Any dstaddr=Any protocol=ANY C:\\> netsh ipsec static add filteraction name=MyIPsecAction action=negotiate C:\\> netsh ipsec static add policy name=MyIPsecPolicy assign=yes C:\\> netsh ipsec static add rule name=MyIPsecRule policy=MyIPsecPolicy filterlist=MyIPsecFilter filteraction=MyIPsecAction conntype=all activate=yes psk=<PASSWORD> Add rule to allow web browsing port 80(HTTP) and 443(HTTPS) over IPSEC: C:\\> netsh ipsec static add filteraction name=Allow action=permit C:\\> netsh ipsec static add filter filterlist=WebFilter srcaddr=Any dstaddr=Any protocol=TCP dstport=80 C:\\> netsh ipsec static add filter filterlist=WebFilter srcaddr=Any dstaddr=Any protocol=TCP dstport=443 C:\\> netsh ipsec static add rule name=WebAllow policy=MyIPsecPolicy filterlist=WebFilter filteraction=Allow conntype=all activate=yes psk=<PASSWORD> Shows the IPSEC Local Security Policy with name \"MyIPsecPolicy\": C:\\> netsh ipsec static show policy name=MyIPsecPolicy Stop or Unassign a IPSEC Policy: C:\\> netsh ipsec static set policy name=MyIPsecPolicy Create a IPSEC Advance Firewall Rule and Policy and preshared key from and to any connections: C:\\> netsh advfirewall consec add rule name=\"IPSEC\" endpointl=any endpoint2=any action=requireinrequireout qmsecmethods=default Require IPSEC preshared key on all outgoing requests: C:\\> netsh advfirewall firewall add rule name=uIPSEC_Out\" dir=out action=allow enable=yes profile=any localip=any remoteip=any protocol=any interfacetype=any security=authenticate Create a rule for web browsing: C:\\> netsh advfirewall firewall add rule name=\"Allow Outbound Port 8011 dir=out localport=80 protocol=TCP action=allow Create a rule for DNS: C:\\> netsh advfirewall firewall add rule name=\"Allow Outbound Port 5311 dir=out localport=53 protocol=UDP action=allow Delete ISPEC Rule: C:\\> netsh advfirewall firewall delete rule name=\"IPSEC_RULE\" ACTIVE DIRECTORY (AD) - GROUP POLICY OBJECT (GPO) Get and force new policies: C:\\> gpupdate /force C:\\> gpupdate /sync Audit Success and Failure for user Bob: C:\\> auditpol /set /user:bob /category:\"DetailedTracking\" /include /success:enable /failure:enable Create an Organization Unit to move suspected or infected users and machines: C:\\> dsadd OU <QUARANTINE BAD OU> Move an active directory user object into NEW GROUP: PS C:\\> Move-ADObject 'CN=<USER NAME>,CN=<OLD USERGROUP>,DC=<OLD DOMAIN>,DC=<OLD EXTENSION>' -TargetPath 'OU=<NEW USER GROUP>,DC=<OLDDOMAIN>,DC=<OLD EXTENSION>' Alt Option: C:\\> dsmove \"CN=<USER NAME>,OU=<OLD USER OU>,DC=<OLDDOMAIN>,DC=<OLD EXTENSION>\" -newparent OU=<NEW USERGROUP>,DC=<OLD DOMAIN>,DC=<OLD EXTENSION> STAND ALONE SYSTEM - WITHOUT ACTIVE DIRECTORY (AD) Disallow running a .exe file: C:\\> reg add \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" /v DisallowRun /t REG_DWORD /d\"00000001\" /f C:\\> reg add \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\DisallowRun\" /v badfile.exe /t REG_SZ/d <BAD FILE NAME>.exe /f Disable Remote Desktop: C:\\> reg add \"HKLM\\SYSTEM\\Cu rrentCont ro lSet\\Cont ro l \\ TerminalServer\" /f /v fDenyTSConnections /t REG_DWORD /d 1 Send NTLMv2 response only/refuse LM and NTLM:(Windows 7 default) C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\ /vlmcompatibilitylevel /t REG_DWORD /d 5 /f Restrict Anonymous Access: C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa /v restrictanonymous /t REG_DWORD /d 1 /f Do not allow anonymous enumeration of SAM accounts and shares: C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa /v restrictanonymoussam /t REG_DWORD /d 1 /f Disable IPV6: C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\services\\TCPIP6\\Parameters /v DisabledComponents /t REG_DWORD /d 255 /f Disable sticky keys: C:\\> reg add \"HKCU\\ControlPanel\\Accessibility\\StickyKeys\" /v Flags /t REG_SZ/d 506 /f Disable Toggle Keys: C:\\> reg add \"HKCU\\ControlPanel \\Accessibility\\ ToggleKeys\" /v Flags /t REG_SZId 58 /f Disable Filter Keys: C:\\> reg add \"HKCU\\ControlPanel\\Accessibility\\Keyboard Response\" /v Flags /t REG_SZ /d 122 /f Disable On-screen Keyboard: C:\\> reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Authentication\\LogonUI /f /v ShowTabletKeyboard /tREG_DWORD /d 0 Disable Administrative Shares - Workstations: C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters /f /v AutoShareWks /t REG_DWORD /d 0 Disable Administrative Shares - Severs C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\ Parameters /f /v AutoShareServer /t REG_DWORD /d 0 Remove Creation of Hashes Used to Pass the Hash Attack (Requires password reset and reboot to purgeold hashes): C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa /f /v NoLMHash /t REG_DWORD /d 1 To Disable Registry Editor: (High Risk) C:\\> reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v DisableRegistryTools /t REG_DWORD /d 1 /f Disable IE Password Cache: C:\\> reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings /v DisablePasswordCaching /t REG_DWORD /d 1 /f Disable CMD prompt: C:\\> reg add HKCU\\Software\\Policies\\Microsoft\\Windows\\System /v DisableCMD /t REG_DWORD /d 1 /f Disable Admin credentials cache on host when usingRDP: C:\\> reg add HKLM\\System\\CurrentControlSet\\Control\\Lsa /v DisableRestrictedAdmin /t REG_DWORD /d 0 /f Do not process the run once list: C:\\> reg add HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer /v DisableLocalMachineRunOnce /t REG_DWORD /d 1 C:\\> reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer /v DisableLocalMachineRunOnce /t REG_DWORD /d 1 Require User Access Control (UAC) Permission: C:\\> reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v EnableLUA /t REG_DWORD /d 1 /f Change password at next logon: PS C:\\> Set-ADAccountPassword <USER> -NewPassword $newpwd -Reset -PassThru I Set-ADuser -ChangePasswordAtLogon $True Change password at next logon for OU Group: PS C:\\> Get-ADuser -filter \"department -eq '<OUGROUP>' -AND enabled -eq 'True 111 I Set-AD user -ChangePasswordAtLogon $True Enabled Firewall logging: C:\\> netsh firewall set logging droppedpacketsconnections = enable","title":"windows"},{"location":"capturetheflag/basic/prootect_defend/windows/#disablestop-services","text":"","title":"DISABLE/STOP SERVICES"},{"location":"capturetheflag/basic/prootect_defend/windows/#get-a-list-of-services-and-disable-or-stop","text":"C:\\> sc query C:\\> sc config \"<SERVICE NAME>\" start= disabled C:\\> sc stop \"<SERVICE NAME>\" C:\\> wmic service where name='<SERVICE NAME>' callChangeStartmode Disabled","title":"Get a list of services and disable or stop:"},{"location":"capturetheflag/basic/prootect_defend/windows/#host-system-firewalls","text":"","title":"HOST SYSTEM FIREWALLS"},{"location":"capturetheflag/basic/prootect_defend/windows/#show-all-rules","text":"C:\\> netsh advfirewall firewall show rule name=all","title":"Show all rules:"},{"location":"capturetheflag/basic/prootect_defend/windows/#set-firewall-onoff","text":"C:\\> netsh advfirewall set currentprofile state on C:\\> netsh advfirewall set currentprofilefirewallpolicy blockinboundalways,allowoutbound C:\\> netsh advfirewall set publicprofile state on C:\\> netsh advfirewall set privateprofile state on C:\\> netsh advfirewall set domainprofile state on C:\\> netsh advfirewall set allprofile state on C:\\> netsh advfirewall set allprof ile state","title":"Set firewall on/off:"},{"location":"capturetheflag/basic/prootect_defend/windows/#offset-firewall-rules-examples","text":"C:\\> netsh advfirewall firewall add rule name=\"OpenPort 80\" dir=in action=allow protocol=TCPlocalport=80 C:\\> netsh advfirewall firewall add rule name=\"MyApplication\" dir=in action=al lowprogram=\"C:\\MyApp\\MyApp.exe\" enable=yes C:\\> netsh advfirewall firewall add rule name=\"MyApplication\" dir=in action=al lowprogram=\"C:\\MyApp\\MyApp.exe\" enable=yesremoteip=157.60.0.1,172.16.0.0/16,Local5ubnetprof i le=domain C:\\> netsh advfirewall firewall add rule name=\"MyApplication\" dir=in action=allowprogram=\"C:\\MyApp\\MyApp.exe\" enable=yesremoteip=157.60.0.1,172.16.0.0/16,LocalSubnetprofile=domain C:\\> netsh advfirewall firewall add rule name=\"MyApplication\" dir=in action=al lowprogram=\"C:\\MyApp\\MyApp.exe\" enable=yesremoteip=157.60.0.1,172.16.0.0/16,Local5ubnetprofile=private C:\\> netsh advfirewall firewall delete rulename=rule name program=\"C:\\MyApp\\MyApp.exe\" C:\\> netsh advfirewall firewall delete rulename=rule name protocol=udp localport=500 C:\\> netsh advfirewall firewall set rulegroup=\" remote desktop\" new enable=Yes prof ile=domain C:\\> netsh advfirewall firewall set rulegroup=\"remote desktop\" new enable=No profile=publicSetup","title":"offSet firewall rules examples:"},{"location":"capturetheflag/basic/prootect_defend/windows/#togging-location","text":"C:\\> netsh advfirewall set currentprofile logging C:\\<LOCATION>\\<FILE NAME>Windows firewall tog location and settings: C:\\> more %systemroot%\\system32\\LogFiles\\Firewall\\pfirewall.log C:\\> netsh advfirewall set allprofile loggingmaxfilesize 4096 C:\\> netsh advfirewall set allprofile loggingdroppedconnections enable C:\\> netsh advfirewall set allprofile loggingallowedconnections enable","title":"togging location:"},{"location":"capturetheflag/basic/prootect_defend/windows/#display-firewall-logs","text":"PS C:\\> Get-Content$env:systemroot\\system32\\LogFiles\\Firewall\\pfirewall. log","title":"Display firewall logs:"},{"location":"capturetheflag/basic/prootect_defend/windows/#passwords","text":"","title":"PASSWORDS"},{"location":"capturetheflag/basic/prootect_defend/windows/#change-password","text":"C:\\> net user <USER NAME> * /domain C:\\> net user <USER NAME> <NEW PASSWORD>","title":"Change password:"},{"location":"capturetheflag/basic/prootect_defend/windows/#change-password-remotely","text":"C:\\> pspasswd.exe \\\\<IP ADDRESS or NAME OF REMOTECOMPUTER> -u <REMOTE USER NAME> -p <NEW PASSWORD>","title":"Change password remotely:"},{"location":"capturetheflag/basic/prootect_defend/windows/#change-password-remotely_1","text":"PS C:\\> pspasswd.exe \\\\<IP ADDRESS or NAME OF REMOTECOMPUTER>HOST FILE","title":"Change password remotely:"},{"location":"capturetheflag/basic/prootect_defend/windows/#flush-dns-of-malicious-domainip","text":"C:\\> ipconfig /flushdns","title":"Flush DNS of malicious domain/IP:"},{"location":"capturetheflag/basic/prootect_defend/windows/#flush-netbios-cache-of-hostip","text":"C:\\> nbtstat -R","title":"Flush NetBios cache of host/IP:"},{"location":"capturetheflag/basic/prootect_defend/windows/#add-new-malicious-domain-to-hosts-file-and-route-tolocalhost","text":"C:\\> echo 127.0.0.1 <MALICIOUS DOMAIN> >> C:\\Windows\\System32\\drivers\\etc\\hosts","title":"Add new malicious domain to hosts file, and route tolocalhost:"},{"location":"capturetheflag/basic/prootect_defend/windows/#check-if-hosts-file-is-working-by-sending-ping-to-127001","text":"C:\\> ping <MALICIOUS DOMAIN> -n 1","title":"Check if hosts file is working, by sending ping to 127.0.0.1:"},{"location":"capturetheflag/basic/prootect_defend/windows/#whitelist-use-a-proxy-auto-configpac-file-to-create-bad-url-or-ip-list-ie-firefox-chrome","text":"function FindProxyForURL(url, host) { // II Send bad DNS name to the proxy if (dnsDomainis(host, \".badsite.com\")) return \"PROXY http:11127.0.0.1:8080\"; // II Send bad IPs to the proxy if (isinNet(myipAddress(), \"222.222.222.222\",\"255.255.255.0\")) return \"PROXY http:11127.0.0.1:8080\"; //II All other traffic bypass proxy return \"DIRECT\"; }","title":"WHITELIST Use a Proxy Auto Config(PAC) file to create Bad URL or IP List (IE, Firefox, Chrome):"},{"location":"capturetheflag/basic/prootect_defend/windows/#application-restrictions","text":"","title":"APPLICATION RESTRICTIONS"},{"location":"capturetheflag/basic/prootect_defend/windows/#applocker-server-2008-r2-or-windows-7-or-higher","text":"","title":"Applocker - Server 2008 R2 or Windows 7 or higher:"},{"location":"capturetheflag/basic/prootect_defend/windows/#using-gui-wizard-configure","text":"Executable Rules (. exe, . com) DLL Rules ( .dll, .ocx) Script Rules (.psl, .bat, .cmd, .vbs, .js) Windows Install Rules ( .msi, .msp, .mst)","title":"Using GUI Wizard configure:"},{"location":"capturetheflag/basic/prootect_defend/windows/#steps-to-employ-applocker-gui-is-needed-for-digitalsigned-app-restrictions","text":"","title":"Steps to employ Applocker (GUI is needed for digitalsigned app restrictions):"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-1","text":"Create a new GPO.","title":"Step 1:"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-2","text":"Right-click on it to edit, and then navigate through Computer Configuration, Policies, Windows Settings, Security Settings, Application Control Policies and Applocker. Click Configure Rule Enforcement.","title":"Step 2:"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-3","text":"Under Executable Rules, check the Configured box and then make sure Enforce Rules is selected from the drop-down box. Click OK.","title":"Step 3:"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-4","text":"In the left pane, click Executable Rules. Step 5: Right-click in the right pane and select Create New Rule.","title":"Step 4:"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-6","text":"On the Before You Begin screen, click Next.","title":"Step 6:"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-7","text":"On the Permissions screen, click Next.","title":"Step 7:"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-8","text":"On the Conditions screen, select the Publisher condition and click Next.","title":"Step 8:"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-9","text":"Click the Browse button and browse to any executable file on your system. It doesn't matter which.","title":"Step 9:"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-10","text":"Drag the slider up to Any Publisher and then click Next.","title":"Step 10:"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-11","text":"Click Next on the Exceptions screen.","title":"Step 11:"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-12","text":"Name policy, Example uonly run executables that are signed\" and click Create.","title":"Step 12:"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-13","text":"If this is your first time creating an Applocker policy, Windows will prompt you to create default rule, click Yes.","title":"Step 13:"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-14","text":"Ensure Application Identity Service isRunning. C:\\> net start AppIDSvc C:\\> REG add\"HKLM\\SYSTEM\\CurrentControlSet\\services\\AppIDSvc\" /v Start /t REG_DWORD /d 2 /f","title":"Step 14:"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-15","text":"Changes require reboot. C:\\ shutdown.exe /r C:\\ shutdown.exe /r /m \\\\<IP ADDRESS OR COMPUTERNAME> /f","title":"Step 15:"},{"location":"capturetheflag/basic/prootect_defend/windows/#add-the-applocker-cmdlets-into-powershell","text":"PS C:\\> import-module Applocker","title":"Add the Applocker cmdlets into PowerShell:"},{"location":"capturetheflag/basic/prootect_defend/windows/#gets-the-file-information-for-all-of-the-executable-files-and-scripts-in-the-directory","text":"C:\\Windows\\System32: PS C:\\> Get-ApplockerFileinformation -Directory C:\\Windows\\System32\\ -Recurse -FileType Exe, Script","title":"Gets the file information for all of the executable files and scripts in the directory"},{"location":"capturetheflag/basic/prootect_defend/windows/#create-a-applocker-policy-that-allow-rules-for-all-of-the-executable-files-in-cwindowssystem32","text":"PS C:\\> Get-Childitem C:\\Windows\\System32\\*,exe IGet-ApplockerFileinformation I New-ApplockerPolicy -RuleType Publisher, Hash -User Everyone -RuleNamePrefix System32","title":"Create a Applocker Policy that allow rules for all of the executable files in C:\\Windows\\System32:"},{"location":"capturetheflag/basic/prootect_defend/windows/#sets-the-local-applocker-policy-to-the-policy-specified-in-cpolicyxml","text":"PS C:\\> Set-AppLockerPolicy -XMLPolicy C:\\Policy.xml","title":"Sets the local Applocker policy to the policy specified in C:\\Policy.xml:"},{"location":"capturetheflag/basic/prootect_defend/windows/#uses-the-applocker-policy-in-cpolicyxml-to-test-whether-calcexe-and-notepadexe-are-allowed-to-run-for-users-who-are-members-of-the-everyone-group-if-you-do-not-specify-a-group-the-everyone-group-is-used-by-default","text":"PS C:\\> Test-AppLockerPolicy -XMLPolicy C:\\Policy.xml -Path C:\\Windows\\System32\\calc.exe, C:\\Windows\\System32\\notepad.exe -User Everyone","title":"Uses the Applocker policy in C:\\Policy.xml to test whether calc.exe and notepad.exe are allowed to run for users who are members of the Everyone group. If you do not specify a group, the Everyone group is used by default:"},{"location":"capturetheflag/basic/prootect_defend/windows/#review-how-many-times-a-file-would-have-been-blocked-from-running-if-rules-were-enforced","text":"PS C:\\> Get-ApplockerFileinformation -Eventlog -Logname \"Microsoft-Windows-Applocker\\EXE and DLL\" -EventType Audited -Statistics","title":"Review how many times a file would have been blocked from running if rules were enforced:"},{"location":"capturetheflag/basic/prootect_defend/windows/#creates-a-new-applocker-policy-from-the-auditedevents-in-the-local-microsoft-windows-applockerexe-and-dll-event-log-applied-to-and-current-applocker-policy-will-be-overwritten","text":"PS C:\\> Get-ApplockerFileinformation -Eventlog -LogPath \"Microsoft-Windows-AppLocker/EXE and DLL\" -EventType Audited I New-ApplockerPolicy -RuleType Publisher,Hash -User domain\\<GROUP> -IgnoreMissingFileinformation I Set-ApplockerPolicy -LDAP \"LDAP://<DC>,<DOMAIN>.com/CN={31B2F340-016D11D2-945F00C04FB984F9},CN=Policies,CN=System,DC=<DOMAIN>,DC=com\"","title":"Creates a new Applocker policy from the auditedevents in the local Microsoft-Windows-Applocker/EXE and DLL event log, applied to  and current Applocker policy will be overwritten:"},{"location":"capturetheflag/basic/prootect_defend/windows/#export-the-local-applocker-policy-comparing-usersexplicitly-denied-access-to-run-and-output-textfile","text":"PS C:\\> Get-AppLockerPolicy -Local I TestAppLockerPolicy -Path C:\\Windows\\System32\\*,exe -User domain\\<USER NAME> -Filter Denied I Format-List -Property Path > C:\\DeniedFiles.txt","title":"Export the local Applocker policy, comparing User'sexplicitly denied access to run, and output textfile:"},{"location":"capturetheflag/basic/prootect_defend/windows/#export-the-results-of-the-test-to-a-file-foranalysis","text":"PS C:\\> Get-Childitem <DirectoryPathtoReview> -Filter <FileExtensionFilter> -Recurse I Convert-Path I Test-ApplockerPolicy -XMLPolicy <PathToExportedPolicyFile> -User <domain\\username> -Filter <TypeofRuletoFilterFor> I Export-CSV <PathToExportResultsTo.CSV>","title":"Export the results of the test to a file foranalysis:"},{"location":"capturetheflag/basic/prootect_defend/windows/#gridview-list-of-any-local-rules-applicable","text":"PS C:\\> Get-AppLockerPolicy -Local -Xml I OutGridView","title":"GridView list of any local rules applicable:"},{"location":"capturetheflag/basic/prootect_defend/windows/#ipsec","text":"","title":"IPSEC"},{"location":"capturetheflag/basic/prootect_defend/windows/#create-a-ipsec-local-security-policy-applied-to-any-connection-any-protocol-and-using-a-preshared-key","text":"C:\\> netsh ipsec static add filter filterlist=MyIPsecFilter srcaddr=Any dstaddr=Any protocol=ANY C:\\> netsh ipsec static add filteraction name=MyIPsecAction action=negotiate C:\\> netsh ipsec static add policy name=MyIPsecPolicy assign=yes C:\\> netsh ipsec static add rule name=MyIPsecRule policy=MyIPsecPolicy filterlist=MyIPsecFilter filteraction=MyIPsecAction conntype=all activate=yes psk=<PASSWORD>","title":"Create a IPSEC Local Security Policy, applied to any connection, any protocol, and using a preshared key:"},{"location":"capturetheflag/basic/prootect_defend/windows/#add-rule-to-allow-web-browsing-port-80http-and-443https-over-ipsec","text":"C:\\> netsh ipsec static add filteraction name=Allow action=permit C:\\> netsh ipsec static add filter filterlist=WebFilter srcaddr=Any dstaddr=Any protocol=TCP dstport=80 C:\\> netsh ipsec static add filter filterlist=WebFilter srcaddr=Any dstaddr=Any protocol=TCP dstport=443 C:\\> netsh ipsec static add rule name=WebAllow policy=MyIPsecPolicy filterlist=WebFilter filteraction=Allow conntype=all activate=yes psk=<PASSWORD>","title":"Add rule to allow web browsing port 80(HTTP) and 443(HTTPS) over IPSEC:"},{"location":"capturetheflag/basic/prootect_defend/windows/#shows-the-ipsec-local-security-policy-with-name-myipsecpolicy","text":"C:\\> netsh ipsec static show policy name=MyIPsecPolicy","title":"Shows the IPSEC Local Security Policy with name \"MyIPsecPolicy\":"},{"location":"capturetheflag/basic/prootect_defend/windows/#stop-or-unassign-a-ipsec-policy","text":"C:\\> netsh ipsec static set policy name=MyIPsecPolicy","title":"Stop or Unassign a IPSEC Policy:"},{"location":"capturetheflag/basic/prootect_defend/windows/#create-a-ipsec-advance-firewall-rule-and-policy-and-preshared-key-from-and-to-any-connections","text":"C:\\> netsh advfirewall consec add rule name=\"IPSEC\" endpointl=any endpoint2=any action=requireinrequireout qmsecmethods=default","title":"Create a IPSEC Advance Firewall Rule and Policy and preshared key from and to any connections:"},{"location":"capturetheflag/basic/prootect_defend/windows/#require-ipsec-preshared-key-on-all-outgoing-requests","text":"C:\\> netsh advfirewall firewall add rule name=uIPSEC_Out\" dir=out action=allow enable=yes profile=any localip=any remoteip=any protocol=any interfacetype=any security=authenticate","title":"Require IPSEC preshared key on all outgoing requests:"},{"location":"capturetheflag/basic/prootect_defend/windows/#create-a-rule-for-web-browsing","text":"C:\\> netsh advfirewall firewall add rule name=\"Allow Outbound Port 8011 dir=out localport=80 protocol=TCP action=allow","title":"Create a rule for web browsing:"},{"location":"capturetheflag/basic/prootect_defend/windows/#create-a-rule-for-dns","text":"C:\\> netsh advfirewall firewall add rule name=\"Allow Outbound Port 5311 dir=out localport=53 protocol=UDP action=allow","title":"Create a rule for DNS:"},{"location":"capturetheflag/basic/prootect_defend/windows/#delete-ispec-rule","text":"C:\\> netsh advfirewall firewall delete rule name=\"IPSEC_RULE\"","title":"Delete ISPEC Rule:"},{"location":"capturetheflag/basic/prootect_defend/windows/#active-directory-ad-group-policy-object-gpo","text":"","title":"ACTIVE DIRECTORY (AD) - GROUP POLICY OBJECT (GPO)"},{"location":"capturetheflag/basic/prootect_defend/windows/#get-and-force-new-policies","text":"C:\\> gpupdate /force C:\\> gpupdate /sync","title":"Get and force new policies:"},{"location":"capturetheflag/basic/prootect_defend/windows/#audit-success-and-failure-for-user-bob","text":"C:\\> auditpol /set /user:bob /category:\"DetailedTracking\" /include /success:enable /failure:enable","title":"Audit Success and Failure for user Bob:"},{"location":"capturetheflag/basic/prootect_defend/windows/#create-an-organization-unit-to-move-suspected-or-infected-users-and-machines","text":"C:\\> dsadd OU <QUARANTINE BAD OU>","title":"Create an Organization Unit to move suspected or infected users and machines:"},{"location":"capturetheflag/basic/prootect_defend/windows/#move-an-active-directory-user-object-into-new-group","text":"PS C:\\> Move-ADObject 'CN=<USER NAME>,CN=<OLD USERGROUP>,DC=<OLD DOMAIN>,DC=<OLD EXTENSION>' -TargetPath 'OU=<NEW USER GROUP>,DC=<OLDDOMAIN>,DC=<OLD EXTENSION>'","title":"Move an active directory user object into NEW GROUP:"},{"location":"capturetheflag/basic/prootect_defend/windows/#alt-option","text":"C:\\> dsmove \"CN=<USER NAME>,OU=<OLD USER OU>,DC=<OLDDOMAIN>,DC=<OLD EXTENSION>\" -newparent OU=<NEW USERGROUP>,DC=<OLD DOMAIN>,DC=<OLD EXTENSION>","title":"Alt Option:"},{"location":"capturetheflag/basic/prootect_defend/windows/#stand-alone-system-without-active-directory-ad","text":"","title":"STAND ALONE SYSTEM - WITHOUT ACTIVE DIRECTORY (AD)"},{"location":"capturetheflag/basic/prootect_defend/windows/#disallow-running-a-exe-file","text":"C:\\> reg add \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" /v DisallowRun /t REG_DWORD /d\"00000001\" /f C:\\> reg add \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\DisallowRun\" /v badfile.exe /t REG_SZ/d <BAD FILE NAME>.exe /f","title":"Disallow running a .exe file:"},{"location":"capturetheflag/basic/prootect_defend/windows/#disable-remote-desktop","text":"C:\\> reg add \"HKLM\\SYSTEM\\Cu rrentCont ro lSet\\Cont ro l \\ TerminalServer\" /f /v fDenyTSConnections /t REG_DWORD /d 1","title":"Disable Remote Desktop:"},{"location":"capturetheflag/basic/prootect_defend/windows/#send-ntlmv2-response-onlyrefuse-lm-and-ntlmwindows-7-default","text":"C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\ /vlmcompatibilitylevel /t REG_DWORD /d 5 /f","title":"Send NTLMv2 response only/refuse LM and NTLM:(Windows 7 default)"},{"location":"capturetheflag/basic/prootect_defend/windows/#restrict-anonymous-access","text":"C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa /v restrictanonymous /t REG_DWORD /d 1 /f","title":"Restrict Anonymous Access:"},{"location":"capturetheflag/basic/prootect_defend/windows/#do-not-allow-anonymous-enumeration-of-sam-accounts-and-shares","text":"C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa /v restrictanonymoussam /t REG_DWORD /d 1 /f","title":"Do not allow anonymous enumeration of SAM accounts and shares:"},{"location":"capturetheflag/basic/prootect_defend/windows/#disable-ipv6","text":"C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\services\\TCPIP6\\Parameters /v DisabledComponents /t REG_DWORD /d 255 /f","title":"Disable IPV6:"},{"location":"capturetheflag/basic/prootect_defend/windows/#disable-sticky-keys","text":"C:\\> reg add \"HKCU\\ControlPanel\\Accessibility\\StickyKeys\" /v Flags /t REG_SZ/d 506 /f","title":"Disable sticky keys:"},{"location":"capturetheflag/basic/prootect_defend/windows/#disable-toggle-keys","text":"C:\\> reg add \"HKCU\\ControlPanel \\Accessibility\\ ToggleKeys\" /v Flags /t REG_SZId 58 /f","title":"Disable Toggle Keys:"},{"location":"capturetheflag/basic/prootect_defend/windows/#disable-filter-keys","text":"C:\\> reg add \"HKCU\\ControlPanel\\Accessibility\\Keyboard Response\" /v Flags /t REG_SZ /d 122 /f","title":"Disable Filter Keys:"},{"location":"capturetheflag/basic/prootect_defend/windows/#disable-on-screen-keyboard","text":"C:\\> reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Authentication\\LogonUI /f /v ShowTabletKeyboard /tREG_DWORD /d 0","title":"Disable On-screen Keyboard:"},{"location":"capturetheflag/basic/prootect_defend/windows/#disable-administrative-shares-workstations","text":"C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters /f /v AutoShareWks /t REG_DWORD /d 0","title":"Disable Administrative Shares - Workstations:"},{"location":"capturetheflag/basic/prootect_defend/windows/#disable-administrative-shares-severs","text":"C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\ Parameters /f /v AutoShareServer /t REG_DWORD /d 0","title":"Disable Administrative Shares - Severs"},{"location":"capturetheflag/basic/prootect_defend/windows/#remove-creation-of-hashes-used-to-pass-the-hash-attack-requires-password-reset-and-reboot-to-purgeold-hashes","text":"C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa /f /v NoLMHash /t REG_DWORD /d 1","title":"Remove Creation of Hashes Used to Pass the Hash Attack (Requires password reset and reboot to purgeold hashes):"},{"location":"capturetheflag/basic/prootect_defend/windows/#to-disable-registry-editor-high-risk","text":"C:\\> reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v DisableRegistryTools /t REG_DWORD /d 1 /f","title":"To Disable Registry Editor: (High Risk)"},{"location":"capturetheflag/basic/prootect_defend/windows/#disable-ie-password-cache","text":"C:\\> reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings /v DisablePasswordCaching /t REG_DWORD /d 1 /f","title":"Disable IE Password Cache:"},{"location":"capturetheflag/basic/prootect_defend/windows/#disable-cmd-prompt","text":"C:\\> reg add HKCU\\Software\\Policies\\Microsoft\\Windows\\System /v DisableCMD /t REG_DWORD /d 1 /f","title":"Disable CMD prompt:"},{"location":"capturetheflag/basic/prootect_defend/windows/#disable-admin-credentials-cache-on-host-when-usingrdp","text":"C:\\> reg add HKLM\\System\\CurrentControlSet\\Control\\Lsa /v DisableRestrictedAdmin /t REG_DWORD /d 0 /f","title":"Disable Admin credentials cache on host when usingRDP:"},{"location":"capturetheflag/basic/prootect_defend/windows/#do-not-process-the-run-once-list","text":"C:\\> reg add HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer /v DisableLocalMachineRunOnce /t REG_DWORD /d 1 C:\\> reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer /v DisableLocalMachineRunOnce /t REG_DWORD /d 1","title":"Do not process the run once list:"},{"location":"capturetheflag/basic/prootect_defend/windows/#require-user-access-control-uac-permission","text":"C:\\> reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v EnableLUA /t REG_DWORD /d 1 /f","title":"Require User Access Control (UAC) Permission:"},{"location":"capturetheflag/basic/prootect_defend/windows/#change-password-at-next-logon","text":"PS C:\\> Set-ADAccountPassword <USER> -NewPassword $newpwd -Reset -PassThru I Set-ADuser -ChangePasswordAtLogon $True","title":"Change password at next logon:"},{"location":"capturetheflag/basic/prootect_defend/windows/#change-password-at-next-logon-for-ou-group","text":"PS C:\\> Get-ADuser -filter \"department -eq '<OUGROUP>' -AND enabled -eq 'True 111 I Set-AD user -ChangePasswordAtLogon $True","title":"Change password at next logon for OU Group:"},{"location":"capturetheflag/basic/prootect_defend/windows/#enabled-firewall-logging","text":"C:\\> netsh firewall set logging droppedpacketsconnections = enable","title":"Enabled Firewall logging:"},{"location":"cli/build/","text":"","title":"Build functions"},{"location":"cli/install/","text":"","title":"Installation"},{"location":"cli/tags/","text":"","title":"Working with tags"},{"location":"cli/templates/","text":"","title":"Create functions"},{"location":"contributing/get-started/","text":"Contributing Github has a great guide for contributing to open source projects: Contributing to a project Fork the repository Clone your fork Making and pushing changes Making a Pull Request Huzzah! thg Specifics In general, we like to keep things documented. You should add documentation to any new functionality, and update it for any changed functionality. Our docstrings use the [Google Style Python Docstrings] (https://sphinxcontrib-napoleon.readthedocs.org/en/latest/example_google.html#example-google). Finally, it is probably a good idea to run the test suite locally before doing the pull-request to make sure everything works, however this is not a requirement. Once you are ready to pull-request, you should figure out if your changes or a bugfix in stable or beta. If it is a bugfix in stable or beta, you should do the pull-request against the branch in question, and otherwise your pull-request should be against the dev branch.","title":"Get Started"},{"location":"contributing/get-started/#contributing","text":"Github has a great guide for contributing to open source projects: Contributing to a project Fork the repository Clone your fork Making and pushing changes Making a Pull Request Huzzah!","title":"Contributing"},{"location":"contributing/get-started/#thg-specifics","text":"In general, we like to keep things documented. You should add documentation to any new functionality, and update it for any changed functionality. Our docstrings use the [Google Style Python Docstrings] (https://sphinxcontrib-napoleon.readthedocs.org/en/latest/example_google.html#example-google). Finally, it is probably a good idea to run the test suite locally before doing the pull-request to make sure everything works, however this is not a requirement. Once you are ready to pull-request, you should figure out if your changes or a bugfix in stable or beta. If it is a bugfix in stable or beta, you should do the pull-request against the branch in question, and otherwise your pull-request should be against the dev branch.","title":"thg Specifics"},{"location":"tutorials/thg/","text":"","title":"THG"},{"location":"tutorials/thg_anti_forensic/","text":"Pacotes relacionados a o uso de contra forense, incluindo encripta\u00e7\u00e3o, estenografia, e tudo para modificar os atributos de arquivo/arquivos. Inclui todas as ferramentas para trabalhar com tudo em geral para modificar um sistema com o prop\u00f3sito de esconder uma informa\u00e7\u00e3o.","title":"thg_anti_forensic"},{"location":"tutorials/thg_automation/","text":"","title":"thg_automation"},{"location":"tutorials/thg_automobile/","text":"","title":"thg_automobile"},{"location":"tutorials/thg_auxiliares/","text":"","title":"thg_auxiliares"},{"location":"tutorials/thg_backdoor/","text":"","title":"thg_backdoor"},{"location":"tutorials/thg_binary/","text":"","title":"thg_binary"},{"location":"tutorials/thg_bluetooth/","text":"","title":"thg_bluetooth"},{"location":"tutorials/thg_code_audit/","text":"","title":"thg_code_audit"},{"location":"tutorials/thg_cracker/","text":"","title":"thg_cracker"},{"location":"tutorials/thg_crypto/","text":"","title":"thg_crypto"},{"location":"tutorials/thg_cryptography/","text":"","title":"thg_cryptography"},{"location":"tutorials/thg_database/","text":"","title":"thg_database"},{"location":"tutorials/thg_debugger/","text":"","title":"thg_debugger"},{"location":"tutorials/thg_decompiler/","text":"","title":"thg_decompiler"},{"location":"tutorials/thg_defensensive/","text":"","title":"thg_defensensive"},{"location":"tutorials/thg_defensive/","text":"","title":"thg_defensive"},{"location":"tutorials/thg_disassembler/","text":"","title":"thg_disassembler"},{"location":"tutorials/thg_docs/","text":"","title":"thg_docs"},{"location":"tutorials/thg_dos/","text":"","title":"thg_dos"},{"location":"tutorials/thg_drone/","text":"","title":"thg_drone"},{"location":"tutorials/thg_exploitation/","text":"","title":"thg_exploitation"},{"location":"tutorials/thg_fingerprint/","text":"","title":"thg_fingerprint"},{"location":"tutorials/thg_firmware/","text":"","title":"thg_firmware"},{"location":"tutorials/thg_forensic/","text":"","title":"thg_forensic"},{"location":"tutorials/thg_gpu/","text":"","title":"thg_gpu"},{"location":"tutorials/thg_hardware/","text":"","title":"thg_hardware"},{"location":"tutorials/thg_honeypot/","text":"","title":"thg_honeypot"},{"location":"tutorials/thg_ids/","text":"","title":"thg_ids"},{"location":"tutorials/thg_keylogger/","text":"","title":"thg_keylogger"},{"location":"tutorials/thg_malware/","text":"","title":"thg_malware"},{"location":"tutorials/thg_misc/","text":"","title":"thg_misc"},{"location":"tutorials/thg_mobile/","text":"","title":"thg_mobile"},{"location":"tutorials/thg_networking/","text":"","title":"thg_networking"},{"location":"tutorials/thg_nfc/","text":"","title":"thg_nfc"},{"location":"tutorials/thg_os/","text":"","title":"thg_os"},{"location":"tutorials/thg_packer/","text":"","title":"thg_packer"},{"location":"tutorials/thg_proxy/","text":"","title":"thg_proxy"},{"location":"tutorials/thg_radio/","text":"","title":"thg_radio"},{"location":"tutorials/thg_recon/","text":"","title":"thg_recon"},{"location":"tutorials/thg_reversing/","text":"","title":"thg_reversing"},{"location":"tutorials/thg_server/","text":"","title":"thg_server"},{"location":"tutorials/thg_shells/","text":"","title":"thg_shells"},{"location":"tutorials/thg_sniffer/","text":"","title":"thg_sniffer"},{"location":"tutorials/thg_social/","text":"","title":"thg_social"},{"location":"tutorials/thg_spoff/","text":"","title":"thg_spoff"},{"location":"tutorials/thg_spoof/","text":"","title":"thg_spoof"},{"location":"tutorials/thg_stego/","text":"","title":"thg_stego"},{"location":"tutorials/thg_tunnel/","text":"","title":"thg_tunnel"},{"location":"tutorials/thg_unpacker/","text":"","title":"thg_unpacker"},{"location":"tutorials/thg_version/","text":"","title":"thg_version"},{"location":"tutorials/thg_voip/","text":"","title":"thg_voip"},{"location":"tutorials/thg_windows/","text":"","title":"thg_windows"},{"location":"tutorials/thg_wireless/","text":"","title":"thg_wireless"}]}