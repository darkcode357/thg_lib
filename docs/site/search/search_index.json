{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to THG_LIB # introduction to thg_lib # introduction Basic IO Receiving data Sending data Manipulating integers Processes and Basic Features Interactive Sessions Networking Secure Shell Serial Ports Project layout # THG # Arquivos de configuracao, voltado para importacao da biblioteca. THG_lib #todos os modulos da bibliotecas estao nessa pasta e podem ser acessados atraves do from THG import $nome_modulo index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Introduction"},{"location":"#welcome-to-thg_lib","text":"","title":"Welcome to THG_LIB"},{"location":"#introduction-to-thg_lib","text":"introduction Basic IO Receiving data Sending data Manipulating integers Processes and Basic Features Interactive Sessions Networking Secure Shell Serial Ports","title":"introduction to thg_lib"},{"location":"#project-layout","text":"THG # Arquivos de configuracao, voltado para importacao da biblioteca. THG_lib #todos os modulos da bibliotecas estao nessa pasta e podem ser acessados atraves do from THG import $nome_modulo index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"LICENSE/","text":"MIT License Copyright (c) 2018 darkcode357 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"community/","text":"","title":"Community"},{"location":"conceptual/","text":"","title":"Conceptual"},{"location":"deployment/","text":"","title":"Deployment"},{"location":"capturetheflag/basic/analysis/linux/","text":"SYSTEM INFORMATION # uname -a uptime timedatectl mount USER INFORMATION # View logged in users: # w Show if a user has ever logged in remotely: # lastlog last View failed logins: # faillog -a View local user accounts: # cat /etc/passwd cat/etc/shadow View local groups: # cat/etc/group View sudo access: # cat /etc/sudoers View accounts with UID 0: # awk -F: '($3 == \"0\") {p rint}' /etc/passwd egrep ':0+' /etc/passwd View root authorized SSH key authentications: # cat /root/.ssh/authorized_keys List of files opened by user: # lsof -u <USER NAME> View the root user bash history: # cat /root/,bash_history NETWORK INFORMATION # View network interfaces: # ifconfig View network connections: # netstat -antup netstat -plantux View listening ports: # netstat -nap View routes: # route View arp table: # arp -a List of processes listening on ports: # lsof -i SERVICE INFORMATION # View processes: # ps -aux List of load modules: # lsmod List of open files: # lsof List of open files, using the network: # lsof -nPi I cut -f 1 -d \" \"I uniq I tail -n +2 List of open files on specific process: # lsof -c <SERVICE NAME> Get all open files of a specific process ID: # lsof -p <PID> List of unlinked processes running: # lsof +Ll Get path of suspicious process PID: # ls -al /proc/<PID>/exe Save file for further malware binary analysis: # cp /proc/<PID>/exe >/<SUSPICIOUS FILE NAME TO SAVE>,elf Monitor logs in real-time: less +F /var/log/messages List services: # chkconfig --list POLICY, PATCH AND SETTINGS INFORMATION # View pam.d files: # cat /etc/pam.d/common* AUTORUN AND AUTOLOAD INFORMATION: # List cron jobs: # crontab -l List cron jobs by root and other UID 0 accounts: # crontab -u root -l Review for unusual cron jobs: # cat /etc/crontab ls /etc/cron,* LOGS # View root user command history: # cat /root/,*history View last logins: # last FILES, DRIVES AND SHARES INFORMATION # View disk space: # df -ah View directory listing for /etc/init.d: # ls -la /etc/init.d Get more info for a file: # stat -x <FILE NAME> Identify file type: # file <FILE NAME> Look for immutable files: # lsatt r -R / I g rep 11 \\ -i11 View directory listing for /root: # ls -la /root Look for files recently modified in current directory: # ls -alt I head Look for world writable files: # #find/ -xdev -type d\\( -perm -0002 -a ! -perm -1000 \\) -print Look for recent created files, in this case newer than Jan 02, 2017: # find/ -n ewermt 2017-01-02q List all files and attributes: # #find/ -printf 11%m;%Ax;%AT;%Tx;%TT;%Cx;%CT;%U;%G;%s;%p\\n\" Look at files in directory by most recent timestamp:(Could be tampered) # ls -alt /<DIRECTORY>! head Get full file information: # # stat /<FILE PATH>/<SUSPICIOUS FILE NAME> Review file type: # # file /<FILE PATH>/<SUSPICIOUS FILE NAME> Check for rootkits or signs of compromise: # Run unix-privsec-check tool: # # wget https://raw.githubusercontent.com/pentestmonkey/unix-privesc-check/l_x/unix-privesc-check # ./unix-privesc-check > output.txt Run chkrootkit: # apt-get install chkrootkit chkrootkit Run rkhunter: # apt-get install rkhunter rkhunter --update rkhunter -check Run tiger: # apt-get install tiger tiger less /var/log/tiger/security.report,* Run lynis: # apt-get install lynis lynis audit system more /var/logs/lynis. log Run Linux Malware Detect (LMD): # wget http://www.rfxn.com/downloads/maldetectcurrent.tar.gz tar xfz maldetect-current.tar.gz cd maldetect-* ./install.sh => Get LMD updates: maldet -u Run LMD scan on directory: maldet -a /<DIRECTORY>","title":"linux"},{"location":"capturetheflag/basic/analysis/linux/#system-information","text":"uname -a uptime timedatectl mount","title":"SYSTEM INFORMATION"},{"location":"capturetheflag/basic/analysis/linux/#user-information","text":"","title":"USER INFORMATION"},{"location":"capturetheflag/basic/analysis/linux/#view-logged-in-users","text":"w","title":"View logged in users:"},{"location":"capturetheflag/basic/analysis/linux/#show-if-a-user-has-ever-logged-in-remotely","text":"lastlog last","title":"Show if a user has ever logged in remotely:"},{"location":"capturetheflag/basic/analysis/linux/#view-failed-logins","text":"faillog -a","title":"View failed logins:"},{"location":"capturetheflag/basic/analysis/linux/#view-local-user-accounts","text":"cat /etc/passwd cat/etc/shadow","title":"View local user accounts:"},{"location":"capturetheflag/basic/analysis/linux/#view-local-groups","text":"cat/etc/group","title":"View local groups:"},{"location":"capturetheflag/basic/analysis/linux/#view-sudo-access","text":"cat /etc/sudoers","title":"View sudo access:"},{"location":"capturetheflag/basic/analysis/linux/#view-accounts-with-uid-0","text":"awk -F: '($3 == \"0\") {p rint}' /etc/passwd egrep ':0+' /etc/passwd","title":"View accounts with UID 0:"},{"location":"capturetheflag/basic/analysis/linux/#view-root-authorized-ssh-key-authentications","text":"cat /root/.ssh/authorized_keys","title":"View root authorized SSH key authentications:"},{"location":"capturetheflag/basic/analysis/linux/#list-of-files-opened-by-user","text":"lsof -u <USER NAME>","title":"List of files opened by user:"},{"location":"capturetheflag/basic/analysis/linux/#view-the-root-user-bash-history","text":"cat /root/,bash_history","title":"View the root user bash history:"},{"location":"capturetheflag/basic/analysis/linux/#network-information","text":"","title":"NETWORK INFORMATION"},{"location":"capturetheflag/basic/analysis/linux/#view-network-interfaces","text":"ifconfig","title":"View network interfaces:"},{"location":"capturetheflag/basic/analysis/linux/#view-network-connections","text":"netstat -antup netstat -plantux","title":"View network connections:"},{"location":"capturetheflag/basic/analysis/linux/#view-listening-ports","text":"netstat -nap","title":"View listening ports:"},{"location":"capturetheflag/basic/analysis/linux/#view-routes","text":"route","title":"View routes:"},{"location":"capturetheflag/basic/analysis/linux/#view-arp-table","text":"arp -a","title":"View arp table:"},{"location":"capturetheflag/basic/analysis/linux/#list-of-processes-listening-on-ports","text":"lsof -i","title":"List of processes listening on ports:"},{"location":"capturetheflag/basic/analysis/linux/#service-information","text":"","title":"SERVICE INFORMATION"},{"location":"capturetheflag/basic/analysis/linux/#view-processes","text":"ps -aux","title":"View processes:"},{"location":"capturetheflag/basic/analysis/linux/#list-of-load-modules","text":"lsmod","title":"List of load modules:"},{"location":"capturetheflag/basic/analysis/linux/#list-of-open-files","text":"lsof","title":"List of open files:"},{"location":"capturetheflag/basic/analysis/linux/#list-of-open-files-using-the-network","text":"lsof -nPi I cut -f 1 -d \" \"I uniq I tail -n +2","title":"List of open files, using the network:"},{"location":"capturetheflag/basic/analysis/linux/#list-of-open-files-on-specific-process","text":"lsof -c <SERVICE NAME>","title":"List of open files on specific process:"},{"location":"capturetheflag/basic/analysis/linux/#get-all-open-files-of-a-specific-process-id","text":"lsof -p <PID>","title":"Get all open files of a specific process ID:"},{"location":"capturetheflag/basic/analysis/linux/#list-of-unlinked-processes-running","text":"lsof +Ll","title":"List of unlinked processes running:"},{"location":"capturetheflag/basic/analysis/linux/#get-path-of-suspicious-process-pid","text":"ls -al /proc/<PID>/exe","title":"Get path of suspicious process PID:"},{"location":"capturetheflag/basic/analysis/linux/#save-file-for-further-malware-binary-analysis","text":"cp /proc/<PID>/exe >/<SUSPICIOUS FILE NAME TO SAVE>,elf Monitor logs in real-time: less +F /var/log/messages","title":"Save file for further malware binary analysis:"},{"location":"capturetheflag/basic/analysis/linux/#list-services","text":"chkconfig --list","title":"List services:"},{"location":"capturetheflag/basic/analysis/linux/#policy-patch-and-settings-information","text":"","title":"POLICY, PATCH AND SETTINGS INFORMATION"},{"location":"capturetheflag/basic/analysis/linux/#view-pamd-files","text":"cat /etc/pam.d/common*","title":"View pam.d files:"},{"location":"capturetheflag/basic/analysis/linux/#autorun-and-autoload-information","text":"","title":"AUTORUN AND AUTOLOAD INFORMATION:"},{"location":"capturetheflag/basic/analysis/linux/#list-cron-jobs","text":"crontab -l","title":"List cron jobs:"},{"location":"capturetheflag/basic/analysis/linux/#list-cron-jobs-by-root-and-other-uid-0-accounts","text":"crontab -u root -l","title":"List cron jobs by root and other UID 0 accounts:"},{"location":"capturetheflag/basic/analysis/linux/#review-for-unusual-cron-jobs","text":"cat /etc/crontab ls /etc/cron,*","title":"Review for unusual cron jobs:"},{"location":"capturetheflag/basic/analysis/linux/#logs","text":"","title":"LOGS"},{"location":"capturetheflag/basic/analysis/linux/#view-root-user-command-history","text":"cat /root/,*history","title":"View root user command history:"},{"location":"capturetheflag/basic/analysis/linux/#view-last-logins","text":"last","title":"View last logins:"},{"location":"capturetheflag/basic/analysis/linux/#files-drives-and-shares-information","text":"","title":"FILES, DRIVES AND SHARES INFORMATION"},{"location":"capturetheflag/basic/analysis/linux/#view-disk-space","text":"df -ah","title":"View disk space:"},{"location":"capturetheflag/basic/analysis/linux/#view-directory-listing-for-etcinitd","text":"ls -la /etc/init.d","title":"View directory listing for /etc/init.d:"},{"location":"capturetheflag/basic/analysis/linux/#get-more-info-for-a-file","text":"stat -x <FILE NAME>","title":"Get more info for a file:"},{"location":"capturetheflag/basic/analysis/linux/#identify-file-type","text":"file <FILE NAME>","title":"Identify file type:"},{"location":"capturetheflag/basic/analysis/linux/#look-for-immutable-files","text":"lsatt r -R / I g rep 11 \\ -i11","title":"Look for immutable files:"},{"location":"capturetheflag/basic/analysis/linux/#view-directory-listing-for-root","text":"ls -la /root","title":"View directory listing for /root:"},{"location":"capturetheflag/basic/analysis/linux/#look-for-files-recently-modified-in-current-directory","text":"ls -alt I head","title":"Look for files recently modified in current directory:"},{"location":"capturetheflag/basic/analysis/linux/#look-for-world-writable-files","text":"#find/ -xdev -type d\\( -perm -0002 -a ! -perm -1000 \\) -print","title":"Look for world writable files:"},{"location":"capturetheflag/basic/analysis/linux/#look-for-recent-created-files-in-this-case-newer-than-jan-02-2017","text":"find/ -n ewermt 2017-01-02q","title":"Look for recent created files, in this case newer than Jan 02, 2017:"},{"location":"capturetheflag/basic/analysis/linux/#list-all-files-and-attributes","text":"#find/ -printf 11%m;%Ax;%AT;%Tx;%TT;%Cx;%CT;%U;%G;%s;%p\\n\"","title":"List all files and attributes:"},{"location":"capturetheflag/basic/analysis/linux/#look-at-files-in-directory-by-most-recent-timestampcould-be-tampered","text":"ls -alt /<DIRECTORY>! head","title":"Look at files in directory by most recent timestamp:(Could be tampered)"},{"location":"capturetheflag/basic/analysis/linux/#get-full-file-information","text":"# stat /<FILE PATH>/<SUSPICIOUS FILE NAME>","title":"Get full file information:"},{"location":"capturetheflag/basic/analysis/linux/#review-file-type","text":"# file /<FILE PATH>/<SUSPICIOUS FILE NAME>","title":"Review file type:"},{"location":"capturetheflag/basic/analysis/linux/#check-for-rootkits-or-signs-of-compromise","text":"","title":"Check for rootkits or signs of compromise:"},{"location":"capturetheflag/basic/analysis/linux/#run-unix-privsec-check-tool","text":"# wget https://raw.githubusercontent.com/pentestmonkey/unix-privesc-check/l_x/unix-privesc-check # ./unix-privesc-check > output.txt","title":"Run unix-privsec-check tool:"},{"location":"capturetheflag/basic/analysis/linux/#run-chkrootkit","text":"apt-get install chkrootkit chkrootkit","title":"Run chkrootkit:"},{"location":"capturetheflag/basic/analysis/linux/#run-rkhunter","text":"apt-get install rkhunter rkhunter --update rkhunter -check","title":"Run rkhunter:"},{"location":"capturetheflag/basic/analysis/linux/#run-tiger","text":"apt-get install tiger tiger less /var/log/tiger/security.report,*","title":"Run tiger:"},{"location":"capturetheflag/basic/analysis/linux/#run-lynis","text":"apt-get install lynis lynis audit system more /var/logs/lynis. log","title":"Run lynis:"},{"location":"capturetheflag/basic/analysis/linux/#run-linux-malware-detect-lmd","text":"wget http://www.rfxn.com/downloads/maldetectcurrent.tar.gz tar xfz maldetect-current.tar.gz cd maldetect-* ./install.sh => Get LMD updates: maldet -u Run LMD scan on directory: maldet -a /<DIRECTORY>","title":"Run Linux Malware Detect (LMD):"},{"location":"capturetheflag/basic/analysis/malware/","text":"STATIC ANALYSIS BASICS # Mount live Sysinternats toots drive: # \\\\live.sysinternals.com\\tools Signature check of dlt, exe files: Ref. http://technet.microsoft.com/enus/sysinternals/bb897441.aspx C:\\> sigcheck.exe -u -e (:\\<DIRECTORY> Send to VirusTotat: # C:\\> sigcheck.exe -vt <SUSPICIOUS FILE NAME> Windows PE Analysis: # View Hex and ASCI of PE{exe or any file), with optional -n first 500 bytes: # # hexdump -C -n 500 <SUSPICIOUS FILE NAME> # od -x somefile.exe # xxd somefile.exe In Windows using debug toot {works for .java files too): # C:\\> debug <SUSPICIOUS FILE NAME> -d (just type d and get a page at a time of hex) -q (quit debugger) Windows PE analysis: # PE Fite Compile Date/Time pert script below (Windows PE only script). Ref. https://www.perl.org/get.html Ref. http://www.perlmonks.org/bare/?node_id=484287 C:\\> perl.exe <SCRIPT NAME>.pl <SUSPICIOUS FILENAME> #! perl -slw use strict; open EXE, '<:raw', $ARGV[0] or die \"$ARGV[0] my $dos = do{ local$/ = \\65536; <EXE>}; $1\" \u2022 . , die \"$ARGV[0] is not a .exe or .dll (sig='${ \\substr $dos, 0, 2 } ')\" unless substr( $dos, 0, 2 ) eq 'MZ'; my $coffoff = 8+ unpack 'x60 V', $dos; read( EXE, $dos, $coffoff - 65536 + 4, 65536 ) or die$! if $coffoff > 65536; my $ts = unpack \"x$coffoff V\", $dos; print \"$ARGV [0] : \", defined $ts ? ( scalar( localtime $ts) 11 \"has unfathomable timestamp value $ts\" ) : 'has no timestamp'; _END_ View strings within PE and optional string length -n option: # Using stings in Linux: # strings -n 10 <SUSPICIOUS FILE NAME> Ref. https://technet.microsoft.com/enus/sysinternals/strings.aspx Using strings in Windows: C:\\> strings <SUSPICIOUS FILE NAME> Find Malware in memory dump using Volatility and Windows7SPFix64 profile: # ![Ref](https://github.com/volatilityfoundation/volatility] python vol.py -f <MEMORY DUMP FILE NAME>.raw -profile=Win7SPFix64 malfind -D /<OUTPUT DUMPDIRECTORY> Find Malware with PID in memory dump usingVolatility: # python vol.py -f <MEMORY DUMP FILE NAME>.raw -profile=Win7SPFix64 malfind -p <PID #> -D /<OUTPUTDUMP DIRECTORY> Find suspicious processes using Volatility: # python vol.py -f <MEMORY DUMP FILE NAME>.raw -profile=Win7SPFix64 pslist python vol.py -f <MEMORY DUMP FILE NAME>,raw -profile=Win7SPFix64 pstree Find suspicious dlls using Volatility: # python vol.py -f <MEMORY DUMP FILE NAME>.raw -profile=Win7SPFix64 dlllist python vol.py -f <MEMORY DUMP FILE NAME>.raw -profile=Win7SPFix64 dlldump -D /<OUTPUT DUMPDIRECTORY> Malware analysis parsing Tool: # Ref. https://github.com/Defense-Cyber-CrimeCenter/DC3-MWCP Install dc3-mwcp tool: # # setup.py install Use dc3-mwcp tool to parse suspicious file: # mwcp-tool.py -p <SUSPICIOUS FILE NAME> PROCESS EXPLORER # Step 1: Look at running processes by running Process Explorer (GUI) and identify potential indicators of compromise: # * Items with no icon * Items with no description or company name * Unsigned Microsoft images (First add Verified Signer column under View tab->Select Columns, then go to Options tab and choose Verify Image Signatures) * Check all running process hashes in Virus Total (Go to Options tab and select Check VirusTota l. com) * Suspicious files are in Windows directories or user profile * Purple items that are packed or compressed * Items with open TCP/IP endpoints Step 2: Signature File Check: # ( See Sigcheck) Step 3: Strings Check: # \u2022 Right click on suspicious process in Process Explorer and on pop up window choose Strings tab and review for suspicious URLs. Repeat for Image and Memory radio buttons. \u2022 Look for strange URLs in strings Step 4: DLL View: # \u2022 Pop open with Ct rl+D \u2022 Look for suspicious DLLs or services \u2022 Look for no description or no company name \u2022 Look at VirusTotal Results column Step 5: Stop and Remove Malware: # \u2022 Right click and select Suspend for any identified suspicious processes \u2022 Right click and select Terminate Previous Suspended processes Step 6: Clean up where malicious files Auto start on reboot. # \u2022 Launch Autoruns \u2022 Under Options, Check the boxes Verify Code Signatures and Hide Microsoft entries \u2022 Look for suspicious process file from earlier steps on the everything tab and uncheck. Safer to uncheck than delete, in case of error. \u2022 Press FS, to refresh Autoruns, and confirm malicious file has not recreated the malicious entry into the previous unchecked auto start location. Step 7: Process Monitor # \u2022 If malicious activity is still persistent, run Process Monitor. \u2022 Look for newly started process that start soon after terminated from previous steps. Step 8: Repeat as needed to find all malicious files and process and/or combine with other tools and suites. # FILE HASH ANALYSIS # HASH QUERY # VirusTotal online API query: # ![Ref](https://www.virustotal.com/en/documentation/publicapi/) (Prerequisite: Need a VT API Key) Send a suspicious hash to VirtusTotal using cURL: # curl -v --request POST --url https://www.virustotal.com/vtapi/v2/file/report' -d apikey=<VT API KEY> -d 'resource=<SUSPICIOUS FILEHASH>' Send a suspicious file to VirusTotal using cURL: # # curl -v -F 'file=/<PATH TO FILE>/<SUSPICIOUS FILENAME>' -F apikey=<VT API KEY> https://www.virustotal.com/vtapi/v2/file/scan Team Cymru API: # Ref. https://hash.cymru.com, http://totalhash.com Team Cymru malware hash lookup using whois: (Note: Output is timestamp of last seen and detection rate) # whois -h hash,cymru.com <SUSPICIOUS FILE HASH> HARD DRIVE AND MEMORY ACQUISITION # WINDOWS # Create memory dump remotely: # Ref. http://kromer.pl/malware-analysis/memoryforensics-using-volatility-toolkit-to-extractmalware-samples-from-memory-dump/ Ref. http://sourceforge.net/projects/mdd/ Ref. https://technet.microsoft.com/enus/sysinternals/psexec.aspx C: \\> psexec. exe \\\\<HOST NAME OR IP ADDRESS> -u <DOMAIN>\\<PRIVILEGED ACCOUNT> -p <PASSWORD> -cmdd_l,3.exe --o C:\\memory.dmp Ref.https://github.com/volatilityfoundation/volatility Extract exe/dll from memory dump: # C:\\> volatility dlldump -f memory.dmp -0 dumps/ C:\\> volatility procmemdump -f memory.dmp -0 dumps/ Create hard drive image using dc3dd of C:\\: # Ref.https://sourceforge.net/projects/dc3dd/files/dc3dd/7.2%20-%20Windows/ C:\\> dc3dd,exe if=\\\\,\\c: of=d:\\<ATTACHED OR TARGETDRIVE>\\<IMAGE NAME>,dd hash=md5 log=d:\\<MOUNTEDLOCATION>\\<LOG NAME>, log LINUX # Create memory dump: # dd if=/dev/fmem of=/tmp/<MEMORY FILE NAME>.dd Create memory dump using LiME: # Ref. https://github.com/504ensicslabs/lime wgethttps://github.com/504ensicslabs/LiME/archive/master.zip unzip master.zip cd LiME-master/src make p lime-*,ko /media/=/media/ExternalUSBDriveName/ insmod lime-3.13.0-79-generic.ko \"path=/media/Exte rna lUSBDriveName/<MEMORY DUMP>, limeformat=raw\" Make copy of suspicious process using process ID: # cp /proc/<SUSPICIOUS PROCESS ID>/exe /<NEW SAVEDLOCATION> Grab memory core dump of suspicious process: # gcore <PIO> Strings on gcore file: # # strings gcore.* Create a hard drive/partition copy with tog and hash options: # dd if=<INPUT DEVICE> of=<IMAGE FILE NAME> dc3dd if=/dev/<TARGET DRIVE EXAMPLE SDA OR SDAl> of=/dev/<MOUNTED LOCATION>\\<FILE NAME>.img hash=md5 log=/<MOUNTED LOCATION>/<LOG NAME>.log Create a remote hard drive/partition over SSH: # dd if=/dev/<INPUT DEVICE> I ssh <USERNAME>@<DESTINATION IP ADDRESS> \"dd of=<DESTINATIONPATH>\" Send hard drive image zipped over netcat: # Sending host: # bzip2 -c /dev/<INPUT DEVICE> I nc <DESTINATION IPADDRESS> <PICK A PORT> Receiving host: # nc -p <PICK SAME PORT> -l lbzip2 -d I dd of=/dev/sdb Send hard drive image over netcat: # Sending host: # dd if=/dev/<INPUT DEVICE> bs=16M I nc <PORT> Receiving host with Pipe Viewer meter: # nc -p <SAME PORT> -l -vv I pv -r I dd of=/dev/<INPUT DEVICE> bs=16M","title":"malware"},{"location":"capturetheflag/basic/analysis/malware/#static-analysis-basics","text":"","title":"STATIC ANALYSIS BASICS"},{"location":"capturetheflag/basic/analysis/malware/#mount-live-sysinternats-toots-drive","text":"\\\\live.sysinternals.com\\tools Signature check of dlt, exe files: Ref. http://technet.microsoft.com/enus/sysinternals/bb897441.aspx C:\\> sigcheck.exe -u -e (:\\<DIRECTORY>","title":"Mount live Sysinternats toots drive:"},{"location":"capturetheflag/basic/analysis/malware/#send-to-virustotat","text":"C:\\> sigcheck.exe -vt <SUSPICIOUS FILE NAME>","title":"Send to VirusTotat:"},{"location":"capturetheflag/basic/analysis/malware/#windows-pe-analysis","text":"","title":"Windows PE Analysis:"},{"location":"capturetheflag/basic/analysis/malware/#view-hex-and-asci-of-peexe-or-any-file-with-optional-n-first-500-bytes","text":"# hexdump -C -n 500 <SUSPICIOUS FILE NAME> # od -x somefile.exe # xxd somefile.exe","title":"View Hex and ASCI of PE{exe or any file), with optional -n first 500 bytes:"},{"location":"capturetheflag/basic/analysis/malware/#in-windows-using-debug-toot-works-for-java-files-too","text":"C:\\> debug <SUSPICIOUS FILE NAME> -d (just type d and get a page at a time of hex) -q (quit debugger)","title":"In Windows using debug toot {works for .java files too):"},{"location":"capturetheflag/basic/analysis/malware/#windows-pe-analysis_1","text":"PE Fite Compile Date/Time pert script below (Windows PE only script). Ref. https://www.perl.org/get.html Ref. http://www.perlmonks.org/bare/?node_id=484287 C:\\> perl.exe <SCRIPT NAME>.pl <SUSPICIOUS FILENAME> #! perl -slw use strict; open EXE, '<:raw', $ARGV[0] or die \"$ARGV[0] my $dos = do{ local$/ = \\65536; <EXE>}; $1\" \u2022 . , die \"$ARGV[0] is not a .exe or .dll (sig='${ \\substr $dos, 0, 2 } ')\" unless substr( $dos, 0, 2 ) eq 'MZ'; my $coffoff = 8+ unpack 'x60 V', $dos; read( EXE, $dos, $coffoff - 65536 + 4, 65536 ) or die$! if $coffoff > 65536; my $ts = unpack \"x$coffoff V\", $dos; print \"$ARGV [0] : \", defined $ts ? ( scalar( localtime $ts) 11 \"has unfathomable timestamp value $ts\" ) : 'has no timestamp'; _END_","title":"Windows PE analysis:"},{"location":"capturetheflag/basic/analysis/malware/#view-strings-within-pe-and-optional-string-length-n-option","text":"","title":"View strings within PE and optional string length -n option:"},{"location":"capturetheflag/basic/analysis/malware/#using-stings-in-linux","text":"strings -n 10 <SUSPICIOUS FILE NAME> Ref. https://technet.microsoft.com/enus/sysinternals/strings.aspx Using strings in Windows: C:\\> strings <SUSPICIOUS FILE NAME>","title":"Using stings in Linux:"},{"location":"capturetheflag/basic/analysis/malware/#find-malware-in-memory-dump-using-volatility-and-windows7spfix64-profile","text":"![Ref](https://github.com/volatilityfoundation/volatility] python vol.py -f <MEMORY DUMP FILE NAME>.raw -profile=Win7SPFix64 malfind -D /<OUTPUT DUMPDIRECTORY>","title":"Find Malware in memory dump using Volatility and Windows7SPFix64 profile:"},{"location":"capturetheflag/basic/analysis/malware/#find-malware-with-pid-in-memory-dump-usingvolatility","text":"python vol.py -f <MEMORY DUMP FILE NAME>.raw -profile=Win7SPFix64 malfind -p <PID #> -D /<OUTPUTDUMP DIRECTORY>","title":"Find Malware with PID in memory dump usingVolatility:"},{"location":"capturetheflag/basic/analysis/malware/#find-suspicious-processes-using-volatility","text":"python vol.py -f <MEMORY DUMP FILE NAME>.raw -profile=Win7SPFix64 pslist python vol.py -f <MEMORY DUMP FILE NAME>,raw -profile=Win7SPFix64 pstree","title":"Find suspicious processes using Volatility:"},{"location":"capturetheflag/basic/analysis/malware/#find-suspicious-dlls-using-volatility","text":"python vol.py -f <MEMORY DUMP FILE NAME>.raw -profile=Win7SPFix64 dlllist python vol.py -f <MEMORY DUMP FILE NAME>.raw -profile=Win7SPFix64 dlldump -D /<OUTPUT DUMPDIRECTORY>","title":"Find suspicious dlls using Volatility:"},{"location":"capturetheflag/basic/analysis/malware/#malware-analysis-parsing-tool","text":"Ref. https://github.com/Defense-Cyber-CrimeCenter/DC3-MWCP","title":"Malware analysis parsing Tool:"},{"location":"capturetheflag/basic/analysis/malware/#install-dc3-mwcp-tool","text":"# setup.py install Use dc3-mwcp tool to parse suspicious file: # mwcp-tool.py -p <SUSPICIOUS FILE NAME>","title":"Install dc3-mwcp tool:"},{"location":"capturetheflag/basic/analysis/malware/#process-explorer","text":"","title":"PROCESS EXPLORER"},{"location":"capturetheflag/basic/analysis/malware/#step-1-look-at-running-processes-by-running-process-explorer-gui-and-identify-potential-indicators-of-compromise","text":"* Items with no icon * Items with no description or company name * Unsigned Microsoft images (First add Verified Signer column under View tab->Select Columns, then go to Options tab and choose Verify Image Signatures) * Check all running process hashes in Virus Total (Go to Options tab and select Check VirusTota l. com) * Suspicious files are in Windows directories or user profile * Purple items that are packed or compressed * Items with open TCP/IP endpoints","title":"Step 1: Look at running processes by running Process Explorer (GUI) and identify potential indicators of compromise:"},{"location":"capturetheflag/basic/analysis/malware/#step-2-signature-file-check","text":"( See Sigcheck)","title":"Step 2: Signature File Check:"},{"location":"capturetheflag/basic/analysis/malware/#step-3-strings-check","text":"\u2022 Right click on suspicious process in Process Explorer and on pop up window choose Strings tab and review for suspicious URLs. Repeat for Image and Memory radio buttons. \u2022 Look for strange URLs in strings","title":"Step 3: Strings Check:"},{"location":"capturetheflag/basic/analysis/malware/#step-4-dll-view","text":"\u2022 Pop open with Ct rl+D \u2022 Look for suspicious DLLs or services \u2022 Look for no description or no company name \u2022 Look at VirusTotal Results column","title":"Step 4: DLL View:"},{"location":"capturetheflag/basic/analysis/malware/#step-5-stop-and-remove-malware","text":"\u2022 Right click and select Suspend for any identified suspicious processes \u2022 Right click and select Terminate Previous Suspended processes","title":"Step 5: Stop and Remove Malware:"},{"location":"capturetheflag/basic/analysis/malware/#step-6-clean-up-where-malicious-files-auto-start-on-reboot","text":"\u2022 Launch Autoruns \u2022 Under Options, Check the boxes Verify Code Signatures and Hide Microsoft entries \u2022 Look for suspicious process file from earlier steps on the everything tab and uncheck. Safer to uncheck than delete, in case of error. \u2022 Press FS, to refresh Autoruns, and confirm malicious file has not recreated the malicious entry into the previous unchecked auto start location.","title":"Step 6: Clean up where malicious files Auto start on reboot."},{"location":"capturetheflag/basic/analysis/malware/#step-7-process-monitor","text":"\u2022 If malicious activity is still persistent, run Process Monitor. \u2022 Look for newly started process that start soon after terminated from previous steps.","title":"Step 7: Process Monitor"},{"location":"capturetheflag/basic/analysis/malware/#step-8-repeat-as-needed-to-find-all-malicious-files-and-process-andor-combine-with-other-tools-and-suites","text":"","title":"Step 8: Repeat as needed to find all malicious files and process and/or combine with other tools and suites."},{"location":"capturetheflag/basic/analysis/malware/#file-hash-analysis","text":"","title":"FILE HASH ANALYSIS"},{"location":"capturetheflag/basic/analysis/malware/#hash-query","text":"","title":"HASH QUERY"},{"location":"capturetheflag/basic/analysis/malware/#virustotal-online-api-query","text":"![Ref](https://www.virustotal.com/en/documentation/publicapi/) (Prerequisite: Need a VT API Key)","title":"VirusTotal online API query:"},{"location":"capturetheflag/basic/analysis/malware/#send-a-suspicious-hash-to-virtustotal-using-curl","text":"curl -v --request POST --url https://www.virustotal.com/vtapi/v2/file/report' -d apikey=<VT API KEY> -d 'resource=<SUSPICIOUS FILEHASH>'","title":"Send a suspicious hash to VirtusTotal using cURL:"},{"location":"capturetheflag/basic/analysis/malware/#send-a-suspicious-file-to-virustotal-using-curl","text":"# curl -v -F 'file=/<PATH TO FILE>/<SUSPICIOUS FILENAME>' -F apikey=<VT API KEY> https://www.virustotal.com/vtapi/v2/file/scan","title":"Send a suspicious file to VirusTotal using cURL:"},{"location":"capturetheflag/basic/analysis/malware/#team-cymru-api","text":"Ref. https://hash.cymru.com, http://totalhash.com Team Cymru malware hash lookup using whois: (Note: Output is timestamp of last seen and detection rate) # whois -h hash,cymru.com <SUSPICIOUS FILE HASH>","title":"Team Cymru API:"},{"location":"capturetheflag/basic/analysis/malware/#hard-drive-and-memory-acquisition","text":"","title":"HARD DRIVE AND MEMORY ACQUISITION"},{"location":"capturetheflag/basic/analysis/malware/#windows","text":"","title":"WINDOWS"},{"location":"capturetheflag/basic/analysis/malware/#create-memory-dump-remotely","text":"Ref. http://kromer.pl/malware-analysis/memoryforensics-using-volatility-toolkit-to-extractmalware-samples-from-memory-dump/ Ref. http://sourceforge.net/projects/mdd/ Ref. https://technet.microsoft.com/enus/sysinternals/psexec.aspx C: \\> psexec. exe \\\\<HOST NAME OR IP ADDRESS> -u <DOMAIN>\\<PRIVILEGED ACCOUNT> -p <PASSWORD> -cmdd_l,3.exe --o C:\\memory.dmp Ref.https://github.com/volatilityfoundation/volatility","title":"Create memory dump remotely:"},{"location":"capturetheflag/basic/analysis/malware/#extract-exedll-from-memory-dump","text":"C:\\> volatility dlldump -f memory.dmp -0 dumps/ C:\\> volatility procmemdump -f memory.dmp -0 dumps/","title":"Extract exe/dll from memory dump:"},{"location":"capturetheflag/basic/analysis/malware/#create-hard-drive-image-using-dc3dd-of-c","text":"Ref.https://sourceforge.net/projects/dc3dd/files/dc3dd/7.2%20-%20Windows/ C:\\> dc3dd,exe if=\\\\,\\c: of=d:\\<ATTACHED OR TARGETDRIVE>\\<IMAGE NAME>,dd hash=md5 log=d:\\<MOUNTEDLOCATION>\\<LOG NAME>, log","title":"Create hard drive image using dc3dd of C:\\:"},{"location":"capturetheflag/basic/analysis/malware/#linux","text":"","title":"LINUX"},{"location":"capturetheflag/basic/analysis/malware/#create-memory-dump","text":"dd if=/dev/fmem of=/tmp/<MEMORY FILE NAME>.dd","title":"Create memory dump:"},{"location":"capturetheflag/basic/analysis/malware/#create-memory-dump-using-lime","text":"Ref. https://github.com/504ensicslabs/lime wgethttps://github.com/504ensicslabs/LiME/archive/master.zip unzip master.zip cd LiME-master/src make p lime-*,ko /media/=/media/ExternalUSBDriveName/ insmod lime-3.13.0-79-generic.ko \"path=/media/Exte rna lUSBDriveName/<MEMORY DUMP>, limeformat=raw\"","title":"Create memory dump using LiME:"},{"location":"capturetheflag/basic/analysis/malware/#make-copy-of-suspicious-process-using-process-id","text":"cp /proc/<SUSPICIOUS PROCESS ID>/exe /<NEW SAVEDLOCATION>","title":"Make copy of suspicious process using process ID:"},{"location":"capturetheflag/basic/analysis/malware/#grab-memory-core-dump-of-suspicious-process","text":"gcore <PIO>","title":"Grab memory core dump of suspicious process:"},{"location":"capturetheflag/basic/analysis/malware/#strings-on-gcore-file","text":"# strings gcore.*","title":"Strings on gcore file:"},{"location":"capturetheflag/basic/analysis/malware/#create-a-hard-drivepartition-copy-with-tog-and-hash-options","text":"dd if=<INPUT DEVICE> of=<IMAGE FILE NAME> dc3dd if=/dev/<TARGET DRIVE EXAMPLE SDA OR SDAl> of=/dev/<MOUNTED LOCATION>\\<FILE NAME>.img hash=md5 log=/<MOUNTED LOCATION>/<LOG NAME>.log","title":"Create a hard drive/partition copy with tog and hash options:"},{"location":"capturetheflag/basic/analysis/malware/#create-a-remote-hard-drivepartition-over-ssh","text":"dd if=/dev/<INPUT DEVICE> I ssh <USERNAME>@<DESTINATION IP ADDRESS> \"dd of=<DESTINATIONPATH>\"","title":"Create a remote hard drive/partition over SSH:"},{"location":"capturetheflag/basic/analysis/malware/#send-hard-drive-image-zipped-over-netcat","text":"","title":"Send hard drive image zipped over netcat:"},{"location":"capturetheflag/basic/analysis/malware/#sending-host","text":"bzip2 -c /dev/<INPUT DEVICE> I nc <DESTINATION IPADDRESS> <PICK A PORT>","title":"Sending host:"},{"location":"capturetheflag/basic/analysis/malware/#receiving-host","text":"nc -p <PICK SAME PORT> -l lbzip2 -d I dd of=/dev/sdb","title":"Receiving host:"},{"location":"capturetheflag/basic/analysis/malware/#send-hard-drive-image-over-netcat","text":"","title":"Send hard drive image over netcat:"},{"location":"capturetheflag/basic/analysis/malware/#sending-host_1","text":"dd if=/dev/<INPUT DEVICE> bs=16M I nc <PORT>","title":"Sending host:"},{"location":"capturetheflag/basic/analysis/malware/#receiving-host-with-pipe-viewer-meter","text":"nc -p <SAME PORT> -l -vv I pv -r I dd of=/dev/<INPUT DEVICE> bs=16M","title":"Receiving host with Pipe Viewer meter:"},{"location":"capturetheflag/basic/analysis/windows/","text":"SYSTEM INFORMATION # C:\\> echo %DATE% %TIME% C:\\> hostname C:\\> systeminfo C:\\> systeminfo I findstr /B /C:\"OS Name\" /C:\"OSVersion\" C:\\> wmic csproduct get name C:\\> wmic bios get serialnumber C:\\> wmic computersystem list brief ![Ref](https://technet.microsoft.com/enus/sysinternals/psinfo.aspx) C:\\> psinfo -accepteula -s -h -d USER INFORMATION # C:\\> whoami C:\\> net users C:\\> net localgroup administrators C:\\> net group administrators C:\\> wmic rdtoggle list C:\\> wmic useraccount list C:\\> wmic group list C:\\> wmic netlogin getname, lastlogon,badpasswordcount C:\\> wmic netclient list brief C:\\> doskey /history> history.txt NETWORK INFORMATION # C:\\> netstat -e C:\\> netstat -naob C:\\> netstat -nr C:\\> netstat -vb C:\\> nbtstat -s C:\\> route print C:\\> arp -a C:\\> ipconfig /displaydns C:\\> netsh winhttp show proxy C:\\> ipconfig /allcompartments /all C:\\> netsh wlan show interfaces C:\\> netsh wlan show all C:\\> reg query \"HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections\\WinHttpSettings\" C:\\> type %SYSTEMROOT%\\system32\\drivers\\etc\\hosts C:\\> wmic nicconfig getdescriptions,IPaddress,MACaddress C:\\> wmic netuse getname,username,connectiontype, localname SERVICE INFORMATION # C:\\> at C:\\> tasklist C:\\> task list /SVC C:\\> tasklist /SVC /fi \"imagename eq svchost.exe\" C:\\> schtasks C:\\> net start C:\\> sc query C:\\> wmic service list brief C:\\> wmic service list conf ig C:\\> wmic process list brief C:\\> wmic process list status C:\\> wmic process list memory C:\\> wmic job list brief I findstr \"Running\" # PS C:\\> Get-Service I Where-Object { $_.Status -eq\"running\" } List of all processes and then all loaded modules: # PS C:\\> Get-Process !select modules!ForeachObject{$_.modules} POLICY, PATCH AND SETTINGS INFORMATION # C:\\> set C:\\> gpresult /r C:\\> gpresult /z > <OUTPUT FILE NAME>.txt C:\\> gpresult /H report.html /F C:\\> wmic qfe List GPO software installed: # C:\\> reg query uHKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Group Policy\\AppMgmt\" AUTORUN AND AUTOLOAD INFORMATION Startup information: # C:\\> wmic startup list full C:\\> wmic ntdomain list brief View directory contents of startup folder: # C:\\> dir \"%SystemDrive%\\ProgramData\\Microsoft\\Windows\\StartMenu\\P rog rams\\Sta rtup\" C:\\> dir \"%SystemDrive%\\Documents and Settings\\All Use rs\\Sta rt Menu\\Prog rams\\Sta rtup\" C:\\> dir %userprofile%\\Start Menu\\Programs\\Startup C:\\> %ProgramFiles%\\Startup\\ C:\\> dir C:\\Windows\\Start Menu\\Programs\\startup C:\\> dir \"C:\\Users\\%username%\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\" C:\\> dir \"C:\\ProgramData\\Microsoft\\Windows\\StartMenu\\P rog rams\\Sta rtup\" C:\\> dir \"%APPDATA%\\Microsoft\\Windows\\StartMenu\\Prog rams\\Sta rtup\" C:\\> dir \"%ALLUSERSPROFILE%\\Microsoft\\Windows\\StartMenu\\Prog rams\\Sta rtup\" C:\\> dir \"%ALLUSERSPROFILE%\\StartMenu\\P rog rams\\Sta rtup\" C:\\> type C:\\Windows\\winstart.bat C:\\> type %windir%\\wininit.ini C:\\> type %windir%\\win.ini View autoruns, hide Microsoft files: # C:\\> autorunsc -accepteula -m C:\\> type C:\\Autoexec.bat\" Show all autorun files, export to csv and check withVirusTotal: # C:\\> autorunsc.exe -accepteula -a -c -i -e -f -l -m -v HKEY_CLASSES_ROOT: # C:\\> reg query HKCR\\Comfile\\Shell\\Open\\Command C:\\> reg query HKCR\\Batfile\\Shell\\Open\\Command C:\\> reg query HKCR\\htafile\\Shell\\Open\\Command C:\\> reg query HKCR\\Exefile\\Shell\\Open\\Command C:\\> reg query HKCR\\Exefiles\\Shell\\Open\\Command C:\\> reg query HKCR\\piffile\\shell\\open\\command HKEY_CURRENT_USERS: # C:\\> reg query uHKCU\\Control Panel\\Desktop\" C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Runonce C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServ ices Once C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Windows\\Run C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Windows\\Load C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Windows\\Scripts C:\\> reg query HKCU\\Software\\Microsoft\\WindowsNT\\CurrentVersion\\Windows /f run C:\\> reg query HKCU\\Software\\Microsoft\\WindowsNT\\CurrentVersion\\Windows\u00ab /f load C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RecentDocs C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComDlg32\\LastVisitedMRU C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComD1g32\\0pen5aveMRU C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComDlg32\\LastVisitedPidlMRU C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComD1g32\\0pen5avePidlMRU /s C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RunMRU C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders C:\\> reg query uHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Applets\\RegEdit /v LastKey C:\\> reg query HKCU\\Software\\Microsoft\\InternetExp lo re r\\ TypedURLs C:\\> reg query uHKCU\\Software\\Policies\\Microsoft\\Windows\\ControlPanel \\Desktop\" HKEY_LOCAL_MACHINE: # C:\\> reg query HKLM\\SOFTWARE\\Mic rosoft\\Act ive Setup\\Installed Components /s C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\explorer\\User Shell Folders C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\explorer\\Shell Folders C:\\> reg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\explorer\\ShellExecuteHooks C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Browser Helper Objects /s C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Runonce C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunServices C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Winlogon\\Userinit C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\shellServiceObjectDelayLoad C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\Schedule\\TaskCache\\Tasks /s C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\Windows C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\Windows /f Appinit_DLLs C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\Winlogon /f Shell C:\\> reg query HKLM\\SOFTWARE\\Mic rosoft\\WindowsNT\\CurrentVersion\\Winlogon /f Userinit C:\\> reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Systern\\Scripts C:\\> reg query HKLM\\SOFTWARE\\Classes\\batfile\\shell\\open\\cornrnand C:\\> reg query HKLM\\SOFTWARE\\Classes\\cornfile\\shell\\open\\cornrnand C:\\> reg query HKLM\\SOFTWARE\\Classes\\exefile\\shell\\open\\command C:\\> reg query HKLM\\SOFTWARE\\Classes\\htafile\\Shell\\Open\\Command C:\\> reg query HKLM\\SOFTWARE\\Classes\\piffile\\shell\\open\\command C:\\> reg query HKLM\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Browser Helper Objects /s C:\\> reg query HKLM\\SYSTEM\\CurrentControlSet\\Control\\SessionManager C:\\> reg query HKLM\\SYSTEM\\CurrentControlSet\\Control\\SessionManager\\KnownDLLs C:\\> reg query HKLM\\SYSTEM\\ControlSet001\\Control\\SessionManager\\KnownDLLs LOGS # Copy event logs: # C:\\> wevtutil epl Security C:\\<BACK UPPATH>\\mylogs.evtx C:\\> wevtutil epl System C:\\<BACK UPPATH>\\mylogs.evtx C:\\> wevtutil epl Application C:\\<BACK UPPATH>\\mylogs.evtx Get list of logs remotely: # Ref. https://technet.microsoft.com/enus/sysinternals/psloglist.aspx C:\\> psloglist \\\\<REMOTE COMPUTER> -accepteula -h 12 -x Clear all logs and start a baseline log to monitor: # PS C:\\> wevtutil el I Foreach-Object {wevtutil cl\"$_\"} List log filenames and path location: # C:\\> wmic nteventlog get path,filename,writeable Take pre breach log export: # PS C:\\> wevtutil el I ForEach-Object{Get-Eventlog -Log \"$_\" I Export-Csv -Path (:\\<BASELINE LOG>,csv -Append} Take post breach log export: # PS C:\\> wevtutil el I ForEach-Object{Get-EventLog -Log\"$_\" I Export-Csv -Path C:\\<POST BASELINELOG>,CSV -Append} Compare two files baseline and post breach logs: # PS C:\\> Compare-Object -ReferenceObject $(GetContent\"C:\\<PATH TO FILE>\\<ORIGINAL BASELINELOGS>.txt\") -DifferenceObject $(Get-Content\"C:\\<PATH TO FILE>\\<POST BASELINE LOGS>.txt\") >><DIFFERENCES LOG>.txt This deletes all logs: # PS C:\\> wevtutil el I Foreach-Object {wevtutil cl\"$_\"} FILES, DRIVES AND SHARES INFORMATION # C:\\> net use \\\\<TARGET IP ADDRESS> C:\\> net share C:\\> net session C:\\> wmic volume list brief C:\\> wmic logicaldisk getdescription,filesystem,name,size C:\\> wmic share get name,path Find multiple file types or a file: # C:\\> dir /A /5 /T:A *,exe *,dll *,bat *\u00b7PS1 *,zip C:\\> dir /A /5 /T:A <BAD FILE NAME>,exe Find executable (.exe) files newer than Jan 1, 2017: # C:\\> forfiles /p C:\\ /M *,exe /5 /0 +1/1/2017 /C\"cmd /c echo @fdate @ftime @path\" Find multiple files types using loop: # C:\\> for %G in (.exe, .dll, .bat, .ps) do forfiles -p \"C:\" -m *%G -s -d +1/1/2017 -c \"cmd /c echo @fdate@ftime @path\" Search for files newer than date: # C:\\> forfiles /PC:\\ /5 /0 +1/01/2017 /C \"cmd /c echo @path @fdate\" Find large files: (example <20 MB) # C:\\> forfiles /5 /M * /C \"cmd /c if @fsize GEO 2097152 echo @path @fsize\" Find files with Alternate Data Streams: # C:\\> streams -s <FILE OR DIRECTORY>Find files with bad signature into csv: C:\\> sigcheck -c -h -s -u -nobanner <FILE OR DIRECTORY> > <OUTPUT FILENAME>,csv Find and show only unsigned files with bad signature in C: # C:\\> sigcheck -e -u -vr -s C:\\ List loaded unsigned Dlls: # C:\\> listdlls.exe -u C:\\> listdlls.exe -u <PROCESS NAME OR PID> Run Malware scan (Windows Defender) offline: # C:\\> MpCmdRun.exe -SignatureUpdate C:\\> MpCmdRun.exe -Scan","title":"windows"},{"location":"capturetheflag/basic/analysis/windows/#system-information","text":"C:\\> echo %DATE% %TIME% C:\\> hostname C:\\> systeminfo C:\\> systeminfo I findstr /B /C:\"OS Name\" /C:\"OSVersion\" C:\\> wmic csproduct get name C:\\> wmic bios get serialnumber C:\\> wmic computersystem list brief ![Ref](https://technet.microsoft.com/enus/sysinternals/psinfo.aspx) C:\\> psinfo -accepteula -s -h -d","title":"SYSTEM INFORMATION"},{"location":"capturetheflag/basic/analysis/windows/#user-information","text":"C:\\> whoami C:\\> net users C:\\> net localgroup administrators C:\\> net group administrators C:\\> wmic rdtoggle list C:\\> wmic useraccount list C:\\> wmic group list C:\\> wmic netlogin getname, lastlogon,badpasswordcount C:\\> wmic netclient list brief C:\\> doskey /history> history.txt","title":"USER INFORMATION"},{"location":"capturetheflag/basic/analysis/windows/#network-information","text":"C:\\> netstat -e C:\\> netstat -naob C:\\> netstat -nr C:\\> netstat -vb C:\\> nbtstat -s C:\\> route print C:\\> arp -a C:\\> ipconfig /displaydns C:\\> netsh winhttp show proxy C:\\> ipconfig /allcompartments /all C:\\> netsh wlan show interfaces C:\\> netsh wlan show all C:\\> reg query \"HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections\\WinHttpSettings\" C:\\> type %SYSTEMROOT%\\system32\\drivers\\etc\\hosts C:\\> wmic nicconfig getdescriptions,IPaddress,MACaddress C:\\> wmic netuse getname,username,connectiontype, localname","title":"NETWORK INFORMATION"},{"location":"capturetheflag/basic/analysis/windows/#service-information","text":"C:\\> at C:\\> tasklist C:\\> task list /SVC C:\\> tasklist /SVC /fi \"imagename eq svchost.exe\" C:\\> schtasks C:\\> net start C:\\> sc query C:\\> wmic service list brief C:\\> wmic service list conf ig C:\\> wmic process list brief C:\\> wmic process list status C:\\> wmic process list memory C:\\> wmic job list brief","title":"SERVICE INFORMATION"},{"location":"capturetheflag/basic/analysis/windows/#i-findstr-running","text":"PS C:\\> Get-Service I Where-Object { $_.Status -eq\"running\" }","title":"I findstr \"Running\""},{"location":"capturetheflag/basic/analysis/windows/#list-of-all-processes-and-then-all-loaded-modules","text":"PS C:\\> Get-Process !select modules!ForeachObject{$_.modules}","title":"List of all processes and then all loaded modules:"},{"location":"capturetheflag/basic/analysis/windows/#policy-patch-and-settings-information","text":"C:\\> set C:\\> gpresult /r C:\\> gpresult /z > <OUTPUT FILE NAME>.txt C:\\> gpresult /H report.html /F C:\\> wmic qfe","title":"POLICY, PATCH AND SETTINGS INFORMATION"},{"location":"capturetheflag/basic/analysis/windows/#list-gpo-software-installed","text":"C:\\> reg query uHKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Group Policy\\AppMgmt\"","title":"List GPO software installed:"},{"location":"capturetheflag/basic/analysis/windows/#autorun-and-autoload-information-startup-information","text":"C:\\> wmic startup list full C:\\> wmic ntdomain list brief","title":"AUTORUN AND AUTOLOAD INFORMATION Startup information:"},{"location":"capturetheflag/basic/analysis/windows/#view-directory-contents-of-startup-folder","text":"C:\\> dir \"%SystemDrive%\\ProgramData\\Microsoft\\Windows\\StartMenu\\P rog rams\\Sta rtup\" C:\\> dir \"%SystemDrive%\\Documents and Settings\\All Use rs\\Sta rt Menu\\Prog rams\\Sta rtup\" C:\\> dir %userprofile%\\Start Menu\\Programs\\Startup C:\\> %ProgramFiles%\\Startup\\ C:\\> dir C:\\Windows\\Start Menu\\Programs\\startup C:\\> dir \"C:\\Users\\%username%\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\" C:\\> dir \"C:\\ProgramData\\Microsoft\\Windows\\StartMenu\\P rog rams\\Sta rtup\" C:\\> dir \"%APPDATA%\\Microsoft\\Windows\\StartMenu\\Prog rams\\Sta rtup\" C:\\> dir \"%ALLUSERSPROFILE%\\Microsoft\\Windows\\StartMenu\\Prog rams\\Sta rtup\" C:\\> dir \"%ALLUSERSPROFILE%\\StartMenu\\P rog rams\\Sta rtup\" C:\\> type C:\\Windows\\winstart.bat C:\\> type %windir%\\wininit.ini C:\\> type %windir%\\win.ini","title":"View directory contents of startup folder:"},{"location":"capturetheflag/basic/analysis/windows/#view-autoruns-hide-microsoft-files","text":"C:\\> autorunsc -accepteula -m C:\\> type C:\\Autoexec.bat\"","title":"View autoruns, hide Microsoft files:"},{"location":"capturetheflag/basic/analysis/windows/#show-all-autorun-files-export-to-csv-and-check-withvirustotal","text":"C:\\> autorunsc.exe -accepteula -a -c -i -e -f -l -m -v","title":"Show all autorun files, export to csv and check withVirusTotal:"},{"location":"capturetheflag/basic/analysis/windows/#hkey_classes_root","text":"C:\\> reg query HKCR\\Comfile\\Shell\\Open\\Command C:\\> reg query HKCR\\Batfile\\Shell\\Open\\Command C:\\> reg query HKCR\\htafile\\Shell\\Open\\Command C:\\> reg query HKCR\\Exefile\\Shell\\Open\\Command C:\\> reg query HKCR\\Exefiles\\Shell\\Open\\Command C:\\> reg query HKCR\\piffile\\shell\\open\\command","title":"HKEY_CLASSES_ROOT:"},{"location":"capturetheflag/basic/analysis/windows/#hkey_current_users","text":"C:\\> reg query uHKCU\\Control Panel\\Desktop\" C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Runonce C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServ ices Once C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Windows\\Run C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Windows\\Load C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Windows\\Scripts C:\\> reg query HKCU\\Software\\Microsoft\\WindowsNT\\CurrentVersion\\Windows /f run C:\\> reg query HKCU\\Software\\Microsoft\\WindowsNT\\CurrentVersion\\Windows\u00ab /f load C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RecentDocs C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComDlg32\\LastVisitedMRU C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComD1g32\\0pen5aveMRU C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComDlg32\\LastVisitedPidlMRU C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComD1g32\\0pen5avePidlMRU /s C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RunMRU C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders C:\\> reg query uHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Applets\\RegEdit /v LastKey C:\\> reg query HKCU\\Software\\Microsoft\\InternetExp lo re r\\ TypedURLs C:\\> reg query uHKCU\\Software\\Policies\\Microsoft\\Windows\\ControlPanel \\Desktop\"","title":"HKEY_CURRENT_USERS:"},{"location":"capturetheflag/basic/analysis/windows/#hkey_local_machine","text":"C:\\> reg query HKLM\\SOFTWARE\\Mic rosoft\\Act ive Setup\\Installed Components /s C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\explorer\\User Shell Folders C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\explorer\\Shell Folders C:\\> reg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\explorer\\ShellExecuteHooks C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Browser Helper Objects /s C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Runonce C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunServices C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Winlogon\\Userinit C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\shellServiceObjectDelayLoad C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\Schedule\\TaskCache\\Tasks /s C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\Windows C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\Windows /f Appinit_DLLs C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\Winlogon /f Shell C:\\> reg query HKLM\\SOFTWARE\\Mic rosoft\\WindowsNT\\CurrentVersion\\Winlogon /f Userinit C:\\> reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Systern\\Scripts C:\\> reg query HKLM\\SOFTWARE\\Classes\\batfile\\shell\\open\\cornrnand C:\\> reg query HKLM\\SOFTWARE\\Classes\\cornfile\\shell\\open\\cornrnand C:\\> reg query HKLM\\SOFTWARE\\Classes\\exefile\\shell\\open\\command C:\\> reg query HKLM\\SOFTWARE\\Classes\\htafile\\Shell\\Open\\Command C:\\> reg query HKLM\\SOFTWARE\\Classes\\piffile\\shell\\open\\command C:\\> reg query HKLM\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Browser Helper Objects /s C:\\> reg query HKLM\\SYSTEM\\CurrentControlSet\\Control\\SessionManager C:\\> reg query HKLM\\SYSTEM\\CurrentControlSet\\Control\\SessionManager\\KnownDLLs C:\\> reg query HKLM\\SYSTEM\\ControlSet001\\Control\\SessionManager\\KnownDLLs","title":"HKEY_LOCAL_MACHINE:"},{"location":"capturetheflag/basic/analysis/windows/#logs","text":"","title":"LOGS"},{"location":"capturetheflag/basic/analysis/windows/#copy-event-logs","text":"C:\\> wevtutil epl Security C:\\<BACK UPPATH>\\mylogs.evtx C:\\> wevtutil epl System C:\\<BACK UPPATH>\\mylogs.evtx C:\\> wevtutil epl Application C:\\<BACK UPPATH>\\mylogs.evtx","title":"Copy event logs:"},{"location":"capturetheflag/basic/analysis/windows/#get-list-of-logs-remotely","text":"Ref. https://technet.microsoft.com/enus/sysinternals/psloglist.aspx C:\\> psloglist \\\\<REMOTE COMPUTER> -accepteula -h 12 -x","title":"Get list of logs remotely:"},{"location":"capturetheflag/basic/analysis/windows/#clear-all-logs-and-start-a-baseline-log-to-monitor","text":"PS C:\\> wevtutil el I Foreach-Object {wevtutil cl\"$_\"}","title":"Clear all logs and start a baseline log to monitor:"},{"location":"capturetheflag/basic/analysis/windows/#list-log-filenames-and-path-location","text":"C:\\> wmic nteventlog get path,filename,writeable","title":"List log filenames and path location:"},{"location":"capturetheflag/basic/analysis/windows/#take-pre-breach-log-export","text":"PS C:\\> wevtutil el I ForEach-Object{Get-Eventlog -Log \"$_\" I Export-Csv -Path (:\\<BASELINE LOG>,csv -Append}","title":"Take pre breach log export:"},{"location":"capturetheflag/basic/analysis/windows/#take-post-breach-log-export","text":"PS C:\\> wevtutil el I ForEach-Object{Get-EventLog -Log\"$_\" I Export-Csv -Path C:\\<POST BASELINELOG>,CSV -Append}","title":"Take post breach log export:"},{"location":"capturetheflag/basic/analysis/windows/#compare-two-files-baseline-and-post-breach-logs","text":"PS C:\\> Compare-Object -ReferenceObject $(GetContent\"C:\\<PATH TO FILE>\\<ORIGINAL BASELINELOGS>.txt\") -DifferenceObject $(Get-Content\"C:\\<PATH TO FILE>\\<POST BASELINE LOGS>.txt\") >><DIFFERENCES LOG>.txt","title":"Compare two files baseline and post breach logs:"},{"location":"capturetheflag/basic/analysis/windows/#this-deletes-all-logs","text":"PS C:\\> wevtutil el I Foreach-Object {wevtutil cl\"$_\"}","title":"This deletes all logs:"},{"location":"capturetheflag/basic/analysis/windows/#files-drives-and-shares-information","text":"C:\\> net use \\\\<TARGET IP ADDRESS> C:\\> net share C:\\> net session C:\\> wmic volume list brief C:\\> wmic logicaldisk getdescription,filesystem,name,size C:\\> wmic share get name,path","title":"FILES, DRIVES AND SHARES INFORMATION"},{"location":"capturetheflag/basic/analysis/windows/#find-multiple-file-types-or-a-file","text":"C:\\> dir /A /5 /T:A *,exe *,dll *,bat *\u00b7PS1 *,zip C:\\> dir /A /5 /T:A <BAD FILE NAME>,exe","title":"Find multiple file types or a file:"},{"location":"capturetheflag/basic/analysis/windows/#find-executable-exe-files-newer-than-jan-1-2017","text":"C:\\> forfiles /p C:\\ /M *,exe /5 /0 +1/1/2017 /C\"cmd /c echo @fdate @ftime @path\"","title":"Find executable (.exe) files newer than Jan 1, 2017:"},{"location":"capturetheflag/basic/analysis/windows/#find-multiple-files-types-using-loop","text":"C:\\> for %G in (.exe, .dll, .bat, .ps) do forfiles -p \"C:\" -m *%G -s -d +1/1/2017 -c \"cmd /c echo @fdate@ftime @path\"","title":"Find multiple files types using loop:"},{"location":"capturetheflag/basic/analysis/windows/#search-for-files-newer-than-date","text":"C:\\> forfiles /PC:\\ /5 /0 +1/01/2017 /C \"cmd /c echo @path @fdate\"","title":"Search for files newer than date:"},{"location":"capturetheflag/basic/analysis/windows/#find-large-files-example-20-mb","text":"C:\\> forfiles /5 /M * /C \"cmd /c if @fsize GEO 2097152 echo @path @fsize\"","title":"Find large files: (example &lt;20 MB)"},{"location":"capturetheflag/basic/analysis/windows/#find-files-with-alternate-data-streams","text":"C:\\> streams -s <FILE OR DIRECTORY>Find files with bad signature into csv: C:\\> sigcheck -c -h -s -u -nobanner <FILE OR DIRECTORY> > <OUTPUT FILENAME>,csv","title":"Find files with Alternate Data Streams:"},{"location":"capturetheflag/basic/analysis/windows/#find-and-show-only-unsigned-files-with-bad-signature-in-c","text":"C:\\> sigcheck -e -u -vr -s C:\\","title":"Find and show only unsigned files with bad signature in C:"},{"location":"capturetheflag/basic/analysis/windows/#list-loaded-unsigned-dlls","text":"C:\\> listdlls.exe -u C:\\> listdlls.exe -u <PROCESS NAME OR PID>","title":"List loaded unsigned Dlls:"},{"location":"capturetheflag/basic/analysis/windows/#run-malware-scan-windows-defender-offline","text":"C:\\> MpCmdRun.exe -SignatureUpdate C:\\> MpCmdRun.exe -Scan","title":"Run Malware scan (Windows Defender) offline:"},{"location":"capturetheflag/basic/detect/analysis/","text":"SYSTEM INFORMATION # LIVE TRIAGE - WINDOWS # C:\\> echo %DATE% %TIME% C:\\> hostname C:\\> systeminfo C:\\> systeminfo I findstr /B /C:\"OS Name\" /C:\"OS Version\" C:\\> wmic csproduct get name C:\\> wmic bios get serialnumber C:\\> wmic computersystem list brief C:\\> psinfo -accepteula -s -h -d USER INFORMATION C:\\> whoami C:\\> net users C:\\> net localgroup administrators C:\\> net group administrators C:\\> wmic rdtoggle list C:\\> wmic useraccount list C:\\> wmic group list C:\\> wmic netlogin getname, lastlogon,badpasswordcount C:\\> wmic netclient list brief C:\\> doskey /history> history.txt NETWORK INFORMATION # C:\\> netstat -e C:\\> netstat -naob C:\\> netstat -nr C:\\> netstat -vb C:\\> nbtstat -s C:\\> route print C:\\> arp -a C:\\> ipconfig /displaydns C:\\> netsh winhttp show proxy C:\\> ipconfig /allcompartments /all C:\\> netsh wlan show interfaces C:\\> netsh wlan show all C:\\> reg query \"HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections\\WinHttpSettings\" C:\\> type %SYSTEMROOT%\\system32\\drivers\\etc\\hosts C:\\> wmic nicconfig get descriptions,IPaddress,MACaddress C:\\> wmic netuse getname,username,connectiontype, localname SERVICE INFORMATION C:\\> at C:\\> tasklist C:\\> task list /SVC C:\\> tasklist /SVC /fi \"imagename eq svchost.exe\" C:\\> schtasks C:\\> net start C:\\> sc query C:\\> wmic service list brief C:\\> wmic service list conf ig C:\\> wmic process list brief C:\\> wmic process list status C:\\> wmic process list memory C:\\> wmic job list brief I findstr \"Running\" PS C:\\> Get-Service I Where-Object { $_.Status -eq \"running\" } List of all processes and then all loaded modules: # PS C:\\> Get-Process !select modules!ForeachObject{$_.modules} POLICY, PATCH AND SETTINGS INFORMATION # C:\\> set C:\\> gpresult /r C:\\> gpresult /z > <OUTPUT FILE NAME>.txt C:\\> gpresult /H report.html /F C:\\> wmic qfe List GPO software installed: # C:\\> reg query uHKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Group Policy\\AppMgmt\" AUTORUN AND AUTOLOAD INFORMATION Startup information: # C:\\> wmic startup list full C:\\> wmic ntdomain list brief View directory contents of startup folder: # C:\\> dir \"%SystemDrive%\\ProgramData\\Microsoft\\Windows\\StartMenu\\P rog rams\\Sta rtup\" C:\\> dir \"%SystemDrive%\\Documents and Settings\\AllUse rs\\Sta rt Menu\\Prog rams\\Sta rtup\" C:\\> dir %userprofile%\\Start Menu\\Programs\\Startup C:\\> %ProgramFiles%\\Startup\\ C:\\> dir C:\\Windows\\Start Menu\\Programs\\startup C:\\> dir \"C:\\Users\\%username%\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\" C:\\> dir \"C:\\ProgramData\\Microsoft\\Windows\\StartMenu\\P rog rams\\Sta rtup\" C:\\> dir \"%APPDATA%\\Microsoft\\Windows\\StartMenu\\Prog rams\\Sta rtup\" C:\\> dir \"%ALLUSERSPROFILE%\\Microsoft\\Windows\\StartMenu\\Prog rams\\Sta rtup\" C:\\> dir \"%ALLUSERSPROFILE%\\StartMenu\\P rog rams\\Sta rtup\" C:\\> type C:\\Windows\\winstart.bat C:\\> type %windir%\\wininit.ini C:\\> type %windir%\\win.ini View autoruns, hide Microsoft files: # C:\\> autorunsc -accepteula -m C:\\> type C:\\Autoexec.bat\" Show all autorun files, export to csv and check with VirusTotal: # C:\\> autorunsc.exe -accepteula -a -c -i -e -f -l -m -v HKEY_CLASSES_ROOT: # C:\\> reg query HKCR\\Comfile\\Shell\\Open\\Command C:\\> reg query HKCR\\Batfile\\Shell\\Open\\Command C:\\> reg query HKCR\\htafile\\Shell\\Open\\Command C:\\> reg query HKCR\\Exefile\\Shell\\Open\\Command C:\\> reg query HKCR\\Exefiles\\Shell\\Open\\Command C:\\> reg query HKCR\\piffile\\shell\\open\\command HKEY_CURRENT_USERS: # C:\\> reg query uHKCU\\Control Panel\\Desktop\" C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Runonce C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServ ices Once C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Windows\\Run C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Windows\\Load C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Windows\\Scripts C:\\> reg query HKCU\\Software\\Microsoft\\WindowsNT\\CurrentVersion\\Windows /f run C:\\> reg query HKCU\\Software\\Microsoft\\WindowsNT\\CurrentVersion\\Windows /f load C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RecentDocs C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComDlg32\\LastVisitedMRU C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComD1g32\\0pen5aveMRU C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComDlg32\\LastVisitedPidlMRU C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComD1g32\\0pen5avePidlMRU /s C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RunMRU C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders C:\\> reg query uHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Applets\\RegEdit /v LastKey C:\\> reg query \"HKCU\\Software\\Microsoft\\InternetExp lo re r\\ TypedURLs\" C:\\> reg query uHKCU\\Software\\Policies\\Microsoft\\Windows\\ControlPanel \\Desktop\" HKEY_LOCAL_MACHINE: # C:\\> reg query uHKLM\\SOFTWARE\\Mic rosoft\\Act iveSetup\\Installed Components\" /s C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\explorer\\User Shell Folders C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\explorer\\Shell Folders C:\\> reg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\explorer\\ShellExecuteHooks C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Browser Helper Objects /s C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Runonce C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunServices C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Winlogon\\Userinit C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\shellServiceObjectDelayLoad C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\Schedule\\TaskCache\\Tasks\" /s C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\Windows\" C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\Windows\" /f Appinit_DLLs C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\Winlogon\" /f Shell C:\\> reg query HKLM\\SOFTWARE\\Mic rosoft\\WindowsNT\\CurrentVersion\\Winlogon\" /f Userinit C:\\> reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Systern\\Scripts C:\\> reg query HKLM\\SOFTWARE\\Classes\\batfile\\shell\\open\\cornrnand C:\\> reg query HKLM\\SOFTWARE\\Classes\\cornfile\\shell\\open\\cornrnand C:\\> reg query HKLM\\SOFTWARE\\Classes\\exefile\\shell\\open\\command C:\\> reg query HKLM\\SOFTWARE\\Classes\\htafile\\Shell\\Open\\Command C:\\> reg query HKLM\\SOFTWARE\\Classes\\piffile\\shell\\open\\command C:\\> reg query 11HKLM\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Browser Helper Objects\" /s C:\\> reg query \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\SessionManager\" C:\\> reg query \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\SessionManager\\KnownDLLs\" C:\\> reg query \"HKLM\\SYSTEM\\ControlSet001\\Control\\SessionManager\\KnownDLLs\" LOGS # Copy event logs: # C:\\> wevtutil epl Security C:\\<BACK UPPATH>\\mylogs.evtx C:\\> wevtutil epl System C:\\<BACK UPPATH>\\mylogs.evtx C:\\> wevtutil epl Application C:\\<BACK UPPATH>\\mylogs.evtx Get list of logs remotely: # C:\\> psloglist \\\\<REMOTE COMPUTER> -accepteula -h 12 -x Clear all logs and start a baseline log to monitor: # PS C:\\> wevtutil el I Foreach-Object {wevtutil cl\"$_\"} List log filenames and path location: # C:\\> wmic nteventlog get path,filename,writeable Take pre breach log export: # PS C:\\> wevtutil el I ForEach-Object{Get-Eventlog -Log \"$_\" I Export-Csv -Path (:\\<BASELINE LOG>,csv -Append} Take post breach log export: # PS C:\\> wevtutil el I ForEach-Object{Get-EventLog -Log\"$_\" I Export-Csv -Path C:\\<POST BASELINELOG>,CSV -Append} Compare two files baseline and post breach logs: # PS C:\\> Compare-Object -ReferenceObject $(GetContent\"C:\\<PATH TO FILE>\\<ORIGINAL BASELINELOGS>.txt\") -DifferenceObject $(Get-Content\"C:\\<PATH TO FILE>\\<POST BASELINE LOGS>.txt\") >><DIFFERENCES LOG>.txt This deletes all logs: # PS C:\\> wevtutil el I Foreach-Object {wevtutil cl\"$_\"} FILES, DRIVES AND SHARES INFORMATION # C:\\> net use \\\\<TARGET IP ADDRESS> C:\\> net share C:\\> net session C:\\> wmic volume list brief C:\\> wmic logicaldisk getdescription,filesystem,name,size C:\\> wmic share get name,path Find multiple file types or a file: # C:\\> dir /A /5 /T:A *,exe *,dll *,bat *\u00b7PS1 *,zip C:\\> dir /A /5 /T:A <BAD FILE NAME>,exe Find executable (.exe) files newer than Jan 1, 2017: # C:\\> forfiles /p C:\\ /M *,exe /5 /0 +1/1/2017 /C\"cmd /c echo @fdate @ftime @path\" Find multiple files types using loop: # C:\\> for %G in (.exe, .dll, .bat, .ps) do forfiles -p \"C:\" -m *%G -s -d +1/1/2017 -c \"cmd /c echo @fdate@ftime @path\" Search for files newer than date: # C:\\> forfiles /PC:\\ /5 /0 +1/01/2017 /C \"cmd /cecho @path @fdate\"Find large files: (example <20 MB) C:\\> forfiles /5 /M * /C \"cmd /c if @fsize GEO2097152 echo @path @fsize\" Find files with Alternate Data Streams: # C:\\> streams -s <FILE OR DIRECTORY> Find files with bad signature into csv: # C:\\> sigcheck -c -h -s -u -nobanner <FILE ORDIRECTORY> > <OUTPUT FILENAME>,csv Find and show only unsigned files with bad signaturein C: # C:\\> sigcheck -e -u -vr -s C:\\ List loaded unsigned Dlls: # C:\\> listdlls.exe -u C:\\> listdlls.exe -u <PROCESS NAME OR PID> Run Malware scan (Windows Defender) offline: # C:\\> MpCmdRun.exe -SignatureUpdate C:\\> MpCmdRun.exe -Scan","title":"analysis"},{"location":"capturetheflag/basic/detect/analysis/#system-information","text":"","title":"SYSTEM INFORMATION"},{"location":"capturetheflag/basic/detect/analysis/#live-triage-windows","text":"C:\\> echo %DATE% %TIME% C:\\> hostname C:\\> systeminfo C:\\> systeminfo I findstr /B /C:\"OS Name\" /C:\"OS Version\" C:\\> wmic csproduct get name C:\\> wmic bios get serialnumber C:\\> wmic computersystem list brief C:\\> psinfo -accepteula -s -h -d USER INFORMATION C:\\> whoami C:\\> net users C:\\> net localgroup administrators C:\\> net group administrators C:\\> wmic rdtoggle list C:\\> wmic useraccount list C:\\> wmic group list C:\\> wmic netlogin getname, lastlogon,badpasswordcount C:\\> wmic netclient list brief C:\\> doskey /history> history.txt","title":"LIVE TRIAGE - WINDOWS"},{"location":"capturetheflag/basic/detect/analysis/#network-information","text":"C:\\> netstat -e C:\\> netstat -naob C:\\> netstat -nr C:\\> netstat -vb C:\\> nbtstat -s C:\\> route print C:\\> arp -a C:\\> ipconfig /displaydns C:\\> netsh winhttp show proxy C:\\> ipconfig /allcompartments /all C:\\> netsh wlan show interfaces C:\\> netsh wlan show all C:\\> reg query \"HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections\\WinHttpSettings\" C:\\> type %SYSTEMROOT%\\system32\\drivers\\etc\\hosts C:\\> wmic nicconfig get descriptions,IPaddress,MACaddress C:\\> wmic netuse getname,username,connectiontype, localname SERVICE INFORMATION C:\\> at C:\\> tasklist C:\\> task list /SVC C:\\> tasklist /SVC /fi \"imagename eq svchost.exe\" C:\\> schtasks C:\\> net start C:\\> sc query C:\\> wmic service list brief C:\\> wmic service list conf ig C:\\> wmic process list brief C:\\> wmic process list status C:\\> wmic process list memory C:\\> wmic job list brief I findstr \"Running\" PS C:\\> Get-Service I Where-Object { $_.Status -eq \"running\" }","title":"NETWORK INFORMATION"},{"location":"capturetheflag/basic/detect/analysis/#list-of-all-processes-and-then-all-loaded-modules","text":"PS C:\\> Get-Process !select modules!ForeachObject{$_.modules}","title":"List of all processes and then all loaded modules:"},{"location":"capturetheflag/basic/detect/analysis/#policy-patch-and-settings-information","text":"C:\\> set C:\\> gpresult /r C:\\> gpresult /z > <OUTPUT FILE NAME>.txt C:\\> gpresult /H report.html /F C:\\> wmic qfe","title":"POLICY, PATCH AND SETTINGS INFORMATION"},{"location":"capturetheflag/basic/detect/analysis/#list-gpo-software-installed","text":"C:\\> reg query uHKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Group Policy\\AppMgmt\"","title":"List GPO software installed:"},{"location":"capturetheflag/basic/detect/analysis/#autorun-and-autoload-information-startup-information","text":"C:\\> wmic startup list full C:\\> wmic ntdomain list brief","title":"AUTORUN AND AUTOLOAD INFORMATION Startup information:"},{"location":"capturetheflag/basic/detect/analysis/#view-directory-contents-of-startup-folder","text":"C:\\> dir \"%SystemDrive%\\ProgramData\\Microsoft\\Windows\\StartMenu\\P rog rams\\Sta rtup\" C:\\> dir \"%SystemDrive%\\Documents and Settings\\AllUse rs\\Sta rt Menu\\Prog rams\\Sta rtup\" C:\\> dir %userprofile%\\Start Menu\\Programs\\Startup C:\\> %ProgramFiles%\\Startup\\ C:\\> dir C:\\Windows\\Start Menu\\Programs\\startup C:\\> dir \"C:\\Users\\%username%\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\" C:\\> dir \"C:\\ProgramData\\Microsoft\\Windows\\StartMenu\\P rog rams\\Sta rtup\" C:\\> dir \"%APPDATA%\\Microsoft\\Windows\\StartMenu\\Prog rams\\Sta rtup\" C:\\> dir \"%ALLUSERSPROFILE%\\Microsoft\\Windows\\StartMenu\\Prog rams\\Sta rtup\" C:\\> dir \"%ALLUSERSPROFILE%\\StartMenu\\P rog rams\\Sta rtup\" C:\\> type C:\\Windows\\winstart.bat C:\\> type %windir%\\wininit.ini C:\\> type %windir%\\win.ini","title":"View directory contents of startup folder:"},{"location":"capturetheflag/basic/detect/analysis/#view-autoruns-hide-microsoft-files","text":"C:\\> autorunsc -accepteula -m C:\\> type C:\\Autoexec.bat\"","title":"View autoruns, hide Microsoft files:"},{"location":"capturetheflag/basic/detect/analysis/#show-all-autorun-files-export-to-csv-and-check-with-virustotal","text":"C:\\> autorunsc.exe -accepteula -a -c -i -e -f -l -m -v","title":"Show all autorun files, export to csv and check with VirusTotal:"},{"location":"capturetheflag/basic/detect/analysis/#hkey_classes_root","text":"C:\\> reg query HKCR\\Comfile\\Shell\\Open\\Command C:\\> reg query HKCR\\Batfile\\Shell\\Open\\Command C:\\> reg query HKCR\\htafile\\Shell\\Open\\Command C:\\> reg query HKCR\\Exefile\\Shell\\Open\\Command C:\\> reg query HKCR\\Exefiles\\Shell\\Open\\Command C:\\> reg query HKCR\\piffile\\shell\\open\\command","title":"HKEY_CLASSES_ROOT:"},{"location":"capturetheflag/basic/detect/analysis/#hkey_current_users","text":"C:\\> reg query uHKCU\\Control Panel\\Desktop\" C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Runonce C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServ ices Once C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Windows\\Run C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Windows\\Load C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Windows\\Scripts C:\\> reg query HKCU\\Software\\Microsoft\\WindowsNT\\CurrentVersion\\Windows /f run C:\\> reg query HKCU\\Software\\Microsoft\\WindowsNT\\CurrentVersion\\Windows /f load C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RecentDocs C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComDlg32\\LastVisitedMRU C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComD1g32\\0pen5aveMRU C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComDlg32\\LastVisitedPidlMRU C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComD1g32\\0pen5avePidlMRU /s C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RunMRU C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders C:\\> reg query uHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" C:\\> reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Applets\\RegEdit /v LastKey C:\\> reg query \"HKCU\\Software\\Microsoft\\InternetExp lo re r\\ TypedURLs\" C:\\> reg query uHKCU\\Software\\Policies\\Microsoft\\Windows\\ControlPanel \\Desktop\"","title":"HKEY_CURRENT_USERS:"},{"location":"capturetheflag/basic/detect/analysis/#hkey_local_machine","text":"C:\\> reg query uHKLM\\SOFTWARE\\Mic rosoft\\Act iveSetup\\Installed Components\" /s C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\explorer\\User Shell Folders C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\explorer\\Shell Folders C:\\> reg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\explorer\\ShellExecuteHooks C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Browser Helper Objects /s C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Runonce C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunServices C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Winlogon\\Userinit C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\shellServiceObjectDelayLoad C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\Schedule\\TaskCache\\Tasks\" /s C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\Windows\" C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\Windows\" /f Appinit_DLLs C:\\> reg query HKLM\\SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\Winlogon\" /f Shell C:\\> reg query HKLM\\SOFTWARE\\Mic rosoft\\WindowsNT\\CurrentVersion\\Winlogon\" /f Userinit C:\\> reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Systern\\Scripts C:\\> reg query HKLM\\SOFTWARE\\Classes\\batfile\\shell\\open\\cornrnand C:\\> reg query HKLM\\SOFTWARE\\Classes\\cornfile\\shell\\open\\cornrnand C:\\> reg query HKLM\\SOFTWARE\\Classes\\exefile\\shell\\open\\command C:\\> reg query HKLM\\SOFTWARE\\Classes\\htafile\\Shell\\Open\\Command C:\\> reg query HKLM\\SOFTWARE\\Classes\\piffile\\shell\\open\\command C:\\> reg query 11HKLM\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Browser Helper Objects\" /s C:\\> reg query \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\SessionManager\" C:\\> reg query \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\SessionManager\\KnownDLLs\" C:\\> reg query \"HKLM\\SYSTEM\\ControlSet001\\Control\\SessionManager\\KnownDLLs\"","title":"HKEY_LOCAL_MACHINE:"},{"location":"capturetheflag/basic/detect/analysis/#logs","text":"","title":"LOGS"},{"location":"capturetheflag/basic/detect/analysis/#copy-event-logs","text":"C:\\> wevtutil epl Security C:\\<BACK UPPATH>\\mylogs.evtx C:\\> wevtutil epl System C:\\<BACK UPPATH>\\mylogs.evtx C:\\> wevtutil epl Application C:\\<BACK UPPATH>\\mylogs.evtx","title":"Copy event logs:"},{"location":"capturetheflag/basic/detect/analysis/#get-list-of-logs-remotely","text":"C:\\> psloglist \\\\<REMOTE COMPUTER> -accepteula -h 12 -x","title":"Get list of logs remotely:"},{"location":"capturetheflag/basic/detect/analysis/#clear-all-logs-and-start-a-baseline-log-to-monitor","text":"PS C:\\> wevtutil el I Foreach-Object {wevtutil cl\"$_\"}","title":"Clear all logs and start a baseline log to monitor:"},{"location":"capturetheflag/basic/detect/analysis/#list-log-filenames-and-path-location","text":"C:\\> wmic nteventlog get path,filename,writeable","title":"List log filenames and path location:"},{"location":"capturetheflag/basic/detect/analysis/#take-pre-breach-log-export","text":"PS C:\\> wevtutil el I ForEach-Object{Get-Eventlog -Log \"$_\" I Export-Csv -Path (:\\<BASELINE LOG>,csv -Append}","title":"Take pre breach log export:"},{"location":"capturetheflag/basic/detect/analysis/#take-post-breach-log-export","text":"PS C:\\> wevtutil el I ForEach-Object{Get-EventLog -Log\"$_\" I Export-Csv -Path C:\\<POST BASELINELOG>,CSV -Append}","title":"Take post breach log export:"},{"location":"capturetheflag/basic/detect/analysis/#compare-two-files-baseline-and-post-breach-logs","text":"PS C:\\> Compare-Object -ReferenceObject $(GetContent\"C:\\<PATH TO FILE>\\<ORIGINAL BASELINELOGS>.txt\") -DifferenceObject $(Get-Content\"C:\\<PATH TO FILE>\\<POST BASELINE LOGS>.txt\") >><DIFFERENCES LOG>.txt","title":"Compare two files baseline and post breach logs:"},{"location":"capturetheflag/basic/detect/analysis/#this-deletes-all-logs","text":"PS C:\\> wevtutil el I Foreach-Object {wevtutil cl\"$_\"}","title":"This deletes all logs:"},{"location":"capturetheflag/basic/detect/analysis/#files-drives-and-shares-information","text":"C:\\> net use \\\\<TARGET IP ADDRESS> C:\\> net share C:\\> net session C:\\> wmic volume list brief C:\\> wmic logicaldisk getdescription,filesystem,name,size C:\\> wmic share get name,path","title":"FILES, DRIVES AND SHARES INFORMATION"},{"location":"capturetheflag/basic/detect/analysis/#find-multiple-file-types-or-a-file","text":"C:\\> dir /A /5 /T:A *,exe *,dll *,bat *\u00b7PS1 *,zip C:\\> dir /A /5 /T:A <BAD FILE NAME>,exe","title":"Find multiple file types or a file:"},{"location":"capturetheflag/basic/detect/analysis/#find-executable-exe-files-newer-than-jan-1-2017","text":"C:\\> forfiles /p C:\\ /M *,exe /5 /0 +1/1/2017 /C\"cmd /c echo @fdate @ftime @path\"","title":"Find executable (.exe) files newer than Jan 1, 2017:"},{"location":"capturetheflag/basic/detect/analysis/#find-multiple-files-types-using-loop","text":"C:\\> for %G in (.exe, .dll, .bat, .ps) do forfiles -p \"C:\" -m *%G -s -d +1/1/2017 -c \"cmd /c echo @fdate@ftime @path\"","title":"Find multiple files types using loop:"},{"location":"capturetheflag/basic/detect/analysis/#search-for-files-newer-than-date","text":"C:\\> forfiles /PC:\\ /5 /0 +1/01/2017 /C \"cmd /cecho @path @fdate\"Find large files: (example <20 MB) C:\\> forfiles /5 /M * /C \"cmd /c if @fsize GEO2097152 echo @path @fsize\"","title":"Search for files newer than date:"},{"location":"capturetheflag/basic/detect/analysis/#find-files-with-alternate-data-streams","text":"C:\\> streams -s <FILE OR DIRECTORY>","title":"Find files with Alternate Data Streams:"},{"location":"capturetheflag/basic/detect/analysis/#find-files-with-bad-signature-into-csv","text":"C:\\> sigcheck -c -h -s -u -nobanner <FILE ORDIRECTORY> > <OUTPUT FILENAME>,csv","title":"Find files with bad signature into csv:"},{"location":"capturetheflag/basic/detect/analysis/#find-and-show-only-unsigned-files-with-bad-signaturein-c","text":"C:\\> sigcheck -e -u -vr -s C:\\","title":"Find and show only unsigned files with bad signaturein C:"},{"location":"capturetheflag/basic/detect/analysis/#list-loaded-unsigned-dlls","text":"C:\\> listdlls.exe -u C:\\> listdlls.exe -u <PROCESS NAME OR PID>","title":"List loaded unsigned Dlls:"},{"location":"capturetheflag/basic/detect/analysis/#run-malware-scan-windows-defender-offline","text":"C:\\> MpCmdRun.exe -SignatureUpdate C:\\> MpCmdRun.exe -Scan","title":"Run Malware scan (Windows Defender) offline:"},{"location":"capturetheflag/basic/detect/editcap/","text":"Use to edit a pcap file (split into 1000 packets): # editcap -F pcap -c 1000 orignal.pcap out_split,pcap Use to edit a pcap file (split into 1 hour each packets): # editcap -F pcap -t+3600 orignal.pcap out_split.pcap","title":"edicap"},{"location":"capturetheflag/basic/detect/editcap/#use-to-edit-a-pcap-file-split-into-1000-packets","text":"editcap -F pcap -c 1000 orignal.pcap","title":"Use to edit a pcap file (split into 1000 packets):"},{"location":"capturetheflag/basic/detect/editcap/#out_splitpcap-use-to-edit-a-pcap-file-split-into-1-hour-each-packets","text":"editcap -F pcap -t+3600 orignal.pcap out_split.pcap","title":"out_split,pcap Use to edit a pcap file (split into 1 hour each packets):"},{"location":"capturetheflag/basic/detect/linux/","text":"Authentication logs in Ubuntu: # tail /var/log/auth. log grep -i \"fail\" /var/log/auth. log User login logs in Ubuntu: # tail /var/ Look at samba activity: # grep -i samba /var/log/syslog Look at cron activity: # grep -i cron /var/log/syslog Look at sudo activity: # grep -i sudo /var/log/auth. log Look in Apache Logs for 404 errors: # grep 404 <LOG FILE NAME> I grep -v -E \"favicon. ico I robots. txt\" Look at Apache Logs for files requested: # head access_log I awk '{print $7}' Monitor for new created files every Smin: # watch -n 300 -d ls -lR /<WEB DIRECTORY> Look where traffic is coming from: # cat <LOG FILE NAME> I fgrep -v <YOUR DOMAIN> I cut -d\\\" -f4 I grep -v \"\"- Monitor for TCP connections every 5 seconds: # netstat -ac 5 I grep tcp Install audit framework and review syscalls/events: # apt-get install auditd auditctl -a exit,always -5 execve ausearch -m execve Get audit report summary: # aureport","title":"linux"},{"location":"capturetheflag/basic/detect/linux/#authentication-logs-in-ubuntu","text":"tail /var/log/auth. log grep -i \"fail\" /var/log/auth. log","title":"Authentication logs in Ubuntu:"},{"location":"capturetheflag/basic/detect/linux/#user-login-logs-in-ubuntu","text":"tail /var/","title":"User login logs in Ubuntu:"},{"location":"capturetheflag/basic/detect/linux/#look-at-samba-activity","text":"grep -i samba /var/log/syslog","title":"Look at samba activity:"},{"location":"capturetheflag/basic/detect/linux/#look-at-cron-activity","text":"grep -i cron /var/log/syslog","title":"Look at cron activity:"},{"location":"capturetheflag/basic/detect/linux/#look-at-sudo-activity","text":"grep -i sudo /var/log/auth. log","title":"Look at sudo activity:"},{"location":"capturetheflag/basic/detect/linux/#look-in-apache-logs-for-404-errors","text":"grep 404 <LOG FILE NAME> I grep -v -E \"favicon. ico I robots. txt\"","title":"Look in Apache Logs for 404 errors:"},{"location":"capturetheflag/basic/detect/linux/#look-at-apache-logs-for-files-requested","text":"head access_log I awk '{print $7}'","title":"Look at Apache Logs for files requested:"},{"location":"capturetheflag/basic/detect/linux/#monitor-for-new-created-files-every-smin","text":"watch -n 300 -d ls -lR /<WEB DIRECTORY>","title":"Monitor for new created files every Smin:"},{"location":"capturetheflag/basic/detect/linux/#look-where-traffic-is-coming-from","text":"cat <LOG FILE NAME> I fgrep -v <YOUR DOMAIN> I cut -d\\\" -f4 I grep -v \"\"-","title":"Look where traffic is coming from:"},{"location":"capturetheflag/basic/detect/linux/#monitor-for-tcp-connections-every-5-seconds","text":"netstat -ac 5 I grep tcp","title":"Monitor for TCP connections every 5 seconds:"},{"location":"capturetheflag/basic/detect/linux/#install-audit-framework-and-review-syscallsevents","text":"apt-get install auditd auditctl -a exit,always -5 execve ausearch -m execve","title":"Install audit framework and review syscalls/events:"},{"location":"capturetheflag/basic/detect/linux/#get-audit-report-summary","text":"aureport","title":"Get audit report summary:"},{"location":"capturetheflag/basic/detect/mergecap/","text":"Use to merge multiple pcap files: # mergecap -w merged_cap.pcap capl.pcap cap2.pcap cap3.pcap","title":"mergecap"},{"location":"capturetheflag/basic/detect/mergecap/#use-to-merge-multiple-pcap-files","text":"mergecap -w merged_cap.pcap capl.pcap cap2.pcap cap3.pcap","title":"Use to merge multiple pcap files:"},{"location":"capturetheflag/basic/detect/snort/","text":"Run test on snort config file: # snort -T -c /<PATH TO SNORT>/snort/snort.conf Use snort(v=verbose,d=dump packet payload): # snort -dv -r <LOG FILE NAME>, log Replay a log file and match icmp traffic: # snort -dvr packet.log icmp Logs in ASCII: # snort -K ascii -l <LOG DIRECTORY> Logs in binary: # snort -l <LOG DIRECTORY> Sent events to console: # snort -q -A console -i eth0 -c /etc/snort/snort.conf snort -c snort.conf -l /tmp/so/console -A console Create a single snort rule and save: # echo alert any any <SNORT RULE> > one.rule Test single rule: # snort -T -c one.rule Run single rule and output to console and logs dir: # mkdir ,/logs snort -vd -c one.rule -r <PCAP FILE NAME>,pcap -A console -l logs","title":"snort"},{"location":"capturetheflag/basic/detect/snort/#run-test-on-snort-config-file","text":"snort -T -c /<PATH TO SNORT>/snort/snort.conf","title":"Run test on snort config file:"},{"location":"capturetheflag/basic/detect/snort/#use-snortvverboseddump-packet-payload","text":"snort -dv -r <LOG FILE NAME>, log","title":"Use snort(v=verbose,d=dump packet payload):"},{"location":"capturetheflag/basic/detect/snort/#replay-a-log-file-and-match-icmp-traffic","text":"snort -dvr packet.log icmp","title":"Replay a log file and match icmp traffic:"},{"location":"capturetheflag/basic/detect/snort/#logs-in-ascii","text":"snort -K ascii -l <LOG DIRECTORY>","title":"Logs in ASCII:"},{"location":"capturetheflag/basic/detect/snort/#logs-in-binary","text":"snort -l <LOG DIRECTORY>","title":"Logs in binary:"},{"location":"capturetheflag/basic/detect/snort/#sent-events-to-console","text":"snort -q -A console -i eth0 -c /etc/snort/snort.conf snort -c snort.conf -l /tmp/so/console -A console","title":"Sent events to console:"},{"location":"capturetheflag/basic/detect/snort/#create-a-single-snort-rule-and-save","text":"echo alert any any <SNORT RULE> > one.rule","title":"Create a single snort rule and save:"},{"location":"capturetheflag/basic/detect/snort/#test-single-rule","text":"snort -T -c one.rule","title":"Test single rule:"},{"location":"capturetheflag/basic/detect/snort/#run-single-rule-and-output-to-console-and-logs-dir","text":"mkdir ,/logs snort -vd -c one.rule -r <PCAP FILE NAME>,pcap -A console -l logs","title":"Run single rule and output to console and logs dir:"},{"location":"capturetheflag/basic/detect/tcpdump/","text":"View ASCII (-A) or HEX (-X) traffic: # tcpdump -A tcpdump -X View traffic with timestamps and don't convert addresses and be verbose: # tcpdump -tttt -n -vv Find top talkers after 1000 packets (PotentialDDoS): # tcpdump -nn -c 1000 jawk '{print $3}' I cut -d. -fl-4 I sort -n I uniq -c I sort -nr Capture traffic on any interface from a target host and specific port and output to a file: # tcpdump -w <FILENAME>,pcap -i any dst <TARGET IPADDRESS> and port 80 View traffic only between two hosts: # tcpdump host 10.0.0.1 && host 10.0.0.2 View all traffic except from a net or a host: # tcpdump not net 10.10 && not host 192.168.1,2 View host and either of two other hosts: # tcpdump host 10,10,10.10 && \\(10,10.10.20 or 10,10,10,30\\) Save pcap file on rotating size: # tcpdump -n -s65535 -c 1000 -w '%host_%Y-%m\u00ad%d_%H:%M:%S.pcap' Save pcap file to a remote host: # tcpdump -w - I ssh <REMOTE HOST ADDRESS> -p 50005 \"cat - > /tmp/remotecapture.pcap\" Grab traffic that contains the word pass: # tcpdump -n -A -s0 I grep pass Grab many clear text protocol passwords: # tcpdump -n -A -s0 port http or port ftp or port smtp or port imap or port pop3 I egrep -i 'pass=lpwd=llog=llogin=luser=lusername=lpw=lpassw=IP asswd=lpassword=lpass: I user: lusername: I password: I login: I pass I user ' --color=auto --line-buffered -B20 Get throughput # tcpdump -w - lpv -bert >/dev/null Filter out ipv6 traffic: # tcpdump not ip6 Filer out ipv4 traffic: # tcpdump ip6 Script to capture multiple interface tcpdumps to files rotating every hour: # #!/bin/bash tcpdump -pni any -s65535 -G 3600 -w any%Y-%m\u00ad%d_%H:%M:%S.pcap Script to move multiple tcpdump files to alternate location: # #!/bin/bash while true; do sleep 1; rsync -azvr -progress <USER NAME>@<IP ADDRESS>:<TRAFFIC DIRECTORY>/, <DESTINATION DIRECTORY/. done Look for suspicious and self-signed SSL certificates: # tcpdump -s 1500 -A '(tcp[((tcp[12:1] & 0xf0) >> 2)+5:1] = 0x01) and (tcp[((tcp[12:1] & 0xf0) >> 2) : 1] : 0x16) I Get SSL Certificate: # openssl s_client -connect <URL>:443 openssl s_client -connect <SITE>:443 </dev/null 2>/dev/null I sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-Ip' > <CERT>.pem Examine and verify the certificate and check for Self-Signed: # openssl x509 -text -in <CERT>.pem openssl x509 -in <CERT>,pem -noout -issuer -subject -startdate -enddate -fingerprint openssl verify <CERT>.pem Extract Certificate Server Name: # tshark -nr <PCAP FILE NAME> -Y \"ssl. handshake. ciphersuites\" -Vx I grep \"ServerName:\" I sort I uniq -c I sort -r Extract Certificate info for analysis: # ssldump -Nr <FILE NAME>.pcap I awk 'BEGIN {c=0;}{ if ($0 \ufffd /A[ ]+Certificate$/) {c=l; print\"========================================\";} if($0 !\ufffd/A +/) {c=0;} if (c==l) print $0; }'","title":"tcpdump"},{"location":"capturetheflag/basic/detect/tcpdump/#view-ascii-a-or-hex-x-traffic","text":"tcpdump -A tcpdump -X","title":"View ASCII (-A) or HEX (-X) traffic:"},{"location":"capturetheflag/basic/detect/tcpdump/#view-traffic-with-timestamps-and-dont-convert-addresses-and-be-verbose","text":"tcpdump -tttt -n -vv","title":"View traffic with timestamps and don't convert addresses and be verbose:"},{"location":"capturetheflag/basic/detect/tcpdump/#find-top-talkers-after-1000-packets-potentialddos","text":"tcpdump -nn -c 1000 jawk '{print $3}' I cut -d. -fl-4 I sort -n I uniq -c I sort -nr","title":"Find top talkers after 1000 packets (PotentialDDoS):"},{"location":"capturetheflag/basic/detect/tcpdump/#capture-traffic-on-any-interface-from-a-target-host-and-specific-port-and-output-to-a-file","text":"tcpdump -w <FILENAME>,pcap -i any dst <TARGET IPADDRESS> and port 80","title":"Capture traffic on any interface from a target host and specific port and output to a file:"},{"location":"capturetheflag/basic/detect/tcpdump/#view-traffic-only-between-two-hosts","text":"tcpdump host 10.0.0.1 && host 10.0.0.2","title":"View traffic only between two hosts:"},{"location":"capturetheflag/basic/detect/tcpdump/#view-all-traffic-except-from-a-net-or-a-host","text":"tcpdump not net 10.10 && not host 192.168.1,2","title":"View all traffic except from a net or a host:"},{"location":"capturetheflag/basic/detect/tcpdump/#view-host-and-either-of-two-other-hosts","text":"tcpdump host 10,10,10.10 && \\(10,10.10.20 or 10,10,10,30\\)","title":"View host and either of two other hosts:"},{"location":"capturetheflag/basic/detect/tcpdump/#save-pcap-file-on-rotating-size","text":"tcpdump -n -s65535 -c 1000 -w '%host_%Y-%m\u00ad%d_%H:%M:%S.pcap'","title":"Save pcap file on rotating size:"},{"location":"capturetheflag/basic/detect/tcpdump/#save-pcap-file-to-a-remote-host","text":"tcpdump -w - I ssh <REMOTE HOST ADDRESS> -p 50005 \"cat - > /tmp/remotecapture.pcap\"","title":"Save pcap file to a remote host:"},{"location":"capturetheflag/basic/detect/tcpdump/#grab-traffic-that-contains-the-word-pass","text":"tcpdump -n -A -s0 I grep pass","title":"Grab traffic that contains the word pass:"},{"location":"capturetheflag/basic/detect/tcpdump/#grab-many-clear-text-protocol-passwords","text":"tcpdump -n -A -s0 port http or port ftp or port smtp or port imap or port pop3 I egrep -i 'pass=lpwd=llog=llogin=luser=lusername=lpw=lpassw=IP asswd=lpassword=lpass: I user: lusername: I password: I login: I pass I user ' --color=auto --line-buffered -B20","title":"Grab many clear text protocol passwords:"},{"location":"capturetheflag/basic/detect/tcpdump/#get-throughput","text":"tcpdump -w - lpv -bert >/dev/null","title":"Get throughput"},{"location":"capturetheflag/basic/detect/tcpdump/#filter-out-ipv6-traffic","text":"tcpdump not ip6","title":"Filter out ipv6 traffic:"},{"location":"capturetheflag/basic/detect/tcpdump/#filer-out-ipv4-traffic","text":"tcpdump ip6","title":"Filer out ipv4 traffic:"},{"location":"capturetheflag/basic/detect/tcpdump/#script-to-capture-multiple-interface-tcpdumps-to-files-rotating-every-hour","text":"#!/bin/bash tcpdump -pni any -s65535 -G 3600 -w any%Y-%m\u00ad%d_%H:%M:%S.pcap","title":"Script to capture multiple interface tcpdumps to files rotating every hour:"},{"location":"capturetheflag/basic/detect/tcpdump/#script-to-move-multiple-tcpdump-files-to-alternate-location","text":"#!/bin/bash while true; do sleep 1; rsync -azvr -progress <USER NAME>@<IP ADDRESS>:<TRAFFIC DIRECTORY>/, <DESTINATION DIRECTORY/. done","title":"Script to move multiple tcpdump files to alternate location:"},{"location":"capturetheflag/basic/detect/tcpdump/#look-for-suspicious-and-self-signed-ssl-certificates","text":"tcpdump -s 1500 -A '(tcp[((tcp[12:1] & 0xf0) >> 2)+5:1] = 0x01) and (tcp[((tcp[12:1] & 0xf0) >> 2) : 1] : 0x16) I","title":"Look for suspicious and self-signed SSL certificates:"},{"location":"capturetheflag/basic/detect/tcpdump/#get-ssl-certificate","text":"openssl s_client -connect <URL>:443 openssl s_client -connect <SITE>:443 </dev/null 2>/dev/null I sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-Ip' > <CERT>.pem","title":"Get SSL Certificate:"},{"location":"capturetheflag/basic/detect/tcpdump/#examine-and-verify-the-certificate-and-check-for-self-signed","text":"openssl x509 -text -in <CERT>.pem openssl x509 -in <CERT>,pem -noout -issuer -subject -startdate -enddate -fingerprint openssl verify <CERT>.pem","title":"Examine and verify the certificate and check for Self-Signed:"},{"location":"capturetheflag/basic/detect/tcpdump/#extract-certificate-server-name","text":"tshark -nr <PCAP FILE NAME> -Y \"ssl. handshake. ciphersuites\" -Vx I grep \"ServerName:\" I sort I uniq -c I sort -r","title":"Extract Certificate Server Name:"},{"location":"capturetheflag/basic/detect/tcpdump/#extract-certificate-info-for-analysis","text":"ssldump -Nr <FILE NAME>.pcap I awk 'BEGIN {c=0;}{ if ($0 \ufffd /A[ ]+Certificate$/) {c=l; print\"========================================\";} if($0 !\ufffd/A +/) {c=0;} if (c==l) print $0; }'","title":"Extract Certificate info for analysis:"},{"location":"capturetheflag/basic/detect/tshark/","text":"Get list of network interfaces: # tshark -D Listen on multiple network interfaces: # tshark -i ethl -i eth2 -i eth3 Save to pcap and disable name resolution: # tshark -nn -w <FILE NAME>,pcap Get absolute date and time stamp: # tshark -t a Get arp or icmp traffic: # tshark arp or icmp Capture traffic between to [hosts] and/or [nets]: # tshark \"host <HOST l> && host <HOST 2>\" tshark -n \"net <NET 1> && net <NET 2>\" Filter just host and IPs (or not your IP): # tshark -r <FILE NAME>,pcap -q -z hosts,ipv4 tshark not host <YOUR IP ADDRESS> Not ARP and not UDP: # tshark not arp and not (udp.port -- 53) Replay a pcap file: # tshark -r <FILE NAME>.pcap Replay a pcap and just grab hosts and IPs: # tshark -r <FILE NAME>.pcap -q -z hosts Setup a capture session(duration=60sec): # tshark -n -a files:10 -a filesize:100 -a duration:60 -w <FILE NAME>,pcap Grab src/dst IPs only: # tshark -n -e ip.src -e ip.dst -T fields -E separator=, -Rip Grab IP of src DNS and DNS query: # tshark -n -e ip.src -e dns,qry.name -E separator=';' -T fields port 53 Grab HTTP URL host and request: # tshark -R http.request -T fields -E separator=';' -e http.host -e http.request.uri Grab just HTTP host requests: # tshark -n -R http.request -T fields -e http.host Grab top talkers by IP dst: # tshark -n -c 150 I awk '{print $4}' I sort -n Iuniq -c I sort -nr Grab top stats of protocols: # tshark -q -z io,phs -r <FILE NAME>.pcap tshark -r <PCAP FILE>,cap -R http.request -T fields -e http.host -e http.request.uri lsed -e 'sf?,*$//' I sed -e 's#\"(,*)t(,*)$#http://l2#' I sort I uniq -c I sort -rn I head tshark -n -c 100 -e ip.src -R \"dns.flags.responseeq 1\" -T fields po rt 53 tshark -n -e http.request.uri -R http.request -T fields I grep exe tshark -n -c 1000 -e http.host -R http.request -T fields port 80 I sort I uniq -c I sort -r","title":"tshark"},{"location":"capturetheflag/basic/detect/tshark/#get-list-of-network-interfaces","text":"tshark -D","title":"Get list of network interfaces:"},{"location":"capturetheflag/basic/detect/tshark/#listen-on-multiple-network-interfaces","text":"tshark -i ethl -i eth2 -i eth3","title":"Listen on multiple network interfaces:"},{"location":"capturetheflag/basic/detect/tshark/#save-to-pcap-and-disable-name-resolution","text":"tshark -nn -w <FILE NAME>,pcap","title":"Save to pcap and disable name resolution:"},{"location":"capturetheflag/basic/detect/tshark/#get-absolute-date-and-time-stamp","text":"tshark -t a","title":"Get absolute date and time stamp:"},{"location":"capturetheflag/basic/detect/tshark/#get-arp-or-icmp-traffic","text":"tshark arp or icmp","title":"Get arp or icmp traffic:"},{"location":"capturetheflag/basic/detect/tshark/#capture-traffic-between-to-hosts-andor-nets","text":"tshark \"host <HOST l> && host <HOST 2>\" tshark -n \"net <NET 1> && net <NET 2>\"","title":"Capture traffic between to [hosts] and/or [nets]:"},{"location":"capturetheflag/basic/detect/tshark/#filter-just-host-and-ips-or-not-your-ip","text":"tshark -r <FILE NAME>,pcap -q -z hosts,ipv4 tshark not host <YOUR IP ADDRESS>","title":"Filter just host and IPs (or not your IP):"},{"location":"capturetheflag/basic/detect/tshark/#not-arp-and-not-udp","text":"tshark not arp and not (udp.port -- 53)","title":"Not ARP and not UDP:"},{"location":"capturetheflag/basic/detect/tshark/#replay-a-pcap-file","text":"tshark -r <FILE NAME>.pcap","title":"Replay a pcap file:"},{"location":"capturetheflag/basic/detect/tshark/#replay-a-pcap-and-just-grab-hosts-and-ips","text":"tshark -r <FILE NAME>.pcap -q -z hosts","title":"Replay a pcap and just grab hosts and IPs:"},{"location":"capturetheflag/basic/detect/tshark/#setup-a-capture-sessionduration60sec","text":"tshark -n -a files:10 -a filesize:100 -a duration:60 -w <FILE NAME>,pcap","title":"Setup a capture session(duration=60sec):"},{"location":"capturetheflag/basic/detect/tshark/#grab-srcdst-ips-only","text":"tshark -n -e ip.src -e ip.dst -T fields -E separator=, -Rip","title":"Grab src/dst IPs only:"},{"location":"capturetheflag/basic/detect/tshark/#grab-ip-of-src-dns-and-dns-query","text":"tshark -n -e ip.src -e dns,qry.name -E separator=';' -T fields port 53","title":"Grab IP of src DNS and DNS query:"},{"location":"capturetheflag/basic/detect/tshark/#grab-http-url-host-and-request","text":"tshark -R http.request -T fields -E separator=';' -e http.host -e http.request.uri","title":"Grab HTTP URL host and request:"},{"location":"capturetheflag/basic/detect/tshark/#grab-just-http-host-requests","text":"tshark -n -R http.request -T fields -e http.host","title":"Grab just HTTP host requests:"},{"location":"capturetheflag/basic/detect/tshark/#grab-top-talkers-by-ip-dst","text":"tshark -n -c 150 I awk '{print $4}' I sort -n Iuniq -c I sort -nr","title":"Grab top talkers by IP dst:"},{"location":"capturetheflag/basic/detect/tshark/#grab-top-stats-of-protocols","text":"tshark -q -z io,phs -r <FILE NAME>.pcap tshark -r <PCAP FILE>,cap -R http.request -T fields -e http.host -e http.request.uri lsed -e 'sf?,*$//' I sed -e 's#\"(,*)t(,*)$#http://l2#' I sort I uniq -c I sort -rn I head tshark -n -c 100 -e ip.src -R \"dns.flags.responseeq 1\" -T fields po rt 53 tshark -n -e http.request.uri -R http.request -T fields I grep exe tshark -n -c 1000 -e http.host -R http.request -T fields port 80 I sort I uniq -c I sort -r","title":"Grab top stats of protocols:"},{"location":"capturetheflag/basic/detect/windows/","text":"Increase Log size to support increased auditing: # C:\\> reg add HKLM\\Software\\Policies\\Microsoft\\Windows\\Eventlog\\Application /v MaxSize /t REG_DWORD /d 0x19000 C:\\> reg add HKLM\\Software\\Policies\\Microsoft\\Windows\\Eventlog\\Security /v MaxSize /t REG_DWORD /d 0x64000 C:\\> reg add HKLM\\Software\\Policies\\Microsoft\\Windows\\EventLog\\System /v MaxSize /t REG_DWORD /d 0x19000 Check settings of Security log: # C:\\> wevtutil gl Security Check settings of audit policies: # C:\\> auditpol /get /category:* Set Log Auditing on for Success and/or Failure on All Categories: # C:\\> auditpol /set /category:* /success:enable /failure:enable Set Log Auditing on for Success and/or Failure on Subcategories: # C:\\> auditpol /set /subcategory: \"Detailed FileShare\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"File System\"/success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Security System Extension\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"System Integrity\"/success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Security StateChange\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Other SystemEvents\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"System Integrity\"/success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Logon\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Logoff\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Account Lockout\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Other Logon/Logoff Events\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Network Policy Server\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Registry\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"SAM\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Certification Services\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Application Generated\" /success:enable /failure:enable C:\\> auditpol /set /subcategory: \"Handle Manipulation\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"file Share\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"filtering Platform Packet Drop\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Filtering Platform Connection\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Other Object Access Events\" /success:enable /failure:enable C:\\> auditpol /set /subcategory: \"Detailed File Share\" /success:enable /failure:enable C:\\> auditpol /set /subcategory: \"Sensitive Privilege Use\" /success:enable /failure:enable C:\\> auditpol /set /subcategory: \"Non Sensitive Privilege Use\" /success:enable /failure:enable C:\\> auditpol /set /subcategory: \"Other Privilege Use Events\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Process Termination\" /success:enable /failure:enable C:\\> auditpol /set /subcategory: \"DPAPI Activity\" /success:enable /failure:enable C:\\> auditpol /set /subcategory: \"RPC Events\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Process Creation\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Audit Policy Change\" /success:enable /failure:enable C:\\> auditpol /set /subcategory: \"Authentication Policy Change\" /success:enable /failure:enable C:\\> auditpol /set /subcategory: \"Authorization Policy Change\" /success:enable /failure:enable C:\\> auditpol /set /subcategory: \"MPSSVC Rule-Level Policy Change\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Filtering Platform Policy Change\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Other Policy Change Events\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"User Account Management\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Computer Account Management\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Security Group Management\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Distribution Group Management\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Application Group Management\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Other Account Management Events\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Directory Service Changes\" /success:enable /failure:enable C:\\> auditpol / set /subcategory: \"Directory Service Replication\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Detailed Directory Service Replication\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Directory Service Access\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Kerberos Service Ticket Operations\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Other Account Logan Events\" /success:enable /failure:enable C:\\> audit pol /set /subcategory: \"Kerberos Authentication Service\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Credential Validation\" /success:enable /failure:enable Check for list of available logs, size, retention limit: # PS C:\\> Get-Eventlog -list Partial list of Key Security Log Auditing events to monitor: # PS C:\\> Get-Eventlog -newest 5 -logname applicationI Format-List Show log from remote system: # PS C:\\> Show-Eventlog -computername <SERVER NAME>Get a specific list of events based on Event ID: PS C:\\> Get-Eventlog Security I ? { $_.Eventid -eq4800} PS C:\\> Get-WinEvent -FilterHashtable@{LogName=\"Secu rity\"; ID=4774} Account Logon - Audit Credential Validation Last 14 Days: # PS C:\\> Get-Eventlog Security 4768,4771,4772,4769,4770,4649,4778,4779,4800,4801,48 02,4803,5378,5632,5633 -after ((get-date).addDays(-14)) Account - Logon/Logoff: # PS C:\\> Get-Eventlog Security 4625,4634,4647,4624,4625,4648,4675,6272,6273,6274,62 75,6276,6277,6278,6279,6280,4649,4778,4779,4800,4801,4802,4803,5378,5632,5633,4964 -after ((getdate).addDays(-1)) Account Management - Audit Application Group Management: # PS C:\\> Get-Eventlog Security 4783,4784,4785,4786,4787,4788,4789,4790,4741,4742,47 43,4744,4745,4746,4747,4748,4749,4750,4751,4752,4753,4759,4760,4761,4762,4782,4793,4727,4728,4729,4730,4731,4732,4733,4734,4735,4737,4754,4755,4756,4757,4758,4764,4720,4722,4723,4724,4725,4726,4738,4740,4765,4766,4767,4780,4781,4794,5376,5377 -after ((getdate).addDays(-1)) Detailed Tracking - Audit DPAPI Activity, Process Termination, RPC Events: # PS C:\\> Get-EventLog Security 4692,4693,4694,4695,4689,5712 -after ((getdate).addDays(-1)) Domain Service Access - Audit Directory Service Access: # PS C:\\> Get-EventLog Security 4662,5136,5137,5138,5139,5141 -after ((getdate).addDays(-1)) Object Access - Audit File Share, File System, SAM,Registry, Certifications: # PS C:\\> Get-EventLog Security 4671,4691,4698,4699,4700,4701,4702,5148,5149,5888,5889,5890,4657,5039,4659,4660,4661,4663,4656,4658,4690,4874,4875,4880,4881,4882,4884,4885,4888,4890,4891,4892,4895,4896,4898,5145,5140,5142,5143,5144,5168,5140,5142,5143,5144,5168,5140,5142,5143,5144,5168,4664,4985,5152,5153,5031,5140,5150,5151,5154,5155,5156,5157,5158,5159 -after ((get-date).addDays(-1)) Policy Change - Audit Policy Change, Microsoft Protection Service, Windows Filtering Platform: # PS C:\\> Get-EventLog Security 4715,4719,4817,4902,4904,4905,4906,4907,4908,4912,4713,4716,4717,4718,4739,4864,4865,4866,4867,4704,4705,4706,4707,4714,4944,4945,4946,4947,4948,4949,4950,4951,4952,4953,4954,4956,4957,4958,5046,5047,5048,5449,5450,4670 -after ((get-date).addDays(-1)) Privilege Use - Audit Non-Sensitive/Sensitive Privilege Use: # PS C:\\> Get-EventLog Security 4672,4673,4674 -after((get-date),addDays(-1)) System - Audit Security State Change, Security System Extension, System Integrity, System Events: # PS C:\\> Get-Eventlog Security 5024,5025,5027,5028,5029,5030,5032,5033,5034,5035,5037,5058,5059,6400,6401,6402,6403,6404,6405,6406,6407,4608,4609 ,4616, 4621, 4610, 4611, 4614,4622,4697,4612,4615,4618,4816,5038,5056,5057,5060,5061,5062,6281 -after ((get-date).addDays(-1)) Add Microsoft IIS cmdlet: # PS C:\\> add-pssnapin WebAdministration PS C:\\> Import-Module WebAdministration Get IIS Website info: PS C:\\> Get-IISSite Get IIS Log Path Location: PS C:\\> (Get-WebConfigurationProperty '/system.applicationHost/sites/siteDefaults' -Name 'logfile.directory').Value Set variable for IIS Log Path (default path): # PS C:\\> $LogDirPath = \"C:\\inetpub\\logs\\LogFiles\\W3SVCl\" Get IIS HTTP log file list from Last 7 days: # PS C:\\> Get-Child!tem -Path C:\\inetpub\\logs\\LogFiles\\w3svcl -recurse I WhereObject {$_. lastwritetime -lt (get-date).addDays(-7)} View IIS Logs (Using $LogDirPath variable set above): # PS C:\\> Get-Content $LogDirPath\\*, log I%{$_ -replace '#Fields: ', \"} I?{$_ -notmatch \"\"#'} I ConvertFrom-Csv -Delimiter ' View IIS Logs: # PS C:\\> Get-Content <!IS LOG FILE NAME>, log I%{$_ -replace '#Fields: ', ''} 17{$_ -notmatch 'A#'} I ConvertFrom-Csv -Delimiter ' 'Find in IIS logs IP address 192.168.*\u00b7* pattern: PS C:\\> Select-String -Path $LogDirPath\\*, log -Pattern '192,168,*,*' Find in IIS logs common SQL injection patterns: # PS C:\\> Select-String -Path $LogDirPath\\*, log'(@@version) I (sqlmap) I (Connect\\(\\)) I (cast\\() I (char\\() I ( bcha r\\ () I ( sysdatabases) I ( \\ (select) I (convert\\ () I ( Connect\\ () I ( count\\() I (sys objects)'","title":"windows"},{"location":"capturetheflag/basic/detect/windows/#increase-log-size-to-support-increased-auditing","text":"C:\\> reg add HKLM\\Software\\Policies\\Microsoft\\Windows\\Eventlog\\Application /v MaxSize /t REG_DWORD /d 0x19000 C:\\> reg add HKLM\\Software\\Policies\\Microsoft\\Windows\\Eventlog\\Security /v MaxSize /t REG_DWORD /d 0x64000 C:\\> reg add HKLM\\Software\\Policies\\Microsoft\\Windows\\EventLog\\System /v MaxSize /t REG_DWORD /d 0x19000","title":"Increase Log size to support increased auditing:"},{"location":"capturetheflag/basic/detect/windows/#check-settings-of-security-log","text":"C:\\> wevtutil gl Security","title":"Check settings of Security log:"},{"location":"capturetheflag/basic/detect/windows/#check-settings-of-audit-policies","text":"C:\\> auditpol /get /category:*","title":"Check settings of audit policies:"},{"location":"capturetheflag/basic/detect/windows/#set-log-auditing-on-for-success-andor-failure-on-all-categories","text":"C:\\> auditpol /set /category:* /success:enable /failure:enable","title":"Set Log Auditing on for Success and/or Failure on All Categories:"},{"location":"capturetheflag/basic/detect/windows/#set-log-auditing-on-for-success-andor-failure-on-subcategories","text":"C:\\> auditpol /set /subcategory: \"Detailed FileShare\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"File System\"/success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Security System Extension\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"System Integrity\"/success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Security StateChange\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Other SystemEvents\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"System Integrity\"/success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Logon\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Logoff\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Account Lockout\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Other Logon/Logoff Events\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Network Policy Server\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Registry\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"SAM\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Certification Services\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Application Generated\" /success:enable /failure:enable C:\\> auditpol /set /subcategory: \"Handle Manipulation\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"file Share\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"filtering Platform Packet Drop\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Filtering Platform Connection\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Other Object Access Events\" /success:enable /failure:enable C:\\> auditpol /set /subcategory: \"Detailed File Share\" /success:enable /failure:enable C:\\> auditpol /set /subcategory: \"Sensitive Privilege Use\" /success:enable /failure:enable C:\\> auditpol /set /subcategory: \"Non Sensitive Privilege Use\" /success:enable /failure:enable C:\\> auditpol /set /subcategory: \"Other Privilege Use Events\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Process Termination\" /success:enable /failure:enable C:\\> auditpol /set /subcategory: \"DPAPI Activity\" /success:enable /failure:enable C:\\> auditpol /set /subcategory: \"RPC Events\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Process Creation\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Audit Policy Change\" /success:enable /failure:enable C:\\> auditpol /set /subcategory: \"Authentication Policy Change\" /success:enable /failure:enable C:\\> auditpol /set /subcategory: \"Authorization Policy Change\" /success:enable /failure:enable C:\\> auditpol /set /subcategory: \"MPSSVC Rule-Level Policy Change\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Filtering Platform Policy Change\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Other Policy Change Events\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"User Account Management\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Computer Account Management\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Security Group Management\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Distribution Group Management\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Application Group Management\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Other Account Management Events\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Directory Service Changes\" /success:enable /failure:enable C:\\> auditpol / set /subcategory: \"Directory Service Replication\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Detailed Directory Service Replication\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Directory Service Access\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Kerberos Service Ticket Operations\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Other Account Logan Events\" /success:enable /failure:enable C:\\> audit pol /set /subcategory: \"Kerberos Authentication Service\" /success:enable /failure:enable C:\\> auditpol /set /subcategory:\"Credential Validation\" /success:enable /failure:enable","title":"Set Log Auditing on for Success and/or Failure on Subcategories:"},{"location":"capturetheflag/basic/detect/windows/#check-for-list-of-available-logs-size-retention-limit","text":"PS C:\\> Get-Eventlog -list","title":"Check for list of available logs, size, retention limit:"},{"location":"capturetheflag/basic/detect/windows/#partial-list-of-key-security-log-auditing-events-to-monitor","text":"PS C:\\> Get-Eventlog -newest 5 -logname applicationI Format-List","title":"Partial list of Key Security Log Auditing events to monitor:"},{"location":"capturetheflag/basic/detect/windows/#show-log-from-remote-system","text":"PS C:\\> Show-Eventlog -computername <SERVER NAME>Get a specific list of events based on Event ID: PS C:\\> Get-Eventlog Security I ? { $_.Eventid -eq4800} PS C:\\> Get-WinEvent -FilterHashtable@{LogName=\"Secu rity\"; ID=4774}","title":"Show log from remote system:"},{"location":"capturetheflag/basic/detect/windows/#account-logon-audit-credential-validation-last-14-days","text":"PS C:\\> Get-Eventlog Security 4768,4771,4772,4769,4770,4649,4778,4779,4800,4801,48 02,4803,5378,5632,5633 -after ((get-date).addDays(-14))","title":"Account Logon - Audit Credential Validation Last 14 Days:"},{"location":"capturetheflag/basic/detect/windows/#account-logonlogoff","text":"PS C:\\> Get-Eventlog Security 4625,4634,4647,4624,4625,4648,4675,6272,6273,6274,62 75,6276,6277,6278,6279,6280,4649,4778,4779,4800,4801,4802,4803,5378,5632,5633,4964 -after ((getdate).addDays(-1))","title":"Account - Logon/Logoff:"},{"location":"capturetheflag/basic/detect/windows/#account-management-audit-application-group-management","text":"PS C:\\> Get-Eventlog Security 4783,4784,4785,4786,4787,4788,4789,4790,4741,4742,47 43,4744,4745,4746,4747,4748,4749,4750,4751,4752,4753,4759,4760,4761,4762,4782,4793,4727,4728,4729,4730,4731,4732,4733,4734,4735,4737,4754,4755,4756,4757,4758,4764,4720,4722,4723,4724,4725,4726,4738,4740,4765,4766,4767,4780,4781,4794,5376,5377 -after ((getdate).addDays(-1))","title":"Account Management - Audit Application Group Management:"},{"location":"capturetheflag/basic/detect/windows/#detailed-tracking-audit-dpapi-activity-process-termination-rpc-events","text":"PS C:\\> Get-EventLog Security 4692,4693,4694,4695,4689,5712 -after ((getdate).addDays(-1))","title":"Detailed Tracking - Audit DPAPI Activity, Process Termination, RPC Events:"},{"location":"capturetheflag/basic/detect/windows/#domain-service-access-audit-directory-service-access","text":"PS C:\\> Get-EventLog Security 4662,5136,5137,5138,5139,5141 -after ((getdate).addDays(-1))","title":"Domain Service Access - Audit Directory Service Access:"},{"location":"capturetheflag/basic/detect/windows/#object-access-audit-file-share-file-system-samregistry-certifications","text":"PS C:\\> Get-EventLog Security 4671,4691,4698,4699,4700,4701,4702,5148,5149,5888,5889,5890,4657,5039,4659,4660,4661,4663,4656,4658,4690,4874,4875,4880,4881,4882,4884,4885,4888,4890,4891,4892,4895,4896,4898,5145,5140,5142,5143,5144,5168,5140,5142,5143,5144,5168,5140,5142,5143,5144,5168,4664,4985,5152,5153,5031,5140,5150,5151,5154,5155,5156,5157,5158,5159 -after ((get-date).addDays(-1))","title":"Object Access - Audit File Share, File System, SAM,Registry, Certifications:"},{"location":"capturetheflag/basic/detect/windows/#policy-change-audit-policy-change-microsoft-protection-service-windows-filtering-platform","text":"PS C:\\> Get-EventLog Security 4715,4719,4817,4902,4904,4905,4906,4907,4908,4912,4713,4716,4717,4718,4739,4864,4865,4866,4867,4704,4705,4706,4707,4714,4944,4945,4946,4947,4948,4949,4950,4951,4952,4953,4954,4956,4957,4958,5046,5047,5048,5449,5450,4670 -after ((get-date).addDays(-1))","title":"Policy Change - Audit Policy Change, Microsoft Protection Service, Windows Filtering Platform:"},{"location":"capturetheflag/basic/detect/windows/#privilege-use-audit-non-sensitivesensitive-privilege-use","text":"PS C:\\> Get-EventLog Security 4672,4673,4674 -after((get-date),addDays(-1))","title":"Privilege Use - Audit Non-Sensitive/Sensitive Privilege Use:"},{"location":"capturetheflag/basic/detect/windows/#system-audit-security-state-change-security-system-extension-system-integrity-system-events","text":"PS C:\\> Get-Eventlog Security 5024,5025,5027,5028,5029,5030,5032,5033,5034,5035,5037,5058,5059,6400,6401,6402,6403,6404,6405,6406,6407,4608,4609 ,4616, 4621, 4610, 4611, 4614,4622,4697,4612,4615,4618,4816,5038,5056,5057,5060,5061,5062,6281 -after ((get-date).addDays(-1))","title":"System - Audit Security State Change, Security System Extension, System Integrity, System Events:"},{"location":"capturetheflag/basic/detect/windows/#add-microsoft-iis-cmdlet","text":"PS C:\\> add-pssnapin WebAdministration PS C:\\> Import-Module WebAdministration Get IIS Website info: PS C:\\> Get-IISSite Get IIS Log Path Location: PS C:\\> (Get-WebConfigurationProperty '/system.applicationHost/sites/siteDefaults' -Name 'logfile.directory').Value","title":"Add Microsoft IIS cmdlet:"},{"location":"capturetheflag/basic/detect/windows/#set-variable-for-iis-log-path-default-path","text":"PS C:\\> $LogDirPath = \"C:\\inetpub\\logs\\LogFiles\\W3SVCl\"","title":"Set variable for IIS Log Path (default path):"},{"location":"capturetheflag/basic/detect/windows/#get-iis-http-log-file-list-from-last-7-days","text":"PS C:\\> Get-Child!tem -Path C:\\inetpub\\logs\\LogFiles\\w3svcl -recurse I WhereObject {$_. lastwritetime -lt (get-date).addDays(-7)}","title":"Get IIS HTTP log file list from Last 7 days:"},{"location":"capturetheflag/basic/detect/windows/#view-iis-logs-using-logdirpath-variable-set-above","text":"PS C:\\> Get-Content $LogDirPath\\*, log I%{$_ -replace '#Fields: ', \"} I?{$_ -notmatch \"\"#'} I ConvertFrom-Csv -Delimiter '","title":"View IIS Logs (Using $LogDirPath variable set above):"},{"location":"capturetheflag/basic/detect/windows/#view-iis-logs","text":"PS C:\\> Get-Content <!IS LOG FILE NAME>, log I%{$_ -replace '#Fields: ', ''} 17{$_ -notmatch 'A#'} I ConvertFrom-Csv -Delimiter ' 'Find in IIS logs IP address 192.168.*\u00b7* pattern: PS C:\\> Select-String -Path $LogDirPath\\*, log -Pattern '192,168,*,*'","title":"View IIS Logs:"},{"location":"capturetheflag/basic/detect/windows/#find-in-iis-logs-common-sql-injection-patterns","text":"PS C:\\> Select-String -Path $LogDirPath\\*, log'(@@version) I (sqlmap) I (Connect\\(\\)) I (cast\\() I (char\\() I ( bcha r\\ () I ( sysdatabases) I ( \\ (select) I (convert\\ () I ( Connect\\ () I ( count\\() I (sys objects)'","title":"Find in IIS logs common SQL injection patterns:"},{"location":"capturetheflag/basic/identify/basic/","text":"1-IDENTIFY (SCOPE) #","title":"basic"},{"location":"capturetheflag/basic/identify/basic/#1-identify-scope","text":"","title":"1-IDENTIFY (SCOPE)"},{"location":"capturetheflag/basic/identify/linux/","text":"linux # NETWORK DISCOVERY # Net view scan: # smbtree -b smbtree -D smbtree -5 View open 5MB shares: # smbclient -L <HOST NAME> smbstatus Basic ping scan: # for ip in $(seq 1 254); do ping -c 1 192.168.1.$ip>/dev/null; [ $? -eq 0 ] && echo \"192.168.1. $ip UP\" 11 : ; done DHCP # View DHCP lease logs: # Red Hat 3: cat /var/lib/dhcpd/dhcpd. leases Ubuntu: grep -Ei 'dhcp' /var/log/syslog.1 Ubuntu DHCP logs: # tail -f dhcpd. log DNS # Start DNS logging: # rndc querylog View DNS logs: # tail -f /var/log/messages I grep named HASHING # Hash all executable files in these specified locations: # find /<PATHNAME TO ENUMERATE> -type f -exec mdSsum {} >> mdSsums.txt \\; mdSdeep -rs /> mdSsums.txt NETBIOS # Basic nbtstat scan: # nbtscan <IP ADDRESS OR RANGE> PASSWORDS # Password and username guessing or checks: # while read line; do username=$line; while readline; do smbclient -L <TARGET IP ADDRESS> -U $username%$line -g -d 0; echo $username:$line;done<<PASSWORDS>.txt; done<<USER NAMES>,txt","title":"linux"},{"location":"capturetheflag/basic/identify/linux/#linux","text":"","title":"linux"},{"location":"capturetheflag/basic/identify/linux/#network-discovery","text":"","title":"NETWORK DISCOVERY"},{"location":"capturetheflag/basic/identify/linux/#net-view-scan","text":"smbtree -b smbtree -D smbtree -5","title":"Net view scan:"},{"location":"capturetheflag/basic/identify/linux/#view-open-5mb-shares","text":"smbclient -L <HOST NAME> smbstatus","title":"View open 5MB shares:"},{"location":"capturetheflag/basic/identify/linux/#basic-ping-scan","text":"for ip in $(seq 1 254); do ping -c 1 192.168.1.$ip>/dev/null; [ $? -eq 0 ] && echo \"192.168.1. $ip UP\" 11 : ; done","title":"Basic ping scan:"},{"location":"capturetheflag/basic/identify/linux/#dhcp","text":"","title":"DHCP"},{"location":"capturetheflag/basic/identify/linux/#view-dhcp-lease-logs","text":"Red Hat 3: cat /var/lib/dhcpd/dhcpd. leases Ubuntu: grep -Ei 'dhcp' /var/log/syslog.1","title":"View DHCP lease logs:"},{"location":"capturetheflag/basic/identify/linux/#ubuntu-dhcp-logs","text":"tail -f dhcpd. log","title":"Ubuntu DHCP logs:"},{"location":"capturetheflag/basic/identify/linux/#dns","text":"","title":"DNS"},{"location":"capturetheflag/basic/identify/linux/#start-dns-logging","text":"rndc querylog","title":"Start DNS logging:"},{"location":"capturetheflag/basic/identify/linux/#view-dns-logs","text":"tail -f /var/log/messages I grep named","title":"View DNS logs:"},{"location":"capturetheflag/basic/identify/linux/#hashing","text":"","title":"HASHING"},{"location":"capturetheflag/basic/identify/linux/#hash-all-executable-files-in-these-specified-locations","text":"find /<PATHNAME TO ENUMERATE> -type f -exec mdSsum {} >> mdSsums.txt \\; mdSdeep -rs /> mdSsums.txt","title":"Hash all executable files in these specified locations:"},{"location":"capturetheflag/basic/identify/linux/#netbios","text":"","title":"NETBIOS"},{"location":"capturetheflag/basic/identify/linux/#basic-nbtstat-scan","text":"nbtscan <IP ADDRESS OR RANGE>","title":"Basic nbtstat scan:"},{"location":"capturetheflag/basic/identify/linux/#passwords","text":"","title":"PASSWORDS"},{"location":"capturetheflag/basic/identify/linux/#password-and-username-guessing-or-checks","text":"while read line; do username=$line; while readline; do smbclient -L <TARGET IP ADDRESS> -U $username%$line -g -d 0; echo $username:$line;done<<PASSWORDS>.txt; done<<USER NAMES>,txt","title":"Password and username guessing or checks:"},{"location":"capturetheflag/basic/identify/nessus/","text":"NESSUS # Basic Nessus scan: # nessus -q -x -T html <NESSUS SERVER IP ADDRESS> <NESSUS SERVER PORT 1241> <ADMIN ACCOUNT> <ADMIN>PASSWORD> <FILE WITH TARGETS>,txt <RESULTS FILENAME>.html nessus [-vnh] [-c .refile] [-VJ [-T <format>] Batch-mode scan # nessus -q [-pPS] <HOST> <PORT> <USER NAME><PASSWORD> <targets-file> <result-file> Report conversion: # # nessus -i in. [nsrlnbe] -oout. [xmllnsrlnbelhtmlltxt]","title":"nessus"},{"location":"capturetheflag/basic/identify/nessus/#nessus","text":"","title":"NESSUS"},{"location":"capturetheflag/basic/identify/nessus/#basic-nessus-scan","text":"nessus -q -x -T html <NESSUS SERVER IP ADDRESS> <NESSUS SERVER PORT 1241> <ADMIN ACCOUNT> <ADMIN>PASSWORD> <FILE WITH TARGETS>,txt <RESULTS FILENAME>.html nessus [-vnh] [-c .refile] [-VJ [-T <format>]","title":"Basic Nessus scan:"},{"location":"capturetheflag/basic/identify/nessus/#batch-mode-scan","text":"nessus -q [-pPS] <HOST> <PORT> <USER NAME><PASSWORD> <targets-file> <result-file>","title":"Batch-mode scan"},{"location":"capturetheflag/basic/identify/nessus/#report-conversion","text":"# nessus -i in. [nsrlnbe] -oout. [xmllnsrlnbelhtmlltxt]","title":"Report conversion:"},{"location":"capturetheflag/basic/identify/nmap/","text":"NMAP # Ping sweep for network: # nmap -sn -PE <IP ADDRESS OR RANGE> Scan and show open ports: # nmap --open <IP ADDRESS OR RANGE> Determine open services: # nmap -sV <IP ADDRESS> Scan two common TCP ports, HTTP and HTTPS: # nmap -p 80,443 <IP ADDRESS OR RANGE> Scan common UDP port, DNS: # nmap -sU -p 53 <IP ADDRESS OR RANGE> Scan UDP and TCP together, be verbose on a single host and include optional skip ping: # nmap -v -Pn -SU -ST -p U:53,111,137,T:21-25,80,139,8080 <IP ADDRESS>","title":"nmap"},{"location":"capturetheflag/basic/identify/nmap/#nmap","text":"","title":"NMAP"},{"location":"capturetheflag/basic/identify/nmap/#ping-sweep-for-network","text":"nmap -sn -PE <IP ADDRESS OR RANGE>","title":"Ping sweep for network:"},{"location":"capturetheflag/basic/identify/nmap/#scan-and-show-open-ports","text":"nmap --open <IP ADDRESS OR RANGE>","title":"Scan and show open ports:"},{"location":"capturetheflag/basic/identify/nmap/#determine-open-services","text":"nmap -sV <IP ADDRESS>","title":"Determine open services:"},{"location":"capturetheflag/basic/identify/nmap/#scan-two-common-tcp-ports-http-and-https","text":"nmap -p 80,443 <IP ADDRESS OR RANGE>","title":"Scan two common TCP ports, HTTP and HTTPS:"},{"location":"capturetheflag/basic/identify/nmap/#scan-common-udp-port-dns","text":"nmap -sU -p 53 <IP ADDRESS OR RANGE>","title":"Scan common UDP port, DNS:"},{"location":"capturetheflag/basic/identify/nmap/#scan-udp-and-tcp-together-be-verbose-on-a-single-host-and-include-optional-skip-ping","text":"nmap -v -Pn -SU -ST -p U:53,111,137,T:21-25,80,139,8080 <IP ADDRESS>","title":"Scan UDP and TCP together, be verbose on a single host and include optional skip ping:"},{"location":"capturetheflag/basic/identify/openvas/","text":"OPENVAS # Step 1: Install the server, client and plugin packages: # apt-get install openvas-server openvas-client openvas-plugins-base openvas-plugins-dfsg Step 2: Update the vulnerability database # openvas-nvt-sync Step 3: Add a user to run the client: # openvas-adduser Step 4: Login: sysadm Step 5: Authentication (pass/cert) [pass]: [HITENTER] Step 6: Login password: <PASSWORD> You will then be asked to add \"User rules\". Step 7: Allow this user to scan authorized network by typing: accept <YOUR IP ADDRESS OR RANGE> default deny Step 8: type ctrl-D to exit, and then accept. Step 9: Start the server: # service openvas-server start Step 10: Set targets to scan: Create a text file with a list of hosts/networks to scan. # vi scanme.txt Step 11: Add one host, network per line: <IP ADDRESS OR RANGE> Step 12: Run scan: # openvas-client -q 127.0.0.1 9390 sysadm nsrc+ws scanme.txt openvas-output-.html -T txt -V -x Step 13: (Optional)run scan with HTML format: # openvas-client -q 127.0.0.1 9390 sysadm nsrc+ws scanme.txt openvas-output.txt -T html -V -x","title":"openvas"},{"location":"capturetheflag/basic/identify/openvas/#openvas","text":"Step 1: Install the server, client and plugin packages: # apt-get install openvas-server openvas-client openvas-plugins-base openvas-plugins-dfsg Step 2: Update the vulnerability database # openvas-nvt-sync Step 3: Add a user to run the client: # openvas-adduser Step 4: Login: sysadm Step 5: Authentication (pass/cert) [pass]: [HITENTER] Step 6: Login password: <PASSWORD> You will then be asked to add \"User rules\". Step 7: Allow this user to scan authorized network by typing: accept <YOUR IP ADDRESS OR RANGE> default deny Step 8: type ctrl-D to exit, and then accept. Step 9: Start the server: # service openvas-server start Step 10: Set targets to scan: Create a text file with a list of hosts/networks to scan. # vi scanme.txt Step 11: Add one host, network per line: <IP ADDRESS OR RANGE> Step 12: Run scan: # openvas-client -q 127.0.0.1 9390 sysadm nsrc+ws scanme.txt openvas-output-.html -T txt -V -x Step 13: (Optional)run scan with HTML format: # openvas-client -q 127.0.0.1 9390 sysadm nsrc+ws scanme.txt openvas-output.txt -T html -V -x","title":"OPENVAS"},{"location":"capturetheflag/basic/identify/windows/","text":"NETWORK DISCOVERY # Basic network discovery: # C:\\> net view /all C:\\> net view \\\\<HOST NAME> Basic ping scan and write output to file: # C:\\> for /L %I in (1,1,254) do ping -w 30 -n 1 192.168. l.%I I find \"Reply\" >> <OUTPUT FILENAME>.txt DHCP # Enable DHCP server logging: # C:\\> reg add HKLM\\System\\CurrentControlSet\\Services\\DhcpServer\\Parameters /v ActivityLogFlag /t REG_DWORD /d 1 Default Location Windows 2003/2008/2012: # C:\\> %windir%\\System32\\Dhcp DNS # Default location Windows 2003: # C:\\> %SystemRoot%\\System32\\Dns Default location Windows 2008: # C:\\> %SystemRoot%\\System32\\Winevt\\Logs\\DNSServer. evtx Default location of enhanced DNS Windows 2012 R2: # C:\\> %SystemRoot%\\System32\\Winevt\\Logs\\MicrosoftWindows-DNSServer%4Analytical.etl # Enable DNS Logging: # C:\\> DNSCmd <DNS SERVER NAME> /config /logLevel0x8100F331 Set log location: # C:\\> DNSCmd <DNS SERVER NAME> /config /LogFilePath<PATH TO LOG FILE> Set size of log file: # C:\\> DNSCmd <DNS SERVER NAME> /config/logfilemaxsize 0xffffffff HASHING # File Checksum Integrity Verifier (FCIV): # # Hash a file: # C:\\> fciv.exe <FILE TO HASH> Hash all files on C:\\ into a database file: # C:\\> fciv.exe c:\\ -r -mdS -xml <FILE NAME>.xml List all hashed files: # C:\\> fciv.exe -list -shal -xml <FILE NAME>.xml Verify previous hashes in db with file system: # C:\\> fciv.exe -v -shal -xml <FILE NAME>.xml Note: May be possible to create a master db and compare to all systems from a cmd line. Fast baseline and difference. PS C:\\> Get-FileHash <FILE TO HASH> I Format-List PS C:\\> Get-FileHash -algorithm md5 <FILE TO HASH> C:\\> certutil -hashfile <FILE TO HASH> SHAl C:\\> certutil -hashfile <FILE TO HASH> MD5 NETBIOS # Basic nbtstat scan: # C:\\> nbtstat -A <IP ADDRESS> Cached NetBIOS info on localhost: # C:\\> nbtstat -c Script loop scan: # C:\\> for /L %I in (1,1,254) do nbstat -An 192.168.l.%I USER ACTIVITY # Get users logged on: # C:\\> psloggedon \\\\computername Script loop scan: # C:\\> for /L %i in (1,1,254) do psloggedon\\\\192.168.l.%i >> C:\\users_output.txt PASSWORDS # Password guessing or checks: # # for /f %i in (<PASSWORD FILE NAME>.txt) do @echo %i & net use \\\\<TARGET IP ADDRESS> %i /u:<USERNAME> 2>nul && pause # for /f %i in (<USER NAME FILE>.txt) do @(for /f %j in (<PASSWORD FILE NAME>.txt) do @echo %i:%j & @net use \\\\<TARGET IP ADDRESS> %j /u:%i 2>nul && echo %i:%j >> success.txt && net use \\\\<IP ADDRESS>/del) MICROSOFT BASELINE SECURITY ANALYZER (MBSA) Basic scan of a target IP address: # C:\\> mbsacli.exe /target <TARGET IP ADDRESS> /n os+iis+sql+password Basic scan of a target IP range: # C:\\> mbsacli.exe /r <IP ADDRESS RANGE> /n os+iis+sql+password Basic scan of a target domain: # C:\\> mbsacli.exe /d <TARGET DOMAIN> /n os+iis+sql+password Basic scan of a target computer names in text file: # C:\\> mbsacli.exe /listfile <LISTNAME OF COMPUTERNAMES>.txt /n os+iis+sql+password ACTIVE DIRECTORY INVENTORY List all OUs: # C:\\> dsquery ou DC=<DOMAIN>,DC=<DOMAIN EXTENSION> List of workstations in the domain: # C:\\> netdom query WORKSTATION List of servers in the domain: # C:\\> netdom query SERVER List of domain controllers: # C:\\> netdom query DC List of organizational units under which the specified user can create a machine object: # C:\\> netdom query OU List of primary domain controller: # C:\\> netdom query PDC List the domain trusts: # C:\\> netdom query TRUST Query the domain for the current list of FSMO owners # C:\\> netdom query FSMO List all computers from Active Directory: # C:\\> dsquery COMPUTER \"OU=servers,DC=<DOMAINNAME>,DC=<DOMAIN EXTENSION>\" -o rdn -limit 0 > C:\\machines.txt List user accounts inactive longer than 3 weeks: # C:\\> dsquery user domainroot -inactive 3 Find anything (or user) created on date in UTC using timestamp format YYYYMMDDHHMMSS.sZ: # C:\\> dsquery * -filter\"(whenCreated>=20101022083730,0Z)\" C:\\> dsquery * -filter\"((whenCreated>=20101022083730.0Z)&(objectClass=user))II Alt option: # C:\\> ldifde -d ou=<OU NAME>,dC=<DOMAINNAME>,dc=<DOMAIN EXTENSION> -l whencreated,whenchanged -p onelevel -r \"(ObjectCategory=user)\" -f <OUTPUT FILENAME> The last logon timestamp format in UTC:YYYYMMDDHHMMSS Alt option: # C:\\> dsquery * dc=<DOMAIN NAME>,dc=<DOMAINEXTENSION> -filter \"(&(objectCategory=Person)(objectClass=User)(whenCreated>=20151001000000.0Z))\" Alt option: # C:\\> adfind -csv -b dc=<DOMAIN NAME>,dc=<DOMAINEXTENSION> -f \"(&(objectCategory=Person)(objectClass=User)(whenCreated>=20151001000000.0Z))\" Using PowerShell, dump new Active Directory accounts in last 90 Days: # PS C:\\> import-module activedirectory PS C:\\> Get-QADUser -CreatedAfter (GetDate).AddDays(-90) PS C:\\> Get-ADUser -Filter * -Properties whenCreatedI Where-Object {$_.whenCreated -ge ((GetDate).AddDays(-90)).Date}","title":"windows"},{"location":"capturetheflag/basic/identify/windows/#network-discovery","text":"","title":"NETWORK DISCOVERY"},{"location":"capturetheflag/basic/identify/windows/#basic-network-discovery","text":"C:\\> net view /all C:\\> net view \\\\<HOST NAME>","title":"Basic network discovery:"},{"location":"capturetheflag/basic/identify/windows/#basic-ping-scan-and-write-output-to-file","text":"C:\\> for /L %I in (1,1,254) do ping -w 30 -n 1 192.168. l.%I I find \"Reply\" >> <OUTPUT FILENAME>.txt","title":"Basic ping scan and write output to file:"},{"location":"capturetheflag/basic/identify/windows/#dhcp","text":"","title":"DHCP"},{"location":"capturetheflag/basic/identify/windows/#enable-dhcp-server-logging","text":"C:\\> reg add HKLM\\System\\CurrentControlSet\\Services\\DhcpServer\\Parameters /v ActivityLogFlag /t REG_DWORD /d 1","title":"Enable DHCP server logging:"},{"location":"capturetheflag/basic/identify/windows/#default-location-windows-200320082012","text":"C:\\> %windir%\\System32\\Dhcp","title":"Default Location Windows 2003/2008/2012:"},{"location":"capturetheflag/basic/identify/windows/#dns","text":"","title":"DNS"},{"location":"capturetheflag/basic/identify/windows/#default-location-windows-2003","text":"C:\\> %SystemRoot%\\System32\\Dns","title":"Default location Windows 2003:"},{"location":"capturetheflag/basic/identify/windows/#default-location-windows-2008","text":"C:\\> %SystemRoot%\\System32\\Winevt\\Logs\\DNSServer. evtx","title":"Default location Windows 2008:"},{"location":"capturetheflag/basic/identify/windows/#default-location-of-enhanced-dns-windows-2012-r2","text":"C:\\> %SystemRoot%\\System32\\Winevt\\Logs\\MicrosoftWindows-DNSServer%4Analytical.etl","title":"Default location of enhanced DNS Windows 2012 R2:"},{"location":"capturetheflag/basic/identify/windows/#enable-dns-logging","text":"C:\\> DNSCmd <DNS SERVER NAME> /config /logLevel0x8100F331","title":"Enable DNS Logging:"},{"location":"capturetheflag/basic/identify/windows/#set-log-location","text":"C:\\> DNSCmd <DNS SERVER NAME> /config /LogFilePath<PATH TO LOG FILE>","title":"Set log location:"},{"location":"capturetheflag/basic/identify/windows/#set-size-of-log-file","text":"C:\\> DNSCmd <DNS SERVER NAME> /config/logfilemaxsize 0xffffffff","title":"Set size of log file:"},{"location":"capturetheflag/basic/identify/windows/#hashing","text":"","title":"HASHING"},{"location":"capturetheflag/basic/identify/windows/#file-checksum-integrity-verifier-fciv","text":"","title":"File Checksum Integrity Verifier (FCIV):"},{"location":"capturetheflag/basic/identify/windows/#hash-a-file","text":"C:\\> fciv.exe <FILE TO HASH>","title":"Hash a file:"},{"location":"capturetheflag/basic/identify/windows/#hash-all-files-on-c-into-a-database-file","text":"C:\\> fciv.exe c:\\ -r -mdS -xml <FILE NAME>.xml","title":"Hash all files on C:\\ into a database file:"},{"location":"capturetheflag/basic/identify/windows/#list-all-hashed-files","text":"C:\\> fciv.exe -list -shal -xml <FILE NAME>.xml","title":"List all hashed files:"},{"location":"capturetheflag/basic/identify/windows/#verify-previous-hashes-in-db-with-file-system","text":"C:\\> fciv.exe -v -shal -xml <FILE NAME>.xml Note: May be possible to create a master db and compare to all systems from a cmd line. Fast baseline and difference. PS C:\\> Get-FileHash <FILE TO HASH> I Format-List PS C:\\> Get-FileHash -algorithm md5 <FILE TO HASH> C:\\> certutil -hashfile <FILE TO HASH> SHAl C:\\> certutil -hashfile <FILE TO HASH> MD5","title":"Verify previous hashes in db with file system:"},{"location":"capturetheflag/basic/identify/windows/#netbios","text":"","title":"NETBIOS"},{"location":"capturetheflag/basic/identify/windows/#basic-nbtstat-scan","text":"C:\\> nbtstat -A <IP ADDRESS>","title":"Basic nbtstat scan:"},{"location":"capturetheflag/basic/identify/windows/#cached-netbios-info-on-localhost","text":"C:\\> nbtstat -c","title":"Cached NetBIOS info on localhost:"},{"location":"capturetheflag/basic/identify/windows/#script-loop-scan","text":"C:\\> for /L %I in (1,1,254) do nbstat -An 192.168.l.%I","title":"Script loop scan:"},{"location":"capturetheflag/basic/identify/windows/#user-activity","text":"","title":"USER ACTIVITY"},{"location":"capturetheflag/basic/identify/windows/#get-users-logged-on","text":"C:\\> psloggedon \\\\computername","title":"Get users logged on:"},{"location":"capturetheflag/basic/identify/windows/#script-loop-scan_1","text":"C:\\> for /L %i in (1,1,254) do psloggedon\\\\192.168.l.%i >> C:\\users_output.txt","title":"Script loop scan:"},{"location":"capturetheflag/basic/identify/windows/#passwords","text":"","title":"PASSWORDS"},{"location":"capturetheflag/basic/identify/windows/#password-guessing-or-checks","text":"# for /f %i in (<PASSWORD FILE NAME>.txt) do @echo %i & net use \\\\<TARGET IP ADDRESS> %i /u:<USERNAME> 2>nul && pause # for /f %i in (<USER NAME FILE>.txt) do @(for /f %j in (<PASSWORD FILE NAME>.txt) do @echo %i:%j & @net use \\\\<TARGET IP ADDRESS> %j /u:%i 2>nul && echo %i:%j >> success.txt && net use \\\\<IP ADDRESS>/del) MICROSOFT BASELINE SECURITY ANALYZER (MBSA)","title":"Password guessing or checks:"},{"location":"capturetheflag/basic/identify/windows/#basic-scan-of-a-target-ip-address","text":"C:\\> mbsacli.exe /target <TARGET IP ADDRESS> /n os+iis+sql+password","title":"Basic scan of a target IP address:"},{"location":"capturetheflag/basic/identify/windows/#basic-scan-of-a-target-ip-range","text":"C:\\> mbsacli.exe /r <IP ADDRESS RANGE> /n os+iis+sql+password","title":"Basic scan of a target IP range:"},{"location":"capturetheflag/basic/identify/windows/#basic-scan-of-a-target-domain","text":"C:\\> mbsacli.exe /d <TARGET DOMAIN> /n os+iis+sql+password","title":"Basic scan of a target domain:"},{"location":"capturetheflag/basic/identify/windows/#basic-scan-of-a-target-computer-names-in-text-file","text":"C:\\> mbsacli.exe /listfile <LISTNAME OF COMPUTERNAMES>.txt /n os+iis+sql+password","title":"Basic scan of a target computer names in text file:"},{"location":"capturetheflag/basic/identify/windows/#active-directory-inventory-list-all-ous","text":"C:\\> dsquery ou DC=<DOMAIN>,DC=<DOMAIN EXTENSION>","title":"ACTIVE DIRECTORY INVENTORY List all OUs:"},{"location":"capturetheflag/basic/identify/windows/#list-of-workstations-in-the-domain","text":"C:\\> netdom query WORKSTATION","title":"List of workstations in the domain:"},{"location":"capturetheflag/basic/identify/windows/#list-of-servers-in-the-domain","text":"C:\\> netdom query SERVER","title":"List of servers in the domain:"},{"location":"capturetheflag/basic/identify/windows/#list-of-domain-controllers","text":"C:\\> netdom query DC","title":"List of domain controllers:"},{"location":"capturetheflag/basic/identify/windows/#list-of-organizational-units-under-which-the-specified-user-can-create-a-machine-object","text":"C:\\> netdom query OU","title":"List of organizational units under which the specified user can create a machine object:"},{"location":"capturetheflag/basic/identify/windows/#list-of-primary-domain-controller","text":"C:\\> netdom query PDC","title":"List of primary domain controller:"},{"location":"capturetheflag/basic/identify/windows/#list-the-domain-trusts","text":"C:\\> netdom query TRUST","title":"List the domain trusts:"},{"location":"capturetheflag/basic/identify/windows/#query-the-domain-for-the-current-list-of-fsmo-owners","text":"C:\\> netdom query FSMO","title":"Query the domain for the current list of FSMO owners"},{"location":"capturetheflag/basic/identify/windows/#list-all-computers-from-active-directory","text":"C:\\> dsquery COMPUTER \"OU=servers,DC=<DOMAINNAME>,DC=<DOMAIN EXTENSION>\" -o rdn -limit 0 > C:\\machines.txt","title":"List all computers from Active Directory:"},{"location":"capturetheflag/basic/identify/windows/#list-user-accounts-inactive-longer-than-3-weeks","text":"C:\\> dsquery user domainroot -inactive 3","title":"List user accounts inactive longer than 3 weeks:"},{"location":"capturetheflag/basic/identify/windows/#find-anything-or-user-created-on-date-in-utc-using-timestamp-format-yyyymmddhhmmsssz","text":"C:\\> dsquery * -filter\"(whenCreated>=20101022083730,0Z)\" C:\\> dsquery * -filter\"((whenCreated>=20101022083730.0Z)&(objectClass=user))II","title":"Find anything (or user) created on date in UTC using timestamp format YYYYMMDDHHMMSS.sZ:"},{"location":"capturetheflag/basic/identify/windows/#alt-option","text":"C:\\> ldifde -d ou=<OU NAME>,dC=<DOMAINNAME>,dc=<DOMAIN EXTENSION> -l whencreated,whenchanged -p onelevel -r \"(ObjectCategory=user)\" -f <OUTPUT FILENAME>","title":"Alt option:"},{"location":"capturetheflag/basic/identify/windows/#the-last-logon-timestamp-format-in-utcyyyymmddhhmmss-alt-option","text":"C:\\> dsquery * dc=<DOMAIN NAME>,dc=<DOMAINEXTENSION> -filter \"(&(objectCategory=Person)(objectClass=User)(whenCreated>=20151001000000.0Z))\"","title":"The last logon timestamp format in UTC:YYYYMMDDHHMMSS Alt option:"},{"location":"capturetheflag/basic/identify/windows/#alt-option_1","text":"C:\\> adfind -csv -b dc=<DOMAIN NAME>,dc=<DOMAINEXTENSION> -f \"(&(objectCategory=Person)(objectClass=User)(whenCreated>=20151001000000.0Z))\"","title":"Alt option:"},{"location":"capturetheflag/basic/identify/windows/#using-powershell-dump-new-active-directory-accounts-in-last-90-days","text":"PS C:\\> import-module activedirectory PS C:\\> Get-QADUser -CreatedAfter (GetDate).AddDays(-90) PS C:\\> Get-ADUser -Filter * -Properties whenCreatedI Where-Object {$_.whenCreated -ge ((GetDate).AddDays(-90)).Date}","title":"Using PowerShell, dump new Active Directory accounts in last 90 Days:"},{"location":"capturetheflag/basic/prootect_defend/linux/","text":"DISABLE/STOP SERVICES # Services information: # service --status-all ps -ef ps -aux Get a list of upstart jobs: # initctl list Example of start, stop, restarting a service in # Ubuntu: /etc/init,d/apache2 start /etc/init.d/apache2 restart /etc/init.d/apache2 stop (stops only until reboot) service mysql start service mysql restart service mysql stop (stops only until reboot) List all Upstart services: # ls /etc/init/*,conf Show if a program is managed by upstart and the process ID: # status ssh If not managed by upstart: # update-rc.d apache2 disable service apache2 stop HOST SYSTEM FIREWALLS # Export existing iptables firewall rules: # iptables-save > firewall.out Edit firewall rules and chains in firewall.out and save the file: # nano firewall.out Apply iptables: # iptables-restore < firewall.out Example iptables commands (IP, IP Range, Port Blocks): # iptables -A INPUT -s 10.10.10.10 -j DROP iptables -A INPUT -s 10,10.10.0/24 -j DROP iptables -A INPUT -p tcp --dport ssh 10.10.10.10 -j DROP iptables -A INPUT -p tcp --dport ssh -j DROP Block all connections: # iptables-policy INPUT DROP iptables-policy OUTPUT DROP iptables-policy FORWARD DROP Log all denied iptables rules: # iptables -I INPUT 5 -m limit --limit 5/min -j LOG --log-prefix \"iptables denied: \" --log-level 7 Save all current iptables rules: # Ubuntu: /etc/init.d/iptables save /sbin/service iptables save RedHat / CentOS: /etc/init.d/iptables save /sbin/iptables-save ```` ## List all current iptables rules: iptables -L ## Flush all current iptables rules: iptables -F ## Start/Stop iptables service: service iptables start service iptables stop ## Start/Stop ufw service: ufw enable ufw disable ## Start/Stop ufw logging: ufw logging on ufw logging off ## Backup all current ufw rules: cp /lib/ufw/{user.rules,user6.rules} / cp /lib/ufw/{user.rules,user6.rules} ./ ## Example uncomplicated firewall (ufw) Commands (IP,IP range, Port blocks): ufw status verbose ufw delete ufw allow for ufw allow all 80/tcp ufw allow all ssh ufw deny from proto udp to any port 443 # PASSWORDS ## Change password: passwd (For current user) passwd bob (For user Bob) sudo su passwd (For root) # HOST FILE ## Add new malicious domain to hosts file, and route to localhost: echo 127.0.0,1 >> /etc/hosts ## Check if hosts file is working, by sending ping to 127.0.0.1: ping -c 1 ## Ubuntu/Debian DNS cache flush: /etc/init.d/dns-clean start ## Flush nscd DNS cache four ways: /etc/init.d/nscd restart service nscd restart service nscd reload nscd -i hosts ```` Flush dnsmasq DNS cache: # /etc/init.d/dnsmasq restart WHITELIST # Use a Proxy Auto Config(PAC) file to create bad URLor IP List: # function FindProxyForURL(url, host) { // Send bad DNS name to the proxy if (dnsDomainis(host, \",badsite.com\")) return \"PROXY http:11127.0.0.1:8080\"; // Send bad IPs to the proxy if (isinNet(myipAddress(), \"222.222.222.222\", \"255.255.255.0\")) return \"PROXY http:11127.0.0.1:8080\"; // All other traffic bypass proxy return \"DIRECT\"; } IPSEC # Allow firewall to pass IPSEC traffic: # iptables -A INPUT -p esp -j ACCEPT iptables -A INPUT -p ah -j ACCEPT iptables -A INPUT -p udp --dport 500 -j ACCEPT iptables -A INPUT -p udp --dport 4500 -j ACCEPT Pass IPSEC traffic: # Step 1: # Install Racoon utility on <HOSTl IP ADDRESS>and <HOST2 IP ADDRESS> to enable IPSEC tunnel inUbuntu. apt-get install racoon Step 2: # Choose direct then edit letclipsectools.conf on <HOSTl IP ADDRESS> and <HOST2 IPADDRESS>. flush; spdflush; spdadd <HOSTl IP ADDRESS> <HOST2 IP ADDRESS> any -P out ipsec esp/transport//require; s pdadd <HOST2 IP ADDRESS> <HOSTl IP ADDRESS> any -P in ipsec esp/transport//require; Step 3: # Edit /etc/racoon/racoon.conf on <HOSTl IP ADDRESS> and <HOST2 IP ADDRESS>, log notify; path pre_shared_key \"/etc/racoon/psk.txt\"; path certificate \"/etc/racoon/certs\"; remote anonymous { exchange_mode main,aggressive; proposal { encryption_algorithm aes_256; hash_algorithm sha256; authentication_method pre_shared_key; dh_group modp1024; } generate_policy off; } sainfo anonymous{ } Step 4: # Add preshared key to both hosts.On HOSTl: echo <HOST2 IP ADDRESS> <PRESHARED PASSWORD> >>/etc/racoon/psk.txt On HOST2: echo <HOSTl IP ADDRESS> <PRESHARED PASSWORD> >>/etc/racoon/psk.txt Step 5: # Restart service on both systems. service setkey restart Check security associations, configuration and polices: setkey -D setkey -DP","title":"linux"},{"location":"capturetheflag/basic/prootect_defend/linux/#disablestop-services","text":"","title":"DISABLE/STOP SERVICES"},{"location":"capturetheflag/basic/prootect_defend/linux/#services-information","text":"service --status-all ps -ef ps -aux","title":"Services information:"},{"location":"capturetheflag/basic/prootect_defend/linux/#get-a-list-of-upstart-jobs","text":"initctl list","title":"Get a list of upstart jobs:"},{"location":"capturetheflag/basic/prootect_defend/linux/#example-of-start-stop-restarting-a-service-in","text":"Ubuntu: /etc/init,d/apache2 start /etc/init.d/apache2 restart /etc/init.d/apache2 stop (stops only until reboot) service mysql start service mysql restart service mysql stop (stops only until reboot)","title":"Example of start, stop, restarting a service in"},{"location":"capturetheflag/basic/prootect_defend/linux/#list-all-upstart-services","text":"ls /etc/init/*,conf","title":"List all Upstart services:"},{"location":"capturetheflag/basic/prootect_defend/linux/#show-if-a-program-is-managed-by-upstart-and-the-process-id","text":"status ssh","title":"Show if a program is managed by upstart and the process ID:"},{"location":"capturetheflag/basic/prootect_defend/linux/#if-not-managed-by-upstart","text":"update-rc.d apache2 disable service apache2 stop","title":"If not managed by upstart:"},{"location":"capturetheflag/basic/prootect_defend/linux/#host-system-firewalls","text":"","title":"HOST SYSTEM FIREWALLS"},{"location":"capturetheflag/basic/prootect_defend/linux/#export-existing-iptables-firewall-rules","text":"iptables-save > firewall.out","title":"Export existing iptables firewall rules:"},{"location":"capturetheflag/basic/prootect_defend/linux/#edit-firewall-rules-and-chains-in-firewallout-and-save-the-file","text":"nano firewall.out","title":"Edit firewall rules and chains in firewall.out and save the file:"},{"location":"capturetheflag/basic/prootect_defend/linux/#apply-iptables","text":"iptables-restore < firewall.out","title":"Apply iptables:"},{"location":"capturetheflag/basic/prootect_defend/linux/#example-iptables-commands-ip-ip-range-port-blocks","text":"iptables -A INPUT -s 10.10.10.10 -j DROP iptables -A INPUT -s 10,10.10.0/24 -j DROP iptables -A INPUT -p tcp --dport ssh 10.10.10.10 -j DROP iptables -A INPUT -p tcp --dport ssh -j DROP","title":"Example iptables commands (IP, IP Range, Port Blocks):"},{"location":"capturetheflag/basic/prootect_defend/linux/#block-all-connections","text":"iptables-policy INPUT DROP iptables-policy OUTPUT DROP iptables-policy FORWARD DROP","title":"Block all connections:"},{"location":"capturetheflag/basic/prootect_defend/linux/#log-all-denied-iptables-rules","text":"iptables -I INPUT 5 -m limit --limit 5/min -j LOG --log-prefix \"iptables denied: \" --log-level 7","title":"Log all denied iptables rules:"},{"location":"capturetheflag/basic/prootect_defend/linux/#save-all-current-iptables-rules","text":"Ubuntu: /etc/init.d/iptables save /sbin/service iptables save RedHat / CentOS: /etc/init.d/iptables save /sbin/iptables-save ```` ## List all current iptables rules: iptables -L ## Flush all current iptables rules: iptables -F ## Start/Stop iptables service: service iptables start service iptables stop ## Start/Stop ufw service: ufw enable ufw disable ## Start/Stop ufw logging: ufw logging on ufw logging off ## Backup all current ufw rules: cp /lib/ufw/{user.rules,user6.rules} / cp /lib/ufw/{user.rules,user6.rules} ./ ## Example uncomplicated firewall (ufw) Commands (IP,IP range, Port blocks): ufw status verbose ufw delete ufw allow for ufw allow all 80/tcp ufw allow all ssh ufw deny from proto udp to any port 443 # PASSWORDS ## Change password: passwd (For current user) passwd bob (For user Bob) sudo su passwd (For root) # HOST FILE ## Add new malicious domain to hosts file, and route to localhost: echo 127.0.0,1 >> /etc/hosts ## Check if hosts file is working, by sending ping to 127.0.0.1: ping -c 1 ## Ubuntu/Debian DNS cache flush: /etc/init.d/dns-clean start ## Flush nscd DNS cache four ways: /etc/init.d/nscd restart service nscd restart service nscd reload nscd -i hosts ````","title":"Save all current iptables rules:"},{"location":"capturetheflag/basic/prootect_defend/linux/#flush-dnsmasq-dns-cache","text":"/etc/init.d/dnsmasq restart","title":"Flush dnsmasq DNS cache:"},{"location":"capturetheflag/basic/prootect_defend/linux/#whitelist","text":"","title":"WHITELIST"},{"location":"capturetheflag/basic/prootect_defend/linux/#use-a-proxy-auto-configpac-file-to-create-bad-urlor-ip-list","text":"function FindProxyForURL(url, host) { // Send bad DNS name to the proxy if (dnsDomainis(host, \",badsite.com\")) return \"PROXY http:11127.0.0.1:8080\"; // Send bad IPs to the proxy if (isinNet(myipAddress(), \"222.222.222.222\", \"255.255.255.0\")) return \"PROXY http:11127.0.0.1:8080\"; // All other traffic bypass proxy return \"DIRECT\"; }","title":"Use a Proxy Auto Config(PAC) file to create bad URLor IP List:"},{"location":"capturetheflag/basic/prootect_defend/linux/#ipsec","text":"","title":"IPSEC"},{"location":"capturetheflag/basic/prootect_defend/linux/#allow-firewall-to-pass-ipsec-traffic","text":"iptables -A INPUT -p esp -j ACCEPT iptables -A INPUT -p ah -j ACCEPT iptables -A INPUT -p udp --dport 500 -j ACCEPT iptables -A INPUT -p udp --dport 4500 -j ACCEPT","title":"Allow firewall to pass IPSEC traffic:"},{"location":"capturetheflag/basic/prootect_defend/linux/#pass-ipsec-traffic","text":"","title":"Pass IPSEC traffic:"},{"location":"capturetheflag/basic/prootect_defend/linux/#step-1","text":"Install Racoon utility on <HOSTl IP ADDRESS>and <HOST2 IP ADDRESS> to enable IPSEC tunnel inUbuntu. apt-get install racoon","title":"Step 1:"},{"location":"capturetheflag/basic/prootect_defend/linux/#step-2","text":"Choose direct then edit letclipsectools.conf on <HOSTl IP ADDRESS> and <HOST2 IPADDRESS>. flush; spdflush; spdadd <HOSTl IP ADDRESS> <HOST2 IP ADDRESS> any -P out ipsec esp/transport//require; s pdadd <HOST2 IP ADDRESS> <HOSTl IP ADDRESS> any -P in ipsec esp/transport//require;","title":"Step 2:"},{"location":"capturetheflag/basic/prootect_defend/linux/#step-3","text":"Edit /etc/racoon/racoon.conf on <HOSTl IP ADDRESS> and <HOST2 IP ADDRESS>, log notify; path pre_shared_key \"/etc/racoon/psk.txt\"; path certificate \"/etc/racoon/certs\"; remote anonymous { exchange_mode main,aggressive; proposal { encryption_algorithm aes_256; hash_algorithm sha256; authentication_method pre_shared_key; dh_group modp1024; } generate_policy off; } sainfo anonymous{ }","title":"Step 3:"},{"location":"capturetheflag/basic/prootect_defend/linux/#step-4","text":"Add preshared key to both hosts.On HOSTl: echo <HOST2 IP ADDRESS> <PRESHARED PASSWORD> >>/etc/racoon/psk.txt On HOST2: echo <HOSTl IP ADDRESS> <PRESHARED PASSWORD> >>/etc/racoon/psk.txt","title":"Step 4:"},{"location":"capturetheflag/basic/prootect_defend/linux/#step-5","text":"Restart service on both systems. service setkey restart Check security associations, configuration and polices: setkey -D setkey -DP","title":"Step 5:"},{"location":"capturetheflag/basic/prootect_defend/windows/","text":"DISABLE/STOP SERVICES # Get a list of services and disable or stop: # C:\\> sc query C:\\> sc config \"<SERVICE NAME>\" start= disabled C:\\> sc stop \"<SERVICE NAME>\" C:\\> wmic service where name='<SERVICE NAME>' callChangeStartmode Disabled HOST SYSTEM FIREWALLS # Show all rules: # C:\\> netsh advfirewall firewall show rule name=all Set firewall on/off: # C:\\> netsh advfirewall set currentprofile state on C:\\> netsh advfirewall set currentprofilefirewallpolicy blockinboundalways,allowoutbound C:\\> netsh advfirewall set publicprofile state on C:\\> netsh advfirewall set privateprofile state on C:\\> netsh advfirewall set domainprofile state on C:\\> netsh advfirewall set allprofile state on C:\\> netsh advfirewall set allprof ile state offSet firewall rules examples: # C:\\> netsh advfirewall firewall add rule name=\"OpenPort 80\" dir=in action=allow protocol=TCPlocalport=80 C:\\> netsh advfirewall firewall add rule name=\"MyApplication\" dir=in action=al lowprogram=\"C:\\MyApp\\MyApp.exe\" enable=yes C:\\> netsh advfirewall firewall add rule name=\"MyApplication\" dir=in action=al lowprogram=\"C:\\MyApp\\MyApp.exe\" enable=yesremoteip=157.60.0.1,172.16.0.0/16,Local5ubnetprof i le=domain C:\\> netsh advfirewall firewall add rule name=\"MyApplication\" dir=in action=allowprogram=\"C:\\MyApp\\MyApp.exe\" enable=yesremoteip=157.60.0.1,172.16.0.0/16,LocalSubnetprofile=domain C:\\> netsh advfirewall firewall add rule name=\"MyApplication\" dir=in action=al lowprogram=\"C:\\MyApp\\MyApp.exe\" enable=yesremoteip=157.60.0.1,172.16.0.0/16,Local5ubnetprofile=private C:\\> netsh advfirewall firewall delete rulename=rule name program=\"C:\\MyApp\\MyApp.exe\" C:\\> netsh advfirewall firewall delete rulename=rule name protocol=udp localport=500 C:\\> netsh advfirewall firewall set rulegroup=\" remote desktop\" new enable=Yes prof ile=domain C:\\> netsh advfirewall firewall set rulegroup=\"remote desktop\" new enable=No profile=publicSetup togging location: # C:\\> netsh advfirewall set currentprofile logging C:\\<LOCATION>\\<FILE NAME>Windows firewall tog location and settings: C:\\> more %systemroot%\\system32\\LogFiles\\Firewall\\pfirewall.log C:\\> netsh advfirewall set allprofile loggingmaxfilesize 4096 C:\\> netsh advfirewall set allprofile loggingdroppedconnections enable C:\\> netsh advfirewall set allprofile loggingallowedconnections enable Display firewall logs: # PS C:\\> Get-Content$env:systemroot\\system32\\LogFiles\\Firewall\\pfirewall. log PASSWORDS # Change password: # C:\\> net user <USER NAME> * /domain C:\\> net user <USER NAME> <NEW PASSWORD> Change password remotely: # C:\\> pspasswd.exe \\\\<IP ADDRESS or NAME OF REMOTECOMPUTER> -u <REMOTE USER NAME> -p <NEW PASSWORD> Change password remotely: # PS C:\\> pspasswd.exe \\\\<IP ADDRESS or NAME OF REMOTECOMPUTER>HOST FILE Flush DNS of malicious domain/IP: # C:\\> ipconfig /flushdns Flush NetBios cache of host/IP: # C:\\> nbtstat -R Add new malicious domain to hosts file, and route tolocalhost: # C:\\> echo 127.0.0.1 <MALICIOUS DOMAIN> >> C:\\Windows\\System32\\drivers\\etc\\hosts Check if hosts file is working, by sending ping to 127.0.0.1: # C:\\> ping <MALICIOUS DOMAIN> -n 1 WHITELIST Use a Proxy Auto Config(PAC) file to create Bad URL or IP List (IE, Firefox, Chrome): # function FindProxyForURL(url, host) { // II Send bad DNS name to the proxy if (dnsDomainis(host, \".badsite.com\")) return \"PROXY http:11127.0.0.1:8080\"; // II Send bad IPs to the proxy if (isinNet(myipAddress(), \"222.222.222.222\",\"255.255.255.0\")) return \"PROXY http:11127.0.0.1:8080\"; //II All other traffic bypass proxy return \"DIRECT\"; } APPLICATION RESTRICTIONS # Applocker - Server 2008 R2 or Windows 7 or higher: # Using GUI Wizard configure: # Executable Rules (. exe, . com) DLL Rules ( .dll, .ocx) Script Rules (.psl, .bat, .cmd, .vbs, .js) Windows Install Rules ( .msi, .msp, .mst) Steps to employ Applocker (GUI is needed for digitalsigned app restrictions): # Step 1: # Create a new GPO. Step 2: # Right-click on it to edit, and then navigate through Computer Configuration, Policies, Windows Settings, Security Settings, Application Control Policies and Applocker. Click Configure Rule Enforcement. Step 3: # Under Executable Rules, check the Configured box and then make sure Enforce Rules is selected from the drop-down box. Click OK. Step 4: # In the left pane, click Executable Rules. Step 5: Right-click in the right pane and select Create New Rule. Step 6: # On the Before You Begin screen, click Next. Step 7: # On the Permissions screen, click Next. Step 8: # On the Conditions screen, select the Publisher condition and click Next. Step 9: # Click the Browse button and browse to any executable file on your system. It doesn't matter which. Step 10: # Drag the slider up to Any Publisher and then click Next. Step 11: # Click Next on the Exceptions screen. Step 12: # Name policy, Example uonly run executables that are signed\" and click Create. Step 13: # If this is your first time creating an Applocker policy, Windows will prompt you to create default rule, click Yes. Step 14: # Ensure Application Identity Service isRunning. C:\\> net start AppIDSvc C:\\> REG add\"HKLM\\SYSTEM\\CurrentControlSet\\services\\AppIDSvc\" /v Start /t REG_DWORD /d 2 /f Step 15: # Changes require reboot. C:\\ shutdown.exe /r C:\\ shutdown.exe /r /m \\\\<IP ADDRESS OR COMPUTERNAME> /f Add the Applocker cmdlets into PowerShell: # PS C:\\> import-module Applocker Gets the file information for all of the executable files and scripts in the directory # C:\\Windows\\System32: PS C:\\> Get-ApplockerFileinformation -Directory C:\\Windows\\System32\\ -Recurse -FileType Exe, Script Create a Applocker Policy that allow rules for all of the executable files in C:\\Windows\\System32: # PS C:\\> Get-Childitem C:\\Windows\\System32\\*,exe IGet-ApplockerFileinformation I New-ApplockerPolicy -RuleType Publisher, Hash -User Everyone -RuleNamePrefix System32 Sets the local Applocker policy to the policy specified in C:\\Policy.xml: # PS C:\\> Set-AppLockerPolicy -XMLPolicy C:\\Policy.xml Uses the Applocker policy in C:\\Policy.xml to test whether calc.exe and notepad.exe are allowed to run for users who are members of the Everyone group. If you do not specify a group, the Everyone group is used by default: # PS C:\\> Test-AppLockerPolicy -XMLPolicy C:\\Policy.xml -Path C:\\Windows\\System32\\calc.exe, C:\\Windows\\System32\\notepad.exe -User Everyone Review how many times a file would have been blocked from running if rules were enforced: # PS C:\\> Get-ApplockerFileinformation -Eventlog -Logname \"Microsoft-Windows-Applocker\\EXE and DLL\" -EventType Audited -Statistics Creates a new Applocker policy from the auditedevents in the local Microsoft-Windows-Applocker/EXE and DLL event log, applied to and current Applocker policy will be overwritten: # PS C:\\> Get-ApplockerFileinformation -Eventlog -LogPath \"Microsoft-Windows-AppLocker/EXE and DLL\" -EventType Audited I New-ApplockerPolicy -RuleType Publisher,Hash -User domain\\<GROUP> -IgnoreMissingFileinformation I Set-ApplockerPolicy -LDAP \"LDAP://<DC>,<DOMAIN>.com/CN={31B2F340-016D11D2-945F00C04FB984F9},CN=Policies,CN=System,DC=<DOMAIN>,DC=com\" Export the local Applocker policy, comparing User'sexplicitly denied access to run, and output textfile: # PS C:\\> Get-AppLockerPolicy -Local I TestAppLockerPolicy -Path C:\\Windows\\System32\\*,exe -User domain\\<USER NAME> -Filter Denied I Format-List -Property Path > C:\\DeniedFiles.txt Export the results of the test to a file foranalysis: # PS C:\\> Get-Childitem <DirectoryPathtoReview> -Filter <FileExtensionFilter> -Recurse I Convert-Path I Test-ApplockerPolicy -XMLPolicy <PathToExportedPolicyFile> -User <domain\\username> -Filter <TypeofRuletoFilterFor> I Export-CSV <PathToExportResultsTo.CSV> GridView list of any local rules applicable: # PS C:\\> Get-AppLockerPolicy -Local -Xml I OutGridView IPSEC # Create a IPSEC Local Security Policy, applied to any connection, any protocol, and using a preshared key: # C:\\> netsh ipsec static add filter filterlist=MyIPsecFilter srcaddr=Any dstaddr=Any protocol=ANY C:\\> netsh ipsec static add filteraction name=MyIPsecAction action=negotiate C:\\> netsh ipsec static add policy name=MyIPsecPolicy assign=yes C:\\> netsh ipsec static add rule name=MyIPsecRule policy=MyIPsecPolicy filterlist=MyIPsecFilter filteraction=MyIPsecAction conntype=all activate=yes psk=<PASSWORD> Add rule to allow web browsing port 80(HTTP) and 443(HTTPS) over IPSEC: # C:\\> netsh ipsec static add filteraction name=Allow action=permit C:\\> netsh ipsec static add filter filterlist=WebFilter srcaddr=Any dstaddr=Any protocol=TCP dstport=80 C:\\> netsh ipsec static add filter filterlist=WebFilter srcaddr=Any dstaddr=Any protocol=TCP dstport=443 C:\\> netsh ipsec static add rule name=WebAllow policy=MyIPsecPolicy filterlist=WebFilter filteraction=Allow conntype=all activate=yes psk=<PASSWORD> Shows the IPSEC Local Security Policy with name \"MyIPsecPolicy\": # C:\\> netsh ipsec static show policy name=MyIPsecPolicy Stop or Unassign a IPSEC Policy: # C:\\> netsh ipsec static set policy name=MyIPsecPolicy Create a IPSEC Advance Firewall Rule and Policy and preshared key from and to any connections: # C:\\> netsh advfirewall consec add rule name=\"IPSEC\" endpointl=any endpoint2=any action=requireinrequireout qmsecmethods=default Require IPSEC preshared key on all outgoing requests: # C:\\> netsh advfirewall firewall add rule name=uIPSEC_Out\" dir=out action=allow enable=yes profile=any localip=any remoteip=any protocol=any interfacetype=any security=authenticate Create a rule for web browsing: # C:\\> netsh advfirewall firewall add rule name=\"Allow Outbound Port 8011 dir=out localport=80 protocol=TCP action=allow Create a rule for DNS: # C:\\> netsh advfirewall firewall add rule name=\"Allow Outbound Port 5311 dir=out localport=53 protocol=UDP action=allow Delete ISPEC Rule: # C:\\> netsh advfirewall firewall delete rule name=\"IPSEC_RULE\" ACTIVE DIRECTORY (AD) - GROUP POLICY OBJECT (GPO) # Get and force new policies: # C:\\> gpupdate /force C:\\> gpupdate /sync Audit Success and Failure for user Bob: # C:\\> auditpol /set /user:bob /category:\"DetailedTracking\" /include /success:enable /failure:enable Create an Organization Unit to move suspected or infected users and machines: # C:\\> dsadd OU <QUARANTINE BAD OU> Move an active directory user object into NEW GROUP: # PS C:\\> Move-ADObject 'CN=<USER NAME>,CN=<OLD USERGROUP>,DC=<OLD DOMAIN>,DC=<OLD EXTENSION>' -TargetPath 'OU=<NEW USER GROUP>,DC=<OLDDOMAIN>,DC=<OLD EXTENSION>' Alt Option: # C:\\> dsmove \"CN=<USER NAME>,OU=<OLD USER OU>,DC=<OLDDOMAIN>,DC=<OLD EXTENSION>\" -newparent OU=<NEW USERGROUP>,DC=<OLD DOMAIN>,DC=<OLD EXTENSION> STAND ALONE SYSTEM - WITHOUT ACTIVE DIRECTORY (AD) # Disallow running a .exe file: # C:\\> reg add \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" /v DisallowRun /t REG_DWORD /d\"00000001\" /f C:\\> reg add \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\DisallowRun\" /v badfile.exe /t REG_SZ/d <BAD FILE NAME>.exe /f Disable Remote Desktop: # C:\\> reg add \"HKLM\\SYSTEM\\Cu rrentCont ro lSet\\Cont ro l \\ TerminalServer\" /f /v fDenyTSConnections /t REG_DWORD /d 1 Send NTLMv2 response only/refuse LM and NTLM:(Windows 7 default) # C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\ /vlmcompatibilitylevel /t REG_DWORD /d 5 /f Restrict Anonymous Access: # C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa /v restrictanonymous /t REG_DWORD /d 1 /f Do not allow anonymous enumeration of SAM accounts and shares: # C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa /v restrictanonymoussam /t REG_DWORD /d 1 /f Disable IPV6: # C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\services\\TCPIP6\\Parameters /v DisabledComponents /t REG_DWORD /d 255 /f Disable sticky keys: # C:\\> reg add \"HKCU\\ControlPanel\\Accessibility\\StickyKeys\" /v Flags /t REG_SZ/d 506 /f Disable Toggle Keys: # C:\\> reg add \"HKCU\\ControlPanel \\Accessibility\\ ToggleKeys\" /v Flags /t REG_SZId 58 /f Disable Filter Keys: # C:\\> reg add \"HKCU\\ControlPanel\\Accessibility\\Keyboard Response\" /v Flags /t REG_SZ /d 122 /f Disable On-screen Keyboard: # C:\\> reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Authentication\\LogonUI /f /v ShowTabletKeyboard /tREG_DWORD /d 0 Disable Administrative Shares - Workstations: # C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters /f /v AutoShareWks /t REG_DWORD /d 0 Disable Administrative Shares - Severs # C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\ Parameters /f /v AutoShareServer /t REG_DWORD /d 0 Remove Creation of Hashes Used to Pass the Hash Attack (Requires password reset and reboot to purgeold hashes): # C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa /f /v NoLMHash /t REG_DWORD /d 1 To Disable Registry Editor: (High Risk) # C:\\> reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v DisableRegistryTools /t REG_DWORD /d 1 /f Disable IE Password Cache: # C:\\> reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings /v DisablePasswordCaching /t REG_DWORD /d 1 /f Disable CMD prompt: # C:\\> reg add HKCU\\Software\\Policies\\Microsoft\\Windows\\System /v DisableCMD /t REG_DWORD /d 1 /f Disable Admin credentials cache on host when usingRDP: # C:\\> reg add HKLM\\System\\CurrentControlSet\\Control\\Lsa /v DisableRestrictedAdmin /t REG_DWORD /d 0 /f Do not process the run once list: # C:\\> reg add HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer /v DisableLocalMachineRunOnce /t REG_DWORD /d 1 C:\\> reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer /v DisableLocalMachineRunOnce /t REG_DWORD /d 1 Require User Access Control (UAC) Permission: # C:\\> reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v EnableLUA /t REG_DWORD /d 1 /f Change password at next logon: # PS C:\\> Set-ADAccountPassword <USER> -NewPassword $newpwd -Reset -PassThru I Set-ADuser -ChangePasswordAtLogon $True Change password at next logon for OU Group: # PS C:\\> Get-ADuser -filter \"department -eq '<OUGROUP>' -AND enabled -eq 'True 111 I Set-AD user -ChangePasswordAtLogon $True Enabled Firewall logging: # C:\\> netsh firewall set logging droppedpacketsconnections = enable","title":"windows"},{"location":"capturetheflag/basic/prootect_defend/windows/#disablestop-services","text":"","title":"DISABLE/STOP SERVICES"},{"location":"capturetheflag/basic/prootect_defend/windows/#get-a-list-of-services-and-disable-or-stop","text":"C:\\> sc query C:\\> sc config \"<SERVICE NAME>\" start= disabled C:\\> sc stop \"<SERVICE NAME>\" C:\\> wmic service where name='<SERVICE NAME>' callChangeStartmode Disabled","title":"Get a list of services and disable or stop:"},{"location":"capturetheflag/basic/prootect_defend/windows/#host-system-firewalls","text":"","title":"HOST SYSTEM FIREWALLS"},{"location":"capturetheflag/basic/prootect_defend/windows/#show-all-rules","text":"C:\\> netsh advfirewall firewall show rule name=all","title":"Show all rules:"},{"location":"capturetheflag/basic/prootect_defend/windows/#set-firewall-onoff","text":"C:\\> netsh advfirewall set currentprofile state on C:\\> netsh advfirewall set currentprofilefirewallpolicy blockinboundalways,allowoutbound C:\\> netsh advfirewall set publicprofile state on C:\\> netsh advfirewall set privateprofile state on C:\\> netsh advfirewall set domainprofile state on C:\\> netsh advfirewall set allprofile state on C:\\> netsh advfirewall set allprof ile state","title":"Set firewall on/off:"},{"location":"capturetheflag/basic/prootect_defend/windows/#offset-firewall-rules-examples","text":"C:\\> netsh advfirewall firewall add rule name=\"OpenPort 80\" dir=in action=allow protocol=TCPlocalport=80 C:\\> netsh advfirewall firewall add rule name=\"MyApplication\" dir=in action=al lowprogram=\"C:\\MyApp\\MyApp.exe\" enable=yes C:\\> netsh advfirewall firewall add rule name=\"MyApplication\" dir=in action=al lowprogram=\"C:\\MyApp\\MyApp.exe\" enable=yesremoteip=157.60.0.1,172.16.0.0/16,Local5ubnetprof i le=domain C:\\> netsh advfirewall firewall add rule name=\"MyApplication\" dir=in action=allowprogram=\"C:\\MyApp\\MyApp.exe\" enable=yesremoteip=157.60.0.1,172.16.0.0/16,LocalSubnetprofile=domain C:\\> netsh advfirewall firewall add rule name=\"MyApplication\" dir=in action=al lowprogram=\"C:\\MyApp\\MyApp.exe\" enable=yesremoteip=157.60.0.1,172.16.0.0/16,Local5ubnetprofile=private C:\\> netsh advfirewall firewall delete rulename=rule name program=\"C:\\MyApp\\MyApp.exe\" C:\\> netsh advfirewall firewall delete rulename=rule name protocol=udp localport=500 C:\\> netsh advfirewall firewall set rulegroup=\" remote desktop\" new enable=Yes prof ile=domain C:\\> netsh advfirewall firewall set rulegroup=\"remote desktop\" new enable=No profile=publicSetup","title":"offSet firewall rules examples:"},{"location":"capturetheflag/basic/prootect_defend/windows/#togging-location","text":"C:\\> netsh advfirewall set currentprofile logging C:\\<LOCATION>\\<FILE NAME>Windows firewall tog location and settings: C:\\> more %systemroot%\\system32\\LogFiles\\Firewall\\pfirewall.log C:\\> netsh advfirewall set allprofile loggingmaxfilesize 4096 C:\\> netsh advfirewall set allprofile loggingdroppedconnections enable C:\\> netsh advfirewall set allprofile loggingallowedconnections enable","title":"togging location:"},{"location":"capturetheflag/basic/prootect_defend/windows/#display-firewall-logs","text":"PS C:\\> Get-Content$env:systemroot\\system32\\LogFiles\\Firewall\\pfirewall. log","title":"Display firewall logs:"},{"location":"capturetheflag/basic/prootect_defend/windows/#passwords","text":"","title":"PASSWORDS"},{"location":"capturetheflag/basic/prootect_defend/windows/#change-password","text":"C:\\> net user <USER NAME> * /domain C:\\> net user <USER NAME> <NEW PASSWORD>","title":"Change password:"},{"location":"capturetheflag/basic/prootect_defend/windows/#change-password-remotely","text":"C:\\> pspasswd.exe \\\\<IP ADDRESS or NAME OF REMOTECOMPUTER> -u <REMOTE USER NAME> -p <NEW PASSWORD>","title":"Change password remotely:"},{"location":"capturetheflag/basic/prootect_defend/windows/#change-password-remotely_1","text":"PS C:\\> pspasswd.exe \\\\<IP ADDRESS or NAME OF REMOTECOMPUTER>HOST FILE","title":"Change password remotely:"},{"location":"capturetheflag/basic/prootect_defend/windows/#flush-dns-of-malicious-domainip","text":"C:\\> ipconfig /flushdns","title":"Flush DNS of malicious domain/IP:"},{"location":"capturetheflag/basic/prootect_defend/windows/#flush-netbios-cache-of-hostip","text":"C:\\> nbtstat -R","title":"Flush NetBios cache of host/IP:"},{"location":"capturetheflag/basic/prootect_defend/windows/#add-new-malicious-domain-to-hosts-file-and-route-tolocalhost","text":"C:\\> echo 127.0.0.1 <MALICIOUS DOMAIN> >> C:\\Windows\\System32\\drivers\\etc\\hosts","title":"Add new malicious domain to hosts file, and route tolocalhost:"},{"location":"capturetheflag/basic/prootect_defend/windows/#check-if-hosts-file-is-working-by-sending-ping-to-127001","text":"C:\\> ping <MALICIOUS DOMAIN> -n 1","title":"Check if hosts file is working, by sending ping to 127.0.0.1:"},{"location":"capturetheflag/basic/prootect_defend/windows/#whitelist-use-a-proxy-auto-configpac-file-to-create-bad-url-or-ip-list-ie-firefox-chrome","text":"function FindProxyForURL(url, host) { // II Send bad DNS name to the proxy if (dnsDomainis(host, \".badsite.com\")) return \"PROXY http:11127.0.0.1:8080\"; // II Send bad IPs to the proxy if (isinNet(myipAddress(), \"222.222.222.222\",\"255.255.255.0\")) return \"PROXY http:11127.0.0.1:8080\"; //II All other traffic bypass proxy return \"DIRECT\"; }","title":"WHITELIST Use a Proxy Auto Config(PAC) file to create Bad URL or IP List (IE, Firefox, Chrome):"},{"location":"capturetheflag/basic/prootect_defend/windows/#application-restrictions","text":"","title":"APPLICATION RESTRICTIONS"},{"location":"capturetheflag/basic/prootect_defend/windows/#applocker-server-2008-r2-or-windows-7-or-higher","text":"","title":"Applocker - Server 2008 R2 or Windows 7 or higher:"},{"location":"capturetheflag/basic/prootect_defend/windows/#using-gui-wizard-configure","text":"Executable Rules (. exe, . com) DLL Rules ( .dll, .ocx) Script Rules (.psl, .bat, .cmd, .vbs, .js) Windows Install Rules ( .msi, .msp, .mst)","title":"Using GUI Wizard configure:"},{"location":"capturetheflag/basic/prootect_defend/windows/#steps-to-employ-applocker-gui-is-needed-for-digitalsigned-app-restrictions","text":"","title":"Steps to employ Applocker (GUI is needed for digitalsigned app restrictions):"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-1","text":"Create a new GPO.","title":"Step 1:"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-2","text":"Right-click on it to edit, and then navigate through Computer Configuration, Policies, Windows Settings, Security Settings, Application Control Policies and Applocker. Click Configure Rule Enforcement.","title":"Step 2:"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-3","text":"Under Executable Rules, check the Configured box and then make sure Enforce Rules is selected from the drop-down box. Click OK.","title":"Step 3:"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-4","text":"In the left pane, click Executable Rules. Step 5: Right-click in the right pane and select Create New Rule.","title":"Step 4:"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-6","text":"On the Before You Begin screen, click Next.","title":"Step 6:"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-7","text":"On the Permissions screen, click Next.","title":"Step 7:"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-8","text":"On the Conditions screen, select the Publisher condition and click Next.","title":"Step 8:"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-9","text":"Click the Browse button and browse to any executable file on your system. It doesn't matter which.","title":"Step 9:"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-10","text":"Drag the slider up to Any Publisher and then click Next.","title":"Step 10:"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-11","text":"Click Next on the Exceptions screen.","title":"Step 11:"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-12","text":"Name policy, Example uonly run executables that are signed\" and click Create.","title":"Step 12:"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-13","text":"If this is your first time creating an Applocker policy, Windows will prompt you to create default rule, click Yes.","title":"Step 13:"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-14","text":"Ensure Application Identity Service isRunning. C:\\> net start AppIDSvc C:\\> REG add\"HKLM\\SYSTEM\\CurrentControlSet\\services\\AppIDSvc\" /v Start /t REG_DWORD /d 2 /f","title":"Step 14:"},{"location":"capturetheflag/basic/prootect_defend/windows/#step-15","text":"Changes require reboot. C:\\ shutdown.exe /r C:\\ shutdown.exe /r /m \\\\<IP ADDRESS OR COMPUTERNAME> /f","title":"Step 15:"},{"location":"capturetheflag/basic/prootect_defend/windows/#add-the-applocker-cmdlets-into-powershell","text":"PS C:\\> import-module Applocker","title":"Add the Applocker cmdlets into PowerShell:"},{"location":"capturetheflag/basic/prootect_defend/windows/#gets-the-file-information-for-all-of-the-executable-files-and-scripts-in-the-directory","text":"C:\\Windows\\System32: PS C:\\> Get-ApplockerFileinformation -Directory C:\\Windows\\System32\\ -Recurse -FileType Exe, Script","title":"Gets the file information for all of the executable files and scripts in the directory"},{"location":"capturetheflag/basic/prootect_defend/windows/#create-a-applocker-policy-that-allow-rules-for-all-of-the-executable-files-in-cwindowssystem32","text":"PS C:\\> Get-Childitem C:\\Windows\\System32\\*,exe IGet-ApplockerFileinformation I New-ApplockerPolicy -RuleType Publisher, Hash -User Everyone -RuleNamePrefix System32","title":"Create a Applocker Policy that allow rules for all of the executable files in C:\\Windows\\System32:"},{"location":"capturetheflag/basic/prootect_defend/windows/#sets-the-local-applocker-policy-to-the-policy-specified-in-cpolicyxml","text":"PS C:\\> Set-AppLockerPolicy -XMLPolicy C:\\Policy.xml","title":"Sets the local Applocker policy to the policy specified in C:\\Policy.xml:"},{"location":"capturetheflag/basic/prootect_defend/windows/#uses-the-applocker-policy-in-cpolicyxml-to-test-whether-calcexe-and-notepadexe-are-allowed-to-run-for-users-who-are-members-of-the-everyone-group-if-you-do-not-specify-a-group-the-everyone-group-is-used-by-default","text":"PS C:\\> Test-AppLockerPolicy -XMLPolicy C:\\Policy.xml -Path C:\\Windows\\System32\\calc.exe, C:\\Windows\\System32\\notepad.exe -User Everyone","title":"Uses the Applocker policy in C:\\Policy.xml to test whether calc.exe and notepad.exe are allowed to run for users who are members of the Everyone group. If you do not specify a group, the Everyone group is used by default:"},{"location":"capturetheflag/basic/prootect_defend/windows/#review-how-many-times-a-file-would-have-been-blocked-from-running-if-rules-were-enforced","text":"PS C:\\> Get-ApplockerFileinformation -Eventlog -Logname \"Microsoft-Windows-Applocker\\EXE and DLL\" -EventType Audited -Statistics","title":"Review how many times a file would have been blocked from running if rules were enforced:"},{"location":"capturetheflag/basic/prootect_defend/windows/#creates-a-new-applocker-policy-from-the-auditedevents-in-the-local-microsoft-windows-applockerexe-and-dll-event-log-applied-to-and-current-applocker-policy-will-be-overwritten","text":"PS C:\\> Get-ApplockerFileinformation -Eventlog -LogPath \"Microsoft-Windows-AppLocker/EXE and DLL\" -EventType Audited I New-ApplockerPolicy -RuleType Publisher,Hash -User domain\\<GROUP> -IgnoreMissingFileinformation I Set-ApplockerPolicy -LDAP \"LDAP://<DC>,<DOMAIN>.com/CN={31B2F340-016D11D2-945F00C04FB984F9},CN=Policies,CN=System,DC=<DOMAIN>,DC=com\"","title":"Creates a new Applocker policy from the auditedevents in the local Microsoft-Windows-Applocker/EXE and DLL event log, applied to  and current Applocker policy will be overwritten:"},{"location":"capturetheflag/basic/prootect_defend/windows/#export-the-local-applocker-policy-comparing-usersexplicitly-denied-access-to-run-and-output-textfile","text":"PS C:\\> Get-AppLockerPolicy -Local I TestAppLockerPolicy -Path C:\\Windows\\System32\\*,exe -User domain\\<USER NAME> -Filter Denied I Format-List -Property Path > C:\\DeniedFiles.txt","title":"Export the local Applocker policy, comparing User'sexplicitly denied access to run, and output textfile:"},{"location":"capturetheflag/basic/prootect_defend/windows/#export-the-results-of-the-test-to-a-file-foranalysis","text":"PS C:\\> Get-Childitem <DirectoryPathtoReview> -Filter <FileExtensionFilter> -Recurse I Convert-Path I Test-ApplockerPolicy -XMLPolicy <PathToExportedPolicyFile> -User <domain\\username> -Filter <TypeofRuletoFilterFor> I Export-CSV <PathToExportResultsTo.CSV>","title":"Export the results of the test to a file foranalysis:"},{"location":"capturetheflag/basic/prootect_defend/windows/#gridview-list-of-any-local-rules-applicable","text":"PS C:\\> Get-AppLockerPolicy -Local -Xml I OutGridView","title":"GridView list of any local rules applicable:"},{"location":"capturetheflag/basic/prootect_defend/windows/#ipsec","text":"","title":"IPSEC"},{"location":"capturetheflag/basic/prootect_defend/windows/#create-a-ipsec-local-security-policy-applied-to-any-connection-any-protocol-and-using-a-preshared-key","text":"C:\\> netsh ipsec static add filter filterlist=MyIPsecFilter srcaddr=Any dstaddr=Any protocol=ANY C:\\> netsh ipsec static add filteraction name=MyIPsecAction action=negotiate C:\\> netsh ipsec static add policy name=MyIPsecPolicy assign=yes C:\\> netsh ipsec static add rule name=MyIPsecRule policy=MyIPsecPolicy filterlist=MyIPsecFilter filteraction=MyIPsecAction conntype=all activate=yes psk=<PASSWORD>","title":"Create a IPSEC Local Security Policy, applied to any connection, any protocol, and using a preshared key:"},{"location":"capturetheflag/basic/prootect_defend/windows/#add-rule-to-allow-web-browsing-port-80http-and-443https-over-ipsec","text":"C:\\> netsh ipsec static add filteraction name=Allow action=permit C:\\> netsh ipsec static add filter filterlist=WebFilter srcaddr=Any dstaddr=Any protocol=TCP dstport=80 C:\\> netsh ipsec static add filter filterlist=WebFilter srcaddr=Any dstaddr=Any protocol=TCP dstport=443 C:\\> netsh ipsec static add rule name=WebAllow policy=MyIPsecPolicy filterlist=WebFilter filteraction=Allow conntype=all activate=yes psk=<PASSWORD>","title":"Add rule to allow web browsing port 80(HTTP) and 443(HTTPS) over IPSEC:"},{"location":"capturetheflag/basic/prootect_defend/windows/#shows-the-ipsec-local-security-policy-with-name-myipsecpolicy","text":"C:\\> netsh ipsec static show policy name=MyIPsecPolicy","title":"Shows the IPSEC Local Security Policy with name \"MyIPsecPolicy\":"},{"location":"capturetheflag/basic/prootect_defend/windows/#stop-or-unassign-a-ipsec-policy","text":"C:\\> netsh ipsec static set policy name=MyIPsecPolicy","title":"Stop or Unassign a IPSEC Policy:"},{"location":"capturetheflag/basic/prootect_defend/windows/#create-a-ipsec-advance-firewall-rule-and-policy-and-preshared-key-from-and-to-any-connections","text":"C:\\> netsh advfirewall consec add rule name=\"IPSEC\" endpointl=any endpoint2=any action=requireinrequireout qmsecmethods=default","title":"Create a IPSEC Advance Firewall Rule and Policy and preshared key from and to any connections:"},{"location":"capturetheflag/basic/prootect_defend/windows/#require-ipsec-preshared-key-on-all-outgoing-requests","text":"C:\\> netsh advfirewall firewall add rule name=uIPSEC_Out\" dir=out action=allow enable=yes profile=any localip=any remoteip=any protocol=any interfacetype=any security=authenticate","title":"Require IPSEC preshared key on all outgoing requests:"},{"location":"capturetheflag/basic/prootect_defend/windows/#create-a-rule-for-web-browsing","text":"C:\\> netsh advfirewall firewall add rule name=\"Allow Outbound Port 8011 dir=out localport=80 protocol=TCP action=allow","title":"Create a rule for web browsing:"},{"location":"capturetheflag/basic/prootect_defend/windows/#create-a-rule-for-dns","text":"C:\\> netsh advfirewall firewall add rule name=\"Allow Outbound Port 5311 dir=out localport=53 protocol=UDP action=allow","title":"Create a rule for DNS:"},{"location":"capturetheflag/basic/prootect_defend/windows/#delete-ispec-rule","text":"C:\\> netsh advfirewall firewall delete rule name=\"IPSEC_RULE\"","title":"Delete ISPEC Rule:"},{"location":"capturetheflag/basic/prootect_defend/windows/#active-directory-ad-group-policy-object-gpo","text":"","title":"ACTIVE DIRECTORY (AD) - GROUP POLICY OBJECT (GPO)"},{"location":"capturetheflag/basic/prootect_defend/windows/#get-and-force-new-policies","text":"C:\\> gpupdate /force C:\\> gpupdate /sync","title":"Get and force new policies:"},{"location":"capturetheflag/basic/prootect_defend/windows/#audit-success-and-failure-for-user-bob","text":"C:\\> auditpol /set /user:bob /category:\"DetailedTracking\" /include /success:enable /failure:enable","title":"Audit Success and Failure for user Bob:"},{"location":"capturetheflag/basic/prootect_defend/windows/#create-an-organization-unit-to-move-suspected-or-infected-users-and-machines","text":"C:\\> dsadd OU <QUARANTINE BAD OU>","title":"Create an Organization Unit to move suspected or infected users and machines:"},{"location":"capturetheflag/basic/prootect_defend/windows/#move-an-active-directory-user-object-into-new-group","text":"PS C:\\> Move-ADObject 'CN=<USER NAME>,CN=<OLD USERGROUP>,DC=<OLD DOMAIN>,DC=<OLD EXTENSION>' -TargetPath 'OU=<NEW USER GROUP>,DC=<OLDDOMAIN>,DC=<OLD EXTENSION>'","title":"Move an active directory user object into NEW GROUP:"},{"location":"capturetheflag/basic/prootect_defend/windows/#alt-option","text":"C:\\> dsmove \"CN=<USER NAME>,OU=<OLD USER OU>,DC=<OLDDOMAIN>,DC=<OLD EXTENSION>\" -newparent OU=<NEW USERGROUP>,DC=<OLD DOMAIN>,DC=<OLD EXTENSION>","title":"Alt Option:"},{"location":"capturetheflag/basic/prootect_defend/windows/#stand-alone-system-without-active-directory-ad","text":"","title":"STAND ALONE SYSTEM - WITHOUT ACTIVE DIRECTORY (AD)"},{"location":"capturetheflag/basic/prootect_defend/windows/#disallow-running-a-exe-file","text":"C:\\> reg add \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" /v DisallowRun /t REG_DWORD /d\"00000001\" /f C:\\> reg add \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\DisallowRun\" /v badfile.exe /t REG_SZ/d <BAD FILE NAME>.exe /f","title":"Disallow running a .exe file:"},{"location":"capturetheflag/basic/prootect_defend/windows/#disable-remote-desktop","text":"C:\\> reg add \"HKLM\\SYSTEM\\Cu rrentCont ro lSet\\Cont ro l \\ TerminalServer\" /f /v fDenyTSConnections /t REG_DWORD /d 1","title":"Disable Remote Desktop:"},{"location":"capturetheflag/basic/prootect_defend/windows/#send-ntlmv2-response-onlyrefuse-lm-and-ntlmwindows-7-default","text":"C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\ /vlmcompatibilitylevel /t REG_DWORD /d 5 /f","title":"Send NTLMv2 response only/refuse LM and NTLM:(Windows 7 default)"},{"location":"capturetheflag/basic/prootect_defend/windows/#restrict-anonymous-access","text":"C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa /v restrictanonymous /t REG_DWORD /d 1 /f","title":"Restrict Anonymous Access:"},{"location":"capturetheflag/basic/prootect_defend/windows/#do-not-allow-anonymous-enumeration-of-sam-accounts-and-shares","text":"C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa /v restrictanonymoussam /t REG_DWORD /d 1 /f","title":"Do not allow anonymous enumeration of SAM accounts and shares:"},{"location":"capturetheflag/basic/prootect_defend/windows/#disable-ipv6","text":"C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\services\\TCPIP6\\Parameters /v DisabledComponents /t REG_DWORD /d 255 /f","title":"Disable IPV6:"},{"location":"capturetheflag/basic/prootect_defend/windows/#disable-sticky-keys","text":"C:\\> reg add \"HKCU\\ControlPanel\\Accessibility\\StickyKeys\" /v Flags /t REG_SZ/d 506 /f","title":"Disable sticky keys:"},{"location":"capturetheflag/basic/prootect_defend/windows/#disable-toggle-keys","text":"C:\\> reg add \"HKCU\\ControlPanel \\Accessibility\\ ToggleKeys\" /v Flags /t REG_SZId 58 /f","title":"Disable Toggle Keys:"},{"location":"capturetheflag/basic/prootect_defend/windows/#disable-filter-keys","text":"C:\\> reg add \"HKCU\\ControlPanel\\Accessibility\\Keyboard Response\" /v Flags /t REG_SZ /d 122 /f","title":"Disable Filter Keys:"},{"location":"capturetheflag/basic/prootect_defend/windows/#disable-on-screen-keyboard","text":"C:\\> reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Authentication\\LogonUI /f /v ShowTabletKeyboard /tREG_DWORD /d 0","title":"Disable On-screen Keyboard:"},{"location":"capturetheflag/basic/prootect_defend/windows/#disable-administrative-shares-workstations","text":"C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters /f /v AutoShareWks /t REG_DWORD /d 0","title":"Disable Administrative Shares - Workstations:"},{"location":"capturetheflag/basic/prootect_defend/windows/#disable-administrative-shares-severs","text":"C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\ Parameters /f /v AutoShareServer /t REG_DWORD /d 0","title":"Disable Administrative Shares - Severs"},{"location":"capturetheflag/basic/prootect_defend/windows/#remove-creation-of-hashes-used-to-pass-the-hash-attack-requires-password-reset-and-reboot-to-purgeold-hashes","text":"C:\\> reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa /f /v NoLMHash /t REG_DWORD /d 1","title":"Remove Creation of Hashes Used to Pass the Hash Attack (Requires password reset and reboot to purgeold hashes):"},{"location":"capturetheflag/basic/prootect_defend/windows/#to-disable-registry-editor-high-risk","text":"C:\\> reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v DisableRegistryTools /t REG_DWORD /d 1 /f","title":"To Disable Registry Editor: (High Risk)"},{"location":"capturetheflag/basic/prootect_defend/windows/#disable-ie-password-cache","text":"C:\\> reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings /v DisablePasswordCaching /t REG_DWORD /d 1 /f","title":"Disable IE Password Cache:"},{"location":"capturetheflag/basic/prootect_defend/windows/#disable-cmd-prompt","text":"C:\\> reg add HKCU\\Software\\Policies\\Microsoft\\Windows\\System /v DisableCMD /t REG_DWORD /d 1 /f","title":"Disable CMD prompt:"},{"location":"capturetheflag/basic/prootect_defend/windows/#disable-admin-credentials-cache-on-host-when-usingrdp","text":"C:\\> reg add HKLM\\System\\CurrentControlSet\\Control\\Lsa /v DisableRestrictedAdmin /t REG_DWORD /d 0 /f","title":"Disable Admin credentials cache on host when usingRDP:"},{"location":"capturetheflag/basic/prootect_defend/windows/#do-not-process-the-run-once-list","text":"C:\\> reg add HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer /v DisableLocalMachineRunOnce /t REG_DWORD /d 1 C:\\> reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer /v DisableLocalMachineRunOnce /t REG_DWORD /d 1","title":"Do not process the run once list:"},{"location":"capturetheflag/basic/prootect_defend/windows/#require-user-access-control-uac-permission","text":"C:\\> reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v EnableLUA /t REG_DWORD /d 1 /f","title":"Require User Access Control (UAC) Permission:"},{"location":"capturetheflag/basic/prootect_defend/windows/#change-password-at-next-logon","text":"PS C:\\> Set-ADAccountPassword <USER> -NewPassword $newpwd -Reset -PassThru I Set-ADuser -ChangePasswordAtLogon $True","title":"Change password at next logon:"},{"location":"capturetheflag/basic/prootect_defend/windows/#change-password-at-next-logon-for-ou-group","text":"PS C:\\> Get-ADuser -filter \"department -eq '<OUGROUP>' -AND enabled -eq 'True 111 I Set-AD user -ChangePasswordAtLogon $True","title":"Change password at next logon for OU Group:"},{"location":"capturetheflag/basic/prootect_defend/windows/#enabled-firewall-logging","text":"C:\\> netsh firewall set logging droppedpacketsconnections = enable","title":"Enabled Firewall logging:"},{"location":"capturetheflag/basic/recover/backuo/","text":"WINDOWS # Backup GPO Audit Policy to backup file: # C:\\> auditpol /backup /file:C\\auditpolicy.csv Restore GPO Audit Policy from backup file: # C:\\> auditpol /restore /file:C:\\auditpolicy.csv Backup All GPOs in domain and save to Path: # PS C:\\> Backup-Gpo -All -Path \\\\<SERVER>\\<PATH TOBACKUPS> Restore All GPOs in domain and save to Path: # PS C:\\> Restore-GPO -All -Domain <INSERT DOMAINNAME> -Path \\\\Serverl\\GpoBackups Start Volume Shadow Service: # C:\\> net start VSS List all shadow files and storage: # C:\\> vssadmin List ShadowStorage List all shadow files: # C:\\> vssadmin List Shadows Browse Shadow Copy for files/folders: # C:\\> mklink /d c:\\<CREATE FOLDER>\\<PROVIDE FOLDERNAME BUT DO NOT CREATE>\\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopyl\\ Revert back to a selected shadow file on Windows Server and Windows 8: # C:\\> vssadmin revert shadow /shadow={<SHADOW COPYID>} /ForceDismount List a files previous versions history using volrest.exe: # Ref. https://www.microsoft.com/enus/download/details.aspx?id=17657 C:\\> \"\\Program Files (x86)\\Windows ResourceKits\\Tools\\volrest.exe\" \"\\\\localhost\\c$\\<PATH TOFILE>\\<FILE NAME>\" Revert back to a selected previous file version or @GMT file name for specific previous version using volrest.exe: # C:\\> subst Z: \\\\localhost\\c$\\$\\<PATH TO FILE> C:\\> \"\\Program Files (x86)\\Windows ResourceKits\\Tools\\volrest.exe\" \"\\\\localhost\\c$\\<PATH TOFILE>\\<CURRENT FILE NAME OR @GMT FILE NAME FROM LISTCOMMAND ABOVE>\" /R:Z:\\ C:\\> subst Z: /0 Revert back a directory and subdirectory filesprevious version using volrest.exe: # C: \\> \"\\Program Files (x86) \\Windows ResourceKits\\Tools\\volrest.exe\" \\\\localhost\\c$\\<PATH TOFOLDER\\*\u00b7* /5 /r:\\\\localhost\\c$\\<PATH TO FOLDER>\\ Revert back to a selected shadow file on Windows Server and Windows 7 and 10 using wmic: # C:\\> wmic shadowcopy call create Volume='C:\\' Create a shadow copy of volume C on Windows 7 and 10 using PowerShell: # PS C:\\> (gwmi -listwin32_shadowcopy).Create('C:\\', 'ClientAccessible') Create a shadow copy of volume C on Windows Server 2003 and 2008: # C:\\> vssadmin create shadow /for=c: Create restore point on Windows: # C:\\> wmic.exe /Namespace:\\\\root\\default Path SystemRestore Call CreateRestorePoint \"%DATE%\", 100, Start system restore points on Windows XP: # C:\\> sc config srservice start= disabled C:\\> reg add \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\SystemRestore\" /v DisableSR /t REG_DWORD /d 1 /f C:\\> net stop srservice Stop system restore points on Windows XP: # C:\\> sc config srservice start= Auto C:\\> net start srservice C:\\> reg add \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\SystemRestore\" /v DisableSR /t REG_DWORD /d 0 /f List of restore points: # PS C:\\> Get-ComputerRestorePoint Restore from a specific restore point: # PS C:\\> Restore-Computer -RestorePoint <RESTOREPOINT#> -Confirm LINUX # Reset root password in single user mode: # Step 1: Reboot system. # reboot -f Step 2: Press ESC at GRUB screen. # Step 3: Select default entry and then 'e' for edit. # Step 4: Scroll down until, you see a line that starts with linux, linux16 or linuxefi. # Step 5: At end of that line leave a space and add without quote 'rw init=/bin/bash' # Step 6: Press Ctrl-X to reboot. # Step 7: After reboot, should be in single user modeand root, change password. # passwd Step 8: Reboot system. # # reboot -f Reinstall a package: # # apt-get install --reinstall <COMPROMISED PACKAGENAME> Reinstall all packages: # # apt-get install --reinstall $(dpkg --getselections lgrep -v deinstall) KILL MALWARE PROCESS # WINDOWS # Malware Removal: # Ref. http://www.gmer.net/ C:\\> gmer.exe (GUI) Kill running malicious file: # C:\\> gmer.exe -killfile C:\\WINDOWS\\system32\\drivers\\<MALICIOUS FILENAME>.exe Kill running malicious file in PowerShell: # PS C:\\> Stop-Process -Name <PROCESS NAME> PS C:\\> Stop-Process -ID <PID> LINUX # Stop a malware process: # kill <MALICIOUS PID> Change the malware process from execution and move: # chmod -x /usr/sbin/<SUSPICIOUS FILE NAME> mkdir /home/quarantine/ mv /usr/sbin/<SUSPICIOUS FILE NAME>/home/quarantine/","title":"backup"},{"location":"capturetheflag/basic/recover/backuo/#windows","text":"","title":"WINDOWS"},{"location":"capturetheflag/basic/recover/backuo/#backup-gpo-audit-policy-to-backup-file","text":"C:\\> auditpol /backup /file:C\\auditpolicy.csv","title":"Backup GPO Audit Policy to backup file:"},{"location":"capturetheflag/basic/recover/backuo/#restore-gpo-audit-policy-from-backup-file","text":"C:\\> auditpol /restore /file:C:\\auditpolicy.csv","title":"Restore GPO Audit Policy from backup file:"},{"location":"capturetheflag/basic/recover/backuo/#backup-all-gpos-in-domain-and-save-to-path","text":"PS C:\\> Backup-Gpo -All -Path \\\\<SERVER>\\<PATH TOBACKUPS>","title":"Backup All GPOs in domain and save to Path:"},{"location":"capturetheflag/basic/recover/backuo/#restore-all-gpos-in-domain-and-save-to-path","text":"PS C:\\> Restore-GPO -All -Domain <INSERT DOMAINNAME> -Path \\\\Serverl\\GpoBackups","title":"Restore All GPOs in domain and save to Path:"},{"location":"capturetheflag/basic/recover/backuo/#start-volume-shadow-service","text":"C:\\> net start VSS","title":"Start Volume Shadow Service:"},{"location":"capturetheflag/basic/recover/backuo/#list-all-shadow-files-and-storage","text":"C:\\> vssadmin List ShadowStorage","title":"List all shadow files and storage:"},{"location":"capturetheflag/basic/recover/backuo/#list-all-shadow-files","text":"C:\\> vssadmin List Shadows","title":"List all shadow files:"},{"location":"capturetheflag/basic/recover/backuo/#browse-shadow-copy-for-filesfolders","text":"C:\\> mklink /d c:\\<CREATE FOLDER>\\<PROVIDE FOLDERNAME BUT DO NOT CREATE>\\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopyl\\","title":"Browse Shadow Copy for files/folders:"},{"location":"capturetheflag/basic/recover/backuo/#revert-back-to-a-selected-shadow-file-on-windows-server-and-windows-8","text":"C:\\> vssadmin revert shadow /shadow={<SHADOW COPYID>} /ForceDismount","title":"Revert back to a selected shadow file on Windows Server and Windows 8:"},{"location":"capturetheflag/basic/recover/backuo/#list-a-files-previous-versions-history-using-volrestexe","text":"Ref. https://www.microsoft.com/enus/download/details.aspx?id=17657 C:\\> \"\\Program Files (x86)\\Windows ResourceKits\\Tools\\volrest.exe\" \"\\\\localhost\\c$\\<PATH TOFILE>\\<FILE NAME>\"","title":"List a files previous versions history using volrest.exe:"},{"location":"capturetheflag/basic/recover/backuo/#revert-back-to-a-selected-previous-file-version-or-gmt-file-name-for-specific-previous-version-using-volrestexe","text":"C:\\> subst Z: \\\\localhost\\c$\\$\\<PATH TO FILE> C:\\> \"\\Program Files (x86)\\Windows ResourceKits\\Tools\\volrest.exe\" \"\\\\localhost\\c$\\<PATH TOFILE>\\<CURRENT FILE NAME OR @GMT FILE NAME FROM LISTCOMMAND ABOVE>\" /R:Z:\\ C:\\> subst Z: /0","title":"Revert back to a selected previous file version or @GMT file name for specific previous version using volrest.exe:"},{"location":"capturetheflag/basic/recover/backuo/#revert-back-a-directory-and-subdirectory-filesprevious-version-using-volrestexe","text":"C: \\> \"\\Program Files (x86) \\Windows ResourceKits\\Tools\\volrest.exe\" \\\\localhost\\c$\\<PATH TOFOLDER\\*\u00b7* /5 /r:\\\\localhost\\c$\\<PATH TO FOLDER>\\","title":"Revert back a directory and subdirectory filesprevious version using volrest.exe:"},{"location":"capturetheflag/basic/recover/backuo/#revert-back-to-a-selected-shadow-file-on-windows-server-and-windows-7-and-10-using-wmic","text":"C:\\> wmic shadowcopy call create Volume='C:\\'","title":"Revert back to a selected shadow file on Windows Server and Windows 7 and 10 using wmic:"},{"location":"capturetheflag/basic/recover/backuo/#create-a-shadow-copy-of-volume-c-on-windows-7-and-10-using-powershell","text":"PS C:\\> (gwmi -listwin32_shadowcopy).Create('C:\\', 'ClientAccessible')","title":"Create a shadow copy of volume C on Windows 7 and 10 using PowerShell:"},{"location":"capturetheflag/basic/recover/backuo/#create-a-shadow-copy-of-volume-c-on-windows-server-2003-and-2008","text":"C:\\> vssadmin create shadow /for=c:","title":"Create a shadow copy of volume C on Windows Server 2003 and 2008:"},{"location":"capturetheflag/basic/recover/backuo/#create-restore-point-on-windows","text":"C:\\> wmic.exe /Namespace:\\\\root\\default Path","title":"Create restore point on Windows:"},{"location":"capturetheflag/basic/recover/backuo/#systemrestore-call-createrestorepoint-date-100-start-system-restore-points-on-windows-xp","text":"C:\\> sc config srservice start= disabled C:\\> reg add \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\SystemRestore\" /v DisableSR /t REG_DWORD /d 1 /f C:\\> net stop srservice","title":"SystemRestore Call CreateRestorePoint \"%DATE%\", 100, Start system restore points on Windows XP:"},{"location":"capturetheflag/basic/recover/backuo/#stop-system-restore-points-on-windows-xp","text":"C:\\> sc config srservice start= Auto C:\\> net start srservice C:\\> reg add \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\SystemRestore\" /v DisableSR /t REG_DWORD /d 0 /f","title":"Stop system restore points on Windows XP:"},{"location":"capturetheflag/basic/recover/backuo/#list-of-restore-points","text":"PS C:\\> Get-ComputerRestorePoint","title":"List of restore points:"},{"location":"capturetheflag/basic/recover/backuo/#restore-from-a-specific-restore-point","text":"PS C:\\> Restore-Computer -RestorePoint <RESTOREPOINT#> -Confirm","title":"Restore from a specific restore point:"},{"location":"capturetheflag/basic/recover/backuo/#linux","text":"","title":"LINUX"},{"location":"capturetheflag/basic/recover/backuo/#reset-root-password-in-single-user-mode","text":"","title":"Reset root password in single user mode:"},{"location":"capturetheflag/basic/recover/backuo/#step-1-reboot-system","text":"reboot -f","title":"Step 1: Reboot system."},{"location":"capturetheflag/basic/recover/backuo/#step-2-press-esc-at-grub-screen","text":"","title":"Step 2: Press ESC at GRUB screen."},{"location":"capturetheflag/basic/recover/backuo/#step-3-select-default-entry-and-then-e-for-edit","text":"","title":"Step 3: Select default entry and then 'e' for edit."},{"location":"capturetheflag/basic/recover/backuo/#step-4-scroll-down-until-you-see-a-line-that-starts-with-linux-linux16-or-linuxefi","text":"","title":"Step 4: Scroll down until, you see a line that starts with linux, linux16 or linuxefi."},{"location":"capturetheflag/basic/recover/backuo/#step-5-at-end-of-that-line-leave-a-space-and-add-without-quote-rw-initbinbash","text":"","title":"Step 5: At end of that line leave a space and add without quote 'rw init=/bin/bash'"},{"location":"capturetheflag/basic/recover/backuo/#step-6-press-ctrl-x-to-reboot","text":"","title":"Step 6: Press Ctrl-X to reboot."},{"location":"capturetheflag/basic/recover/backuo/#step-7-after-reboot-should-be-in-single-user-modeand-root-change-password","text":"passwd","title":"Step 7: After reboot, should be in single user modeand root, change password."},{"location":"capturetheflag/basic/recover/backuo/#step-8-reboot-system","text":"# reboot -f","title":"Step 8: Reboot system."},{"location":"capturetheflag/basic/recover/backuo/#reinstall-a-package","text":"# apt-get install --reinstall <COMPROMISED PACKAGENAME>","title":"Reinstall a package:"},{"location":"capturetheflag/basic/recover/backuo/#reinstall-all-packages","text":"# apt-get install --reinstall $(dpkg --getselections lgrep -v deinstall)","title":"Reinstall all packages:"},{"location":"capturetheflag/basic/recover/backuo/#kill-malware-process","text":"","title":"KILL MALWARE PROCESS"},{"location":"capturetheflag/basic/recover/backuo/#windows_1","text":"","title":"WINDOWS"},{"location":"capturetheflag/basic/recover/backuo/#malware-removal","text":"Ref. http://www.gmer.net/ C:\\> gmer.exe (GUI)","title":"Malware Removal:"},{"location":"capturetheflag/basic/recover/backuo/#kill-running-malicious-file","text":"C:\\> gmer.exe -killfile C:\\WINDOWS\\system32\\drivers\\<MALICIOUS FILENAME>.exe","title":"Kill running malicious file:"},{"location":"capturetheflag/basic/recover/backuo/#kill-running-malicious-file-in-powershell","text":"PS C:\\> Stop-Process -Name <PROCESS NAME> PS C:\\> Stop-Process -ID <PID>","title":"Kill running malicious file in PowerShell:"},{"location":"capturetheflag/basic/recover/backuo/#linux_1","text":"","title":"LINUX"},{"location":"capturetheflag/basic/recover/backuo/#stop-a-malware-process","text":"kill <MALICIOUS PID>","title":"Stop a malware process:"},{"location":"capturetheflag/basic/recover/backuo/#change-the-malware-process-from-execution-and-move","text":"chmod -x /usr/sbin/<SUSPICIOUS FILE NAME> mkdir /home/quarantine/ mv /usr/sbin/<SUSPICIOUS FILE NAME>/home/quarantine/","title":"Change the malware process from execution and move:"},{"location":"capturetheflag/basic/recover/patching/","text":"WINDOWS # Single Hotfix update for Windows 7 or higher: # C:\\> wusa.exe C:\\<PATH TO HOTFIX>\\Windows6.0-KB934307-x86.msu Set of single hotfix updates for pre Windows 7 by running a batch script: # @echo off setlocal set PATHTOFIXES=E:\\hotfix %PATHTOFIXES%\\Q123456_w2k_sp4_x86.exe /2 /M %PATHTOFIXES%\\Ql23321_w2k_sp4_x86.exe /2 /M %PATHTOFIXES%\\Q123789_w2k_sp4_x86.exe /2 /M To check and update Windows 7 or higher: # C:\\> wuauclt.exe /detectnow /updatenow LINUX # Ubuntu: Fetch list of available updates: # apt-get update Strictly upgrade the current packages: # apt-get upgrade Install updates (new ones): # apt-get dist-upgrade Red Hat Enterprise Linux 2.1,3,4: # up2date To update non-interactively: # up2date-nox --update To install a specific package: # up2date <PACKAGE NAME> To update a specific package: # up2date -u <PACKAGE NAME> Red Hat Enterprise Linux 5: # pup Red Hat Enterprise Linux 6: # yum update To list a specific installed package: # yum list installed <PACKAGE NAME> To install a specific package: # yum install <PACKAGE NAME> To update a specific package: # yum update <PACKAGE NAME> Kali: # apt-get update && apt-get upgrade","title":"patching"},{"location":"capturetheflag/basic/recover/patching/#windows","text":"","title":"WINDOWS"},{"location":"capturetheflag/basic/recover/patching/#single-hotfix-update-for-windows-7-or-higher","text":"C:\\> wusa.exe C:\\<PATH TO HOTFIX>\\Windows6.0-KB934307-x86.msu","title":"Single Hotfix update for Windows 7 or higher:"},{"location":"capturetheflag/basic/recover/patching/#set-of-single-hotfix-updates-for-pre-windows-7-by-running-a-batch-script","text":"@echo off setlocal set PATHTOFIXES=E:\\hotfix %PATHTOFIXES%\\Q123456_w2k_sp4_x86.exe /2 /M %PATHTOFIXES%\\Ql23321_w2k_sp4_x86.exe /2 /M %PATHTOFIXES%\\Q123789_w2k_sp4_x86.exe /2 /M","title":"Set of single hotfix updates for pre Windows 7 by running a batch script:"},{"location":"capturetheflag/basic/recover/patching/#to-check-and-update-windows-7-or-higher","text":"C:\\> wuauclt.exe /detectnow /updatenow","title":"To check and update Windows 7 or higher:"},{"location":"capturetheflag/basic/recover/patching/#linux","text":"","title":"LINUX"},{"location":"capturetheflag/basic/recover/patching/#ubuntu-fetch-list-of-available-updates","text":"apt-get update","title":"Ubuntu: Fetch list of available updates:"},{"location":"capturetheflag/basic/recover/patching/#strictly-upgrade-the-current-packages","text":"apt-get upgrade","title":"Strictly upgrade the current packages:"},{"location":"capturetheflag/basic/recover/patching/#install-updates-new-ones","text":"apt-get dist-upgrade","title":"Install updates (new ones):"},{"location":"capturetheflag/basic/recover/patching/#red-hat-enterprise-linux-2134","text":"up2date","title":"Red Hat Enterprise Linux 2.1,3,4:"},{"location":"capturetheflag/basic/recover/patching/#to-update-non-interactively","text":"up2date-nox --update","title":"To update non-interactively:"},{"location":"capturetheflag/basic/recover/patching/#to-install-a-specific-package","text":"up2date <PACKAGE NAME>","title":"To install a specific package:"},{"location":"capturetheflag/basic/recover/patching/#to-update-a-specific-package","text":"up2date -u <PACKAGE NAME>","title":"To update a specific package:"},{"location":"capturetheflag/basic/recover/patching/#red-hat-enterprise-linux-5","text":"pup","title":"Red Hat Enterprise Linux 5:"},{"location":"capturetheflag/basic/recover/patching/#red-hat-enterprise-linux-6","text":"yum update","title":"Red Hat Enterprise Linux 6:"},{"location":"capturetheflag/basic/recover/patching/#to-list-a-specific-installed-package","text":"yum list installed <PACKAGE NAME>","title":"To list a specific installed package:"},{"location":"capturetheflag/basic/recover/patching/#to-install-a-specific-package_1","text":"yum install <PACKAGE NAME>","title":"To install a specific package:"},{"location":"capturetheflag/basic/recover/patching/#to-update-a-specific-package_1","text":"yum update <PACKAGE NAME>","title":"To update a specific package:"},{"location":"capturetheflag/basic/recover/patching/#kali","text":"apt-get update && apt-get upgrade","title":"Kali:"},{"location":"capturetheflag/basic/tips_end_tricks/decoding/","text":"HEX CONVERSION # Convert from hex to decimal in Windows: # C:> set /a 0xff PS C:> 0xff Other Basic Math in Windows: # C:> set /a 1+2 C:> set /a 3 (9/4) C:> set /a (2 5)/2 C:> set /a \"32>>3\" Decode Base64 text in a file: # C:> certutil -decode ENCODED # Decode XOR and search for http: # Ref,https://blog.didierstevens.com/programs/xorsearch/ C:\\> xorsearch,exe -i -s <INPUT FILE NAME> http Convert from hex to decimal in Linux: # echo u0xff\"lwcalc -d = 255 Convert from decimal to hex in Linux: # $ echo u25s\"1wcalc -h = 0xff Decode HTML Strings: # PS C:\\> Add-Type -AssemblyName System.Web PS C:\\>[System.Uri] ::UnescapeDataString(\"HTTP%3a%2f%2fHello%20World.com\") HTTP://Hello World.com","title":"decoding"},{"location":"capturetheflag/basic/tips_end_tricks/decoding/#hex-conversion","text":"","title":"HEX CONVERSION"},{"location":"capturetheflag/basic/tips_end_tricks/decoding/#convert-from-hex-to-decimal-in-windows","text":"C:> set /a 0xff PS C:> 0xff","title":"Convert from hex to decimal in Windows:"},{"location":"capturetheflag/basic/tips_end_tricks/decoding/#other-basic-math-in-windows","text":"C:> set /a 1+2 C:> set /a 3 (9/4) C:> set /a (2 5)/2 C:> set /a \"32>>3\"","title":"Other Basic Math in Windows:"},{"location":"capturetheflag/basic/tips_end_tricks/decoding/#decode-base64-text-in-a-file","text":"C:> certutil -decode","title":"Decode Base64 text in a file:"},{"location":"capturetheflag/basic/tips_end_tricks/decoding/#encoded","text":"","title":"ENCODED"},{"location":"capturetheflag/basic/tips_end_tricks/decoding/#decode-xor-and-search-for-http","text":"Ref,https://blog.didierstevens.com/programs/xorsearch/ C:\\> xorsearch,exe -i -s <INPUT FILE NAME> http","title":"Decode XOR and search for http:"},{"location":"capturetheflag/basic/tips_end_tricks/decoding/#convert-from-hex-to-decimal-in-linux","text":"echo u0xff\"lwcalc -d = 255","title":"Convert from hex to decimal in Linux:"},{"location":"capturetheflag/basic/tips_end_tricks/decoding/#convert-from-decimal-to-hex-in-linux","text":"$ echo u25s\"1wcalc -h = 0xff","title":"Convert from decimal to hex in Linux:"},{"location":"capturetheflag/basic/tips_end_tricks/decoding/#decode-html-strings","text":"PS C:\\> Add-Type -AssemblyName System.Web PS C:\\>[System.Uri] ::UnescapeDataString(\"HTTP%3a%2f%2fHello%20World.com\") HTTP://Hello World.com","title":"Decode HTML Strings:"},{"location":"capturetheflag/basic/tips_end_tricks/dos/","text":"FINGERPRINT DOS/DDOS # Fingerprinting the type of DoS/DDoS: # Ref. https://www.trustwave.com/Resources/SpiderLabsBlog/PCAP-Files-Are-Great-Arn-t-They--/ Volumetric: Bandwidth consumption Example, sustaining sending 1Gb of traffic to 10Mb connection # Ref. http://freecode.com/projects/iftop # iftop -n and Protocol: Use of specific protocol Example, SYN Flood, ICMP Flood, UDP flood # # tshark -r <FILE NAME>,pcap -q -z io,phs # tshark -c 1000 -q -z io,phs # tcpdump -tn r $FILE I awk -F '. ' '{print $1\",\"$2\".\"$3\",\"$4}' I sort I uniq -c I sort -n I tail # tcpdump -qnn \"tcp[tcpflags] & (tcp-syn) != 0\" # netstat -s Example, isolate one protocol and or remove other protocols # # tcpdump -nn not arp and not icmp and not udp # tcpdump -nn tcp Resource: State and connection exhaustion Example, Firewall can handle 10,000 simultaneous connections, and attacker sends 20,000 # # netstat -n I awk '{print $6}' I sort I uniq -c sort -nr I head Application: Layer 7 attacks Example, HTTP GET flood, for a large image file. # # tshark -c 10000 -T fields -e http.host| uniq -c | sort -r | head -n 10 so rt | # tshark -r capture6 -T fields -e http.request.full\\_uri I sort I uniq -c I sort -r I head -n 10c # tcpdump -n 'tcp[32:4] = 0x47455420' I cut -f 7- -d II\u2022 II Example, look for excessive file requests, GIF, ZIP,JPEG, PDF, PNG. # # tshark -Y \"http contains 11ff :d811 11 11 \"http contains 11GIF89a11 \" I I \"http contains 11\\x50\\x4B\\x03\\x0411 11 11 \"http contains\\xff\\xd8 11 11 11 \"http contains 11%PDF11 11 I I \"http contains \"\\x89\\x50\\x4E\\x47\"\" Example, Look for web application 'user-agent' pattern of abuse. # # tcpdump -c 1000 -Ann I grep -Ei 'user-agent' sort I uniq -c I sort -nr I head -10 Example, show HTTP Header of requested resources. # # tcpdump -i en0 -A -s 500 I grep -i refer Sniff HTTP Headers for signs of repeat abuse: # # tcpdump -s 1024 -l -A dst <EXAMPLE.COM> Poison: Layer 2 attacks # Example, ARP poison, race condition DNS, DHCP # # tcpdump 'arp or icmp' # tcpdump -tnr <SAMPLE TRAFFIC FILE>.pcap ARP lawk -F ',' '{print $1\".\"$2\",\"$3\",\"$4}' I sort I uniq -c sort -n I tail # tshark -r <SAMPLE TRAFFIC FILE>.pcap -q -z io,phsl grep arp.duplicate-address-detected","title":"dos"},{"location":"capturetheflag/basic/tips_end_tricks/dos/#fingerprint-dosddos","text":"","title":"FINGERPRINT DOS/DDOS"},{"location":"capturetheflag/basic/tips_end_tricks/dos/#fingerprinting-the-type-of-dosddos","text":"Ref. https://www.trustwave.com/Resources/SpiderLabsBlog/PCAP-Files-Are-Great-Arn-t-They--/","title":"Fingerprinting the type of DoS/DDoS:"},{"location":"capturetheflag/basic/tips_end_tricks/dos/#volumetric-bandwidth-consumption-example-sustaining-sending-1gb-of-traffic-to-10mb-connection","text":"Ref. http://freecode.com/projects/iftop # iftop -n","title":"Volumetric: Bandwidth consumption Example, sustaining sending 1Gb of traffic to 10Mb connection"},{"location":"capturetheflag/basic/tips_end_tricks/dos/#and-protocol-use-of-specific-protocol-example-syn-flood-icmp-flood-udp-flood","text":"# tshark -r <FILE NAME>,pcap -q -z io,phs # tshark -c 1000 -q -z io,phs # tcpdump -tn r $FILE I awk -F '. ' '{print $1\",\"$2\".\"$3\",\"$4}' I sort I uniq -c I sort -n I tail # tcpdump -qnn \"tcp[tcpflags] & (tcp-syn) != 0\" # netstat -s","title":"and Protocol: Use of specific protocol Example, SYN Flood, ICMP Flood, UDP flood"},{"location":"capturetheflag/basic/tips_end_tricks/dos/#example-isolate-one-protocol-and-or-remove-other-protocols","text":"# tcpdump -nn not arp and not icmp and not udp # tcpdump -nn tcp","title":"Example, isolate one protocol and or remove other protocols"},{"location":"capturetheflag/basic/tips_end_tricks/dos/#resource-state-and-connection-exhaustion-example-firewall-can-handle-10000-simultaneous-connections-and-attacker-sends-20000","text":"# netstat -n I awk '{print $6}' I sort I uniq -c sort -nr I head","title":"Resource: State and connection exhaustion Example, Firewall can handle 10,000 simultaneous connections, and attacker sends 20,000"},{"location":"capturetheflag/basic/tips_end_tricks/dos/#application-layer-7-attacks-example-http-get-flood-for-a-large-image-file","text":"# tshark -c 10000 -T fields -e http.host| uniq -c | sort -r | head -n 10 so rt | # tshark -r capture6 -T fields -e http.request.full\\_uri I sort I uniq -c I sort -r I head -n 10c # tcpdump -n 'tcp[32:4] = 0x47455420' I cut -f 7- -d II\u2022 II","title":"Application: Layer 7 attacks Example, HTTP GET flood, for a large image file."},{"location":"capturetheflag/basic/tips_end_tricks/dos/#example-look-for-excessive-file-requests-gif-zipjpeg-pdf-png","text":"# tshark -Y \"http contains 11ff :d811 11 11 \"http contains 11GIF89a11 \" I I \"http contains 11\\x50\\x4B\\x03\\x0411 11 11 \"http contains\\xff\\xd8 11 11 11 \"http contains 11%PDF11 11 I I \"http contains \"\\x89\\x50\\x4E\\x47\"\"","title":"Example, look for excessive file requests, GIF, ZIP,JPEG, PDF, PNG."},{"location":"capturetheflag/basic/tips_end_tricks/dos/#example-look-for-web-application-user-agent-pattern-of-abuse","text":"# tcpdump -c 1000 -Ann I grep -Ei 'user-agent' sort I uniq -c I sort -nr I head -10","title":"Example, Look for web application 'user-agent' pattern of abuse."},{"location":"capturetheflag/basic/tips_end_tricks/dos/#example-show-http-header-of-requested-resources","text":"# tcpdump -i en0 -A -s 500 I grep -i refer","title":"Example, show HTTP Header of requested resources."},{"location":"capturetheflag/basic/tips_end_tricks/dos/#sniff-http-headers-for-signs-of-repeat-abuse","text":"# tcpdump -s 1024 -l -A dst <EXAMPLE.COM>","title":"Sniff HTTP Headers for signs of repeat abuse:"},{"location":"capturetheflag/basic/tips_end_tricks/dos/#poison-layer-2-attacks","text":"","title":"Poison: Layer 2 attacks"},{"location":"capturetheflag/basic/tips_end_tricks/dos/#example-arp-poison-race-condition-dns-dhcp","text":"# tcpdump 'arp or icmp' # tcpdump -tnr <SAMPLE TRAFFIC FILE>.pcap ARP lawk -F ',' '{print $1\".\"$2\",\"$3\",\"$4}' I sort I uniq -c sort -n I tail # tshark -r <SAMPLE TRAFFIC FILE>.pcap -q -z io,phsl grep arp.duplicate-address-detected","title":"Example, ARP poison, race condition DNS, DHCP"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/","text":"WINDOWS # Pipe output to clipboard: # C:> some_command.exe I clip Output clip to file: (Requires PowerShell 5) # PS C:> Get-Clipboard> clip.txt Add time stamps into log file: # C:> echo %DATE% %TIME%>> ,txt Add/Modify registry value remotely: # C:> reg add \\ \\HKLM\\Software\\ Get registry value remotely: C:> reg query \\ \\HKLM\\Software\\ Test to see if Registry Path exists: # PS C:> Test-Path \"HKCU:\\Software\\Microsoft\\ \" Copy files remotely: # C:> robocopy C:\\ \\ \\ /E Check to see if certain file extensions are in adirectory: # PS C:> Test-Path C:\\Scripts\\Archive* -include \u00b7PSl, ,VbS Show contents of a file: # C:> type Combine contents of multiple files: # C:> type > Desktops, allows multiple Desktop Screens: # Ref. https://technet.microsoft.com/enus/sysinternals/cc817881 Run live option: # C:> \"%ProgramFiles%\\Internet Explorer\\iexplore.exe \"https://live.sysinternals.com/desktops.exe Remote mounting, Read and Read/Write: # C:> net share MyShare_R=c:\\ /GRANT:EVERYONE,READ C:> net share MyShare_RW=c:\\ /GRANT:EVERYONE,FULL Remote task execution using PSEXEC: # Ref. https://technet.microsoft.com/enus/sysinternals/psexec.aspx C:> psexec.exe \\ -u -p /C C:\\ .exe C:> psexec @(:\\ .txt -u -p C:\\ ,exe >> C:\\ ,txt C:> psexec.exe @(:\\ .csv -u \\ -p /c C:\\ .exe Remote task execution and send output to share: # C:> wmic /node:ComputerName process call createucmd,exe /c netstat -an > \\ \\ ,txtn Compare two files for changes: # PS C:> Compare-Object (Get-Content , , log) -DifferenceObject (Get-Content . ,log) Remote task execution using PowerShell: # PS C:> Invoke-Command - { } PowerShell Command Help: # PS C:> Get-Help -full LINUX # Analyze traffic remotely over ssh: # # ssh root@<REMOTE IP ADDRESS OF HOST TO SNIFF>tcpdump -i any -U -s 0 -w - 'not port 22' Manually add note/data to syslog: # logger usomething important to note in Log\" # dmesg I grep # Simple read only mounting: # mount -o ro /dev/ /mnt # Mounting remotely over SSH: # apt-get install sshfs # adduser fuse # Log out and log back in. # mkdir \ufffd/ sshfs @ :/ \ufffd/ # Creating SMB share in Linux: # useradd -m # passwd # smbpasswd -a # echo [Share] >> /etc/samba/smb.conf # echo / >>/etc/samba/smb.conf # echo available = yes >> /etc/samba/smb.conf # echo valid users = >>/etc/samba/smb.conf # echo read only = no >> /etc/samba/smb.conf # echo browsable = yes >> /etc/samba/smb.conf # echo public = yes >> /etc/samba/smb.conf # echo writable = yes >> /etc/samba/smb.conf # service smbd restart # Visit share from remote system: # smb:\\ Copy files to remote system: # scp @ :/ Mount and SMB share to remote system: # mount -t smbfs -o username= // / /mnt/ / # Monitor a website or file is still up/there: # while :; do curl -sSr http:// I head -n 1; # sleep 60; done","title":"os_cheats"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#windows","text":"","title":"WINDOWS"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#pipe-output-to-clipboard","text":"C:> some_command.exe","title":"Pipe output to clipboard:"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#i-clip-output-clip-to-file-requires-powershell-5","text":"PS C:> Get-Clipboard> clip.txt","title":"I clip Output clip to file: (Requires PowerShell 5)"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#add-time-stamps-into-log-file","text":"C:> echo %DATE% %TIME%>> ,txt","title":"Add time stamps into log file:"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#addmodify-registry-value-remotely","text":"C:> reg add \\ \\HKLM\\Software\\ Get registry value remotely: C:> reg query \\ \\HKLM\\Software\\","title":"Add/Modify registry value remotely:"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#test-to-see-if-registry-path-exists","text":"PS C:> Test-Path \"HKCU:\\Software\\Microsoft\\ \"","title":"Test to see if Registry Path exists:"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#copy-files-remotely","text":"C:> robocopy C:\\ \\ \\ /E","title":"Copy files remotely:"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#check-to-see-if-certain-file-extensions-are-in-adirectory","text":"PS C:> Test-Path C:\\Scripts\\Archive* -include \u00b7PSl, ,VbS","title":"Check to see if certain file extensions are in adirectory:"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#show-contents-of-a-file","text":"C:> type","title":"Show contents of a file:"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#combine-contents-of-multiple-files","text":"C:> type >","title":"Combine contents of multiple files:"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#desktops-allows-multiple-desktop-screens","text":"Ref. https://technet.microsoft.com/enus/sysinternals/cc817881","title":"Desktops, allows multiple Desktop Screens:"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#run-live-option","text":"C:> \"%ProgramFiles%\\Internet Explorer\\iexplore.exe \"https://live.sysinternals.com/desktops.exe","title":"Run live option:"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#remote-mounting-read-and-readwrite","text":"C:> net share MyShare_R=c:\\ /GRANT:EVERYONE,READ C:> net share MyShare_RW=c:\\ /GRANT:EVERYONE,FULL","title":"Remote mounting, Read and Read/Write:"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#remote-task-execution-using-psexec","text":"Ref. https://technet.microsoft.com/enus/sysinternals/psexec.aspx C:> psexec.exe \\ -u -p /C C:\\ .exe C:> psexec @(:\\ .txt -u -p C:\\ ,exe >> C:\\ ,txt C:> psexec.exe @(:\\ .csv -u \\ -p /c C:\\ .exe","title":"Remote task execution using PSEXEC:"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#remote-task-execution-and-send-output-to-share","text":"C:> wmic /node:ComputerName process call createucmd,exe /c netstat -an > \\ \\ ,txtn","title":"Remote task execution and send output to share:"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#compare-two-files-for-changes","text":"PS C:> Compare-Object (Get-Content , , log) -DifferenceObject (Get-Content . ,log)","title":"Compare two files for changes:"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#remote-task-execution-using-powershell","text":"PS C:> Invoke-Command - { }","title":"Remote task execution using PowerShell:"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#powershell-command-help","text":"PS C:> Get-Help -full","title":"PowerShell Command Help:"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#linux","text":"","title":"LINUX"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#analyze-traffic-remotely-over-ssh","text":"# ssh root@<REMOTE IP ADDRESS OF HOST TO SNIFF>tcpdump -i any -U -s 0 -w - 'not port 22'","title":"Analyze traffic remotely over ssh:"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#manually-add-notedata-to-syslog","text":"","title":"Manually add note/data to syslog:"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#logger-usomething-important-to-note-in-log","text":"","title":"logger usomething important to note in Log\""},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#dmesg-i-grep","text":"","title":"dmesg I grep "},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#simple-read-only-mounting","text":"","title":"Simple read only mounting:"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#mount-o-ro-dev-mnt","text":"","title":"mount -o ro /dev/ /mnt"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#mounting-remotely-over-ssh","text":"","title":"Mounting remotely over SSH:"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#apt-get-install-sshfs","text":"","title":"apt-get install sshfs"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#adduser-fuse","text":"","title":"adduser  fuse"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#log-out-and-log-back-in","text":"mkdir \ufffd/","title":"Log out and log back in."},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#sshfs","text":"","title":"sshfs @:/ \ufffd/"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#creating-smb-share-in-linux","text":"","title":"Creating SMB share in Linux:"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#useradd-m","text":"","title":"useradd -m "},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#passwd","text":"","title":"passwd "},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#smbpasswd-a","text":"","title":"smbpasswd -a "},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#echo-share-etcsambasmbconf","text":"","title":"echo [Share] &gt;&gt; /etc/samba/smb.conf"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#echo-etcsambasmbconf","text":"","title":"echo / &gt;&gt;/etc/samba/smb.conf"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#echo-available-yes-etcsambasmbconf","text":"","title":"echo available = yes &gt;&gt; /etc/samba/smb.conf"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#echo-valid-users-etcsambasmbconf","text":"","title":"echo valid users =  &gt;&gt;/etc/samba/smb.conf"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#echo-read-only-no-etcsambasmbconf","text":"","title":"echo read only = no &gt;&gt; /etc/samba/smb.conf"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#echo-browsable-yes-etcsambasmbconf","text":"","title":"echo browsable = yes &gt;&gt; /etc/samba/smb.conf"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#echo-public-yes-etcsambasmbconf","text":"","title":"echo public = yes &gt;&gt; /etc/samba/smb.conf"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#echo-writable-yes-etcsambasmbconf","text":"","title":"echo writable = yes &gt;&gt; /etc/samba/smb.conf"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#service-smbd-restart","text":"","title":"service smbd restart"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#visit-share-from-remote-system","text":"smb:\\","title":"Visit share from remote system:"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#copy-files-to-remote-system","text":"scp @ :/","title":"Copy files to remote system:"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#mount-and-smb-share-to-remote-system","text":"","title":"Mount and SMB share to remote system:"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#mount-t-smbfs-o-username-mnt","text":"","title":"mount -t smbfs -o username= /// /mnt//"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#monitor-a-website-or-file-is-still-upthere","text":"","title":"Monitor a website or file is still up/there:"},{"location":"capturetheflag/basic/tips_end_tricks/os_cheats/#while-do-curl-ssr-http-i-head-n-1","text":"sleep 60; done","title":"while :; do curl -sSr http:// I head -n 1;"},{"location":"capturetheflag/basic/tips_end_tricks/snort/","text":"SNORT RULES # Snort Rules to detect Meterpreter traffic: # Ref.https://blog.didierstevens.com/2015/06/16/metasploit-meterpreter-reverse-https-snort-rule/ alert tcp $HOME_NET any-> $EXTERNAL_NET $HTTP_PORTS (msg:\"Metasploit User Agent String\"; flow:to_server,established; content:\"User-Agentl3al Mozilla/4,0 (compatible\\; MSIE 6.0\\; Windows NT 5.1) l0d 0al\"; http_header; classtype:trojanactivity; reference:url,blog,didierstevens.com/2015/03/16/quic kpost-metasploit-user-agent-strings/; sid:1618000; rev:1;) alert tcp $HOME_NET any-> $EXTERNAL_NET $HTTP_PORTS ( msg: \"Metasploit User Agent St ring\"; flow:to_server,established; content:\"User-Agentl3al Mozilla/4.0 (compatible\\; MSIE 6,1\\; Windows NT) l0d 0al\"; http_header; classtype:trojan-activity; reference:url,blog,didierstevens.com/2015/03/16/quic kpost-metasploit-user-agent-strings/; sid:1618001; rev: 1;) alert tcp $HOME_NET any-> $EXTERNAL_NET $HTTP_PORTS (msg: \"Metasploit User Agent String\"; flow:to_server,established; content:\"User-Agentl3al Mozilla/4,0 (compatible\\; MSIE 7,0\\; Windows NT 6.0) l0d 0al\"; http_header; classtype:trojanactivity; reference:url,blog.didierstevens.com/2015/03/16/quic kpost-metasploit-user-agent-strings/; sid:1618002; rev: 1;) alert tcp $HOME_NET any-> $EXTERNAL_NET $HTTP_PORTS (msg:\"Metasploit User Agent String\"; flow:to_server,established; content:\"User-Agentl3al Mozilla/4,0 (compatible\\; MSIE 7,0\\; Windows NT 6,0\\; Trident/4,0\\; SIMBAR={7DB0F6DE-8DE7-4841-9084- 28FA914B0F2E}\\; SLCCl\\; ,Nl0d 0al\"; http_header; classtype:trojan-activity; reference:url,blog.didierstevens.com/2015/03/16/quic kpost-metasploit-user-agent-strings/; sid:1618003; rev: 1;) alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:\"Metasploit User Agent String\"; flow:to_server,established; content:\"User-Agentl3al Mozilla/4.0 (compatible\\; Metasploit RSPEC)l0d 0al\"; http_header; classtype:trojan-activity; reference:url,blog,didierstevens.com/2015/03/16/quic kpost-metasploit-user-agent-strings/; sid:1618004; rev: 1;) alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:\"Metasploit User Agent String\"; flow:to_server,established; content:\"User-Agentl3al Mozilla/5,0 (Windows\\; U\\; Windows NT 5,1\\; en-US) AppleWebKit/525,13 (KHTML, like Gecko) Chrome/4.0.221.6 Safari/525,13l0d 0al\"; http_header; classtype:trojan-activity; reference:url,blog.didierstevens.com/2015/03/16/quic kpost-metasploit-user-agent-strings/; sid:1618005; rev: 1;) alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS ( msg: \"Metasploit User Agent St ring\"; flow:to_server,established; content:\"User-Agentl3al Mozilla/5.0 (compatible\\; Googlebot/2.1\\; +http://www.google.com/bot.html) l0d 0al\"; http_header; classtype:trojan-activity; reference:url,blog,didierstevens.com/2015/03/16/quic kpost-metasploit-user-agent-strings/; sid:1618006; rev: 1;) alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg: \"Metasploit User Agent St ring\"; flow:to_server,established; content:\"User-Agentl3al Mozilla/5,0 (compatible\\; MSIE 10,0\\; Windows NT 6,1\\; Trident/6,0) l0d 0al\"; http_header; classtype:trojan-activity; reference:url,blog.didierstevens.com/2015/03/16/quic kpost-metasploit-user-agent-strings/; sid:1618007; rev: 1;) Snort Rules to detect PSEXEC traffic: # Ref. https://github.com/John-Lin/dockersnort/blob/master/snortrules-snapshot2972/rules/policy-other.rules alert tcp $HOME_NET any -> $HOME_NET [139,445] (msg:\"POLICY-OTHER use of psexec remote admin ist rat ion tool\"; flow: to_server, established; content:\" IFFISMB1A2I\"; depth:5; offset:4; content:\"ISC .00 I p I 00 Is I 00 I e I 00 Ix I 00 I e I 00 I c I 00 I s I 00 Iv I 00 I c\" ; nocase; metadata:service netbios-ssn; reference:url,technet.microsoft.com/enus/sysinternals/bb897553.aspx; classtype:policyviolation; sid:24008; rev:1;) alert tcp $HOME_NET any -> $HOME_NET [139,445] (msg:\"POLICY-OTHER use of psexec remote administration tool SMBv2\"; flow:to_server,established; content:\"IFEISMB\"; depth:8; nocase; content:\"105 001\"; within:2; distance:8; content:\"Pl001Sl00IEl00IXl00IEl00ISl00IVl00ICl00I\"; fast_pattern:only; metadata:service netbios-ssn; reference:url,technet.microsoft,com/enus/sysinternals/bb897553.aspx[l]; classtype:policyviolation; sid:30281; rev:1;)","title":"snort"},{"location":"capturetheflag/basic/tips_end_tricks/snort/#snort-rules","text":"","title":"SNORT RULES"},{"location":"capturetheflag/basic/tips_end_tricks/snort/#snort-rules-to-detect-meterpreter-traffic","text":"Ref.https://blog.didierstevens.com/2015/06/16/metasploit-meterpreter-reverse-https-snort-rule/ alert tcp $HOME_NET any-> $EXTERNAL_NET $HTTP_PORTS (msg:\"Metasploit User Agent String\"; flow:to_server,established; content:\"User-Agentl3al Mozilla/4,0 (compatible\\; MSIE 6.0\\; Windows NT 5.1) l0d 0al\"; http_header; classtype:trojanactivity; reference:url,blog,didierstevens.com/2015/03/16/quic kpost-metasploit-user-agent-strings/; sid:1618000; rev:1;) alert tcp $HOME_NET any-> $EXTERNAL_NET $HTTP_PORTS ( msg: \"Metasploit User Agent St ring\"; flow:to_server,established; content:\"User-Agentl3al Mozilla/4.0 (compatible\\; MSIE 6,1\\; Windows NT) l0d 0al\"; http_header; classtype:trojan-activity; reference:url,blog,didierstevens.com/2015/03/16/quic kpost-metasploit-user-agent-strings/; sid:1618001; rev: 1;) alert tcp $HOME_NET any-> $EXTERNAL_NET $HTTP_PORTS (msg: \"Metasploit User Agent String\"; flow:to_server,established; content:\"User-Agentl3al Mozilla/4,0 (compatible\\; MSIE 7,0\\; Windows NT 6.0) l0d 0al\"; http_header; classtype:trojanactivity; reference:url,blog.didierstevens.com/2015/03/16/quic kpost-metasploit-user-agent-strings/; sid:1618002; rev: 1;) alert tcp $HOME_NET any-> $EXTERNAL_NET $HTTP_PORTS (msg:\"Metasploit User Agent String\"; flow:to_server,established; content:\"User-Agentl3al Mozilla/4,0 (compatible\\; MSIE 7,0\\; Windows NT 6,0\\; Trident/4,0\\; SIMBAR={7DB0F6DE-8DE7-4841-9084- 28FA914B0F2E}\\; SLCCl\\; ,Nl0d 0al\"; http_header; classtype:trojan-activity; reference:url,blog.didierstevens.com/2015/03/16/quic kpost-metasploit-user-agent-strings/; sid:1618003; rev: 1;) alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:\"Metasploit User Agent String\"; flow:to_server,established; content:\"User-Agentl3al Mozilla/4.0 (compatible\\; Metasploit RSPEC)l0d 0al\"; http_header; classtype:trojan-activity; reference:url,blog,didierstevens.com/2015/03/16/quic kpost-metasploit-user-agent-strings/; sid:1618004; rev: 1;) alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:\"Metasploit User Agent String\"; flow:to_server,established; content:\"User-Agentl3al Mozilla/5,0 (Windows\\; U\\; Windows NT 5,1\\; en-US) AppleWebKit/525,13 (KHTML, like Gecko) Chrome/4.0.221.6 Safari/525,13l0d 0al\"; http_header; classtype:trojan-activity; reference:url,blog.didierstevens.com/2015/03/16/quic kpost-metasploit-user-agent-strings/; sid:1618005; rev: 1;) alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS ( msg: \"Metasploit User Agent St ring\"; flow:to_server,established; content:\"User-Agentl3al Mozilla/5.0 (compatible\\; Googlebot/2.1\\; +http://www.google.com/bot.html) l0d 0al\"; http_header; classtype:trojan-activity; reference:url,blog,didierstevens.com/2015/03/16/quic kpost-metasploit-user-agent-strings/; sid:1618006; rev: 1;) alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg: \"Metasploit User Agent St ring\"; flow:to_server,established; content:\"User-Agentl3al Mozilla/5,0 (compatible\\; MSIE 10,0\\; Windows NT 6,1\\; Trident/6,0) l0d 0al\"; http_header; classtype:trojan-activity; reference:url,blog.didierstevens.com/2015/03/16/quic kpost-metasploit-user-agent-strings/; sid:1618007; rev: 1;)","title":"Snort Rules to detect Meterpreter traffic:"},{"location":"capturetheflag/basic/tips_end_tricks/snort/#snort-rules-to-detect-psexec-traffic","text":"Ref. https://github.com/John-Lin/dockersnort/blob/master/snortrules-snapshot2972/rules/policy-other.rules alert tcp $HOME_NET any -> $HOME_NET [139,445] (msg:\"POLICY-OTHER use of psexec remote admin ist rat ion tool\"; flow: to_server, established; content:\" IFFISMB1A2I\"; depth:5; offset:4; content:\"ISC .00 I p I 00 Is I 00 I e I 00 Ix I 00 I e I 00 I c I 00 I s I 00 Iv I 00 I c\" ; nocase; metadata:service netbios-ssn; reference:url,technet.microsoft.com/enus/sysinternals/bb897553.aspx; classtype:policyviolation; sid:24008; rev:1;) alert tcp $HOME_NET any -> $HOME_NET [139,445] (msg:\"POLICY-OTHER use of psexec remote administration tool SMBv2\"; flow:to_server,established; content:\"IFEISMB\"; depth:8; nocase; content:\"105 001\"; within:2; distance:8; content:\"Pl001Sl00IEl00IXl00IEl00ISl00IVl00ICl00I\"; fast_pattern:only; metadata:service netbios-ssn; reference:url,technet.microsoft,com/enus/sysinternals/bb897553.aspx[l]; classtype:policyviolation; sid:30281; rev:1;)","title":"Snort Rules to detect PSEXEC traffic:"},{"location":"capturetheflag/basic/tips_end_tricks/tools/","text":"PREBUILT ISO, VIRTUAL MACHINE AND DISTRIBUTIONS # KALI - Open Source Pentesting Distribution # Ref. https://www.kali.org ![kali](https://upload.wikimedia.org/wikipedia/commons/thumb/4/4b/Kali_Linux_2.0_wordmark.svg/1200px-Kali_Linux_2.0_wordmark.svg.png) SIFT - SANS Investigative Forensics Toolkit # Ref. http://sift.readthedocs.org/ REMNUX - A Linux Toolkit for Reverse-Engineering and Analyzing Malware # Ref. https://remnux.org OPEN VAS - Open Source vulnerability scanner and manager # Ref. http://www.openvas.org MOLOCH - Large scale IPv4 packet capturing (PCAP), indexing and database system # Ref. https://github.com/aol/moloch/wiki SECURITY ONION - Linux distro for intrusion detection, network security monitoring, and log management # Ref. https://security-onionsolutions.github.io/security-onion/ NAGIOS - Network Monitoring, Alerting, Response, and Reporting Tool # Ref. https://www.nagios.org OSSEC - Scalable, multi-platform, open source Hostbased Intrusion Detection System # Ref. http://ossec.github.io SAMURAI WTF - Pre-configured web pen-testing environment # Ref. http://samurai.inguardians.com RTIR - Request Tracker for Incident Response # Ref. https://www.bestpractical.com/rtir/ HONEYDRIVE - Pre-configured honeypot software packages # Ref. http://sourceforge.net/projects/honeydrive/ The Enhanced Mitigation Experience Toolkit - helps prevent vulnerabilities in software from being successfully exploited # Ref. https://support.microsoft.com/en-us/kb/2458544 ATTACK SURFACE ANALYZER BY MICROSOFT - Baseline Tool # Ref. https://www.microsoft.com/enus/download/confirmation.aspx?id=24487 WINDOWS TO GO - USB Portable Windows 8 # Ref. https://technet.microsoft.com/enus/library/hh831833.aspx WINFE - Windows Forensic Environment on CD/USB # Ref. http://winfe.wordpress.com/ DCEPT - Deploying and detecting use of Active Directory honeytokens # Ref. https://www.secureworks.com/blog/dcept TAILS - The Amnesic Incognito Live System # Ref. https://tails.boum.org","title":"tools"},{"location":"capturetheflag/basic/tips_end_tricks/tools/#prebuilt-iso-virtual-machine-and-distributions","text":"","title":"PREBUILT ISO, VIRTUAL MACHINE AND DISTRIBUTIONS"},{"location":"capturetheflag/basic/tips_end_tricks/tools/#kali-open-source-pentesting-distribution","text":"Ref. https://www.kali.org ![kali](https://upload.wikimedia.org/wikipedia/commons/thumb/4/4b/Kali_Linux_2.0_wordmark.svg/1200px-Kali_Linux_2.0_wordmark.svg.png)","title":"KALI - Open Source Pentesting Distribution"},{"location":"capturetheflag/basic/tips_end_tricks/tools/#sift-sans-investigative-forensics-toolkit","text":"Ref. http://sift.readthedocs.org/","title":"SIFT - SANS Investigative Forensics Toolkit"},{"location":"capturetheflag/basic/tips_end_tricks/tools/#remnux-a-linux-toolkit-for-reverse-engineering-and-analyzing-malware","text":"Ref. https://remnux.org","title":"REMNUX - A Linux Toolkit for Reverse-Engineering and Analyzing Malware"},{"location":"capturetheflag/basic/tips_end_tricks/tools/#open-vas-open-source-vulnerability-scanner-and-manager","text":"Ref. http://www.openvas.org","title":"OPEN VAS - Open Source vulnerability scanner and manager"},{"location":"capturetheflag/basic/tips_end_tricks/tools/#moloch-large-scale-ipv4-packet-capturing-pcap-indexing-and-database-system","text":"Ref. https://github.com/aol/moloch/wiki","title":"MOLOCH - Large scale IPv4 packet capturing (PCAP), indexing and database system"},{"location":"capturetheflag/basic/tips_end_tricks/tools/#security-onion-linux-distro-for-intrusion-detection-network-security-monitoring-and-log-management","text":"Ref. https://security-onionsolutions.github.io/security-onion/","title":"SECURITY ONION - Linux distro for intrusion detection, network security monitoring, and log management"},{"location":"capturetheflag/basic/tips_end_tricks/tools/#nagios-network-monitoring-alerting-response-and-reporting-tool","text":"Ref. https://www.nagios.org","title":"NAGIOS - Network Monitoring, Alerting, Response, and Reporting Tool"},{"location":"capturetheflag/basic/tips_end_tricks/tools/#ossec-scalable-multi-platform-open-source-hostbased-intrusion-detection-system","text":"Ref. http://ossec.github.io","title":"OSSEC - Scalable, multi-platform, open source Hostbased Intrusion Detection System"},{"location":"capturetheflag/basic/tips_end_tricks/tools/#samurai-wtf-pre-configured-web-pen-testing-environment","text":"Ref. http://samurai.inguardians.com","title":"SAMURAI WTF - Pre-configured web pen-testing environment"},{"location":"capturetheflag/basic/tips_end_tricks/tools/#rtir-request-tracker-for-incident-response","text":"Ref. https://www.bestpractical.com/rtir/","title":"RTIR - Request Tracker for Incident Response"},{"location":"capturetheflag/basic/tips_end_tricks/tools/#honeydrive-pre-configured-honeypot-software-packages","text":"Ref. http://sourceforge.net/projects/honeydrive/","title":"HONEYDRIVE - Pre-configured honeypot software packages"},{"location":"capturetheflag/basic/tips_end_tricks/tools/#the-enhanced-mitigation-experience-toolkit-helps-prevent-vulnerabilities-in-software-from-being-successfully-exploited","text":"Ref. https://support.microsoft.com/en-us/kb/2458544","title":"The Enhanced Mitigation Experience Toolkit - helps prevent vulnerabilities in software from being successfully exploited"},{"location":"capturetheflag/basic/tips_end_tricks/tools/#attack-surface-analyzer-by-microsoft-baseline-tool","text":"Ref. https://www.microsoft.com/enus/download/confirmation.aspx?id=24487","title":"ATTACK SURFACE ANALYZER BY MICROSOFT - Baseline Tool"},{"location":"capturetheflag/basic/tips_end_tricks/tools/#windows-to-go-usb-portable-windows-8","text":"Ref. https://technet.microsoft.com/enus/library/hh831833.aspx","title":"WINDOWS TO GO - USB Portable Windows 8"},{"location":"capturetheflag/basic/tips_end_tricks/tools/#winfe-windows-forensic-environment-on-cdusb","text":"Ref. http://winfe.wordpress.com/","title":"WINFE - Windows Forensic Environment on CD/USB"},{"location":"capturetheflag/basic/tips_end_tricks/tools/#dcept-deploying-and-detecting-use-of-active-directory-honeytokens","text":"Ref. https://www.secureworks.com/blog/dcept","title":"DCEPT - Deploying and detecting use of Active Directory honeytokens"},{"location":"capturetheflag/basic/tips_end_tricks/tools/#tails-the-amnesic-incognito-live-system","text":"Ref. https://tails.boum.org","title":"TAILS - The Amnesic Incognito Live System"},{"location":"cli/build/","text":"","title":"build"},{"location":"cli/install/","text":"","title":"Installation"},{"location":"cli/tags/","text":"","title":"tags"},{"location":"cli/templates/","text":"","title":"templates"},{"location":"contributing/get-started/","text":"Contributing # Github has a great guide for contributing to open source projects: Contributing to a project Fork the repository Clone your fork Making and pushing changes Making a Pull Request Huzzah! thg Specifics # In general, we like to keep things documented. You should add documentation to any new functionality, and update it for any changed functionality. Our docstrings use the [Google Style Python Docstrings] (https://sphinxcontrib-napoleon.readthedocs.org/en/latest/example_google.html#example-google). Finally, it is probably a good idea to run the test suite locally before doing the pull-request to make sure everything works, however this is not a requirement. Once you are ready to pull-request, you should figure out if your changes or a bugfix in stable or beta. If it is a bugfix in stable or beta, you should do the pull-request against the branch in question, and otherwise your pull-request should be against the dev branch.","title":"Get Started"},{"location":"contributing/get-started/#contributing","text":"Github has a great guide for contributing to open source projects: Contributing to a project Fork the repository Clone your fork Making and pushing changes Making a Pull Request Huzzah!","title":"Contributing"},{"location":"contributing/get-started/#thg-specifics","text":"In general, we like to keep things documented. You should add documentation to any new functionality, and update it for any changed functionality. Our docstrings use the [Google Style Python Docstrings] (https://sphinxcontrib-napoleon.readthedocs.org/en/latest/example_google.html#example-google). Finally, it is probably a good idea to run the test suite locally before doing the pull-request to make sure everything works, however this is not a requirement. Once you are ready to pull-request, you should figure out if your changes or a bugfix in stable or beta. If it is a bugfix in stable or beta, you should do the pull-request against the branch in question, and otherwise your pull-request should be against the dev branch.","title":"thg Specifics"},{"location":"tutorials/anti_forensic/","text":"","title":"thg_anti_forensic"},{"location":"tutorials/automation/","text":"","title":"thg_automation"},{"location":"tutorials/automobile/","text":"","title":"thg_automobile"},{"location":"tutorials/auxiliares/","text":"","title":"thg_auxiliares"},{"location":"tutorials/backdoor/","text":"","title":"thg_backdoor"},{"location":"tutorials/binary/","text":"","title":"thg_binary"},{"location":"tutorials/bluetooth/","text":"","title":"thg_bluetooth"},{"location":"tutorials/code_audit/","text":"","title":"thg_code_audit"},{"location":"tutorials/cracker/","text":"","title":"thg_cracker"},{"location":"tutorials/crypto/","text":"","title":"thg_crypto"},{"location":"tutorials/cryptography/","text":"","title":"thg_cryptography"},{"location":"tutorials/database/","text":"","title":"thg_database"},{"location":"tutorials/debugger/","text":"","title":"thg_debugger"},{"location":"tutorials/decompiler/","text":"","title":"thg_decompiler"},{"location":"tutorials/defensensive/","text":"","title":"thg_defensensive"},{"location":"tutorials/defensive/","text":"","title":"thg_defensive"},{"location":"tutorials/disassembler/","text":"","title":"thg_disassembler"},{"location":"tutorials/dos/","text":"","title":"thg_dos"},{"location":"tutorials/drone/","text":"","title":"thg_drone"},{"location":"tutorials/exploitation/","text":"","title":"thg_exploitation"},{"location":"tutorials/fingerprint/","text":"","title":"thg_fingerprint"},{"location":"tutorials/firmware/","text":"","title":"thg_firmware"},{"location":"tutorials/forensic/","text":"","title":"thg_forensic"},{"location":"tutorials/gpu/","text":"","title":"thg_gpu"},{"location":"tutorials/hardware/","text":"","title":"thg_hardware"},{"location":"tutorials/honeypot/","text":"","title":"thg_honeypot"},{"location":"tutorials/ids/","text":"","title":"thg_ids"},{"location":"tutorials/keylogger/","text":"","title":"thg_keylogger"},{"location":"tutorials/malware/","text":"","title":"thg_malware"},{"location":"tutorials/misc/","text":"","title":"thg_misc"},{"location":"tutorials/mobile/","text":"","title":"thg_mobile"},{"location":"tutorials/networking/","text":"","title":"thg_networking"},{"location":"tutorials/nfc/","text":"","title":"thg_nfc"},{"location":"tutorials/os/","text":"","title":"thg_os"},{"location":"tutorials/packer/","text":"","title":"thg_packer"},{"location":"tutorials/proxy/","text":"","title":"thg_proxy"},{"location":"tutorials/radio/","text":"","title":"thg_radio"},{"location":"tutorials/recon/","text":"","title":"thg_recon"},{"location":"tutorials/reversing/","text":"","title":"thg_reversing"},{"location":"tutorials/server/","text":"","title":"thg_server"},{"location":"tutorials/shells/","text":"","title":"thg_shells"},{"location":"tutorials/sniffer/","text":"","title":"thg_sniffer"},{"location":"tutorials/social/","text":"","title":"thg_social"},{"location":"tutorials/spoff/","text":"","title":"thg_spoff"},{"location":"tutorials/spoof/","text":"","title":"thg_spoof"},{"location":"tutorials/stego/","text":"","title":"thg_stego"},{"location":"tutorials/thg/","text":"","title":"THG"},{"location":"tutorials/thg_docs/","text":"","title":"thg_docs"},{"location":"tutorials/thg_windows/","text":"","title":"thg_windows"},{"location":"tutorials/tunnel/","text":"","title":"thg_tunnel"},{"location":"tutorials/unpacker/","text":"","title":"thg_unpacker"},{"location":"tutorials/version/","text":"","title":"thg_version"},{"location":"tutorials/voip/","text":"","title":"thg_voip"},{"location":"tutorials/wireless/","text":"","title":"thg_wireless"}]}